{"version":3,"sources":["webpack:///./src/app/mobile/pages/order-item-edit/order-item-edit.module.ts","webpack:///./src/app/mobile/pages/order-item-edit/order-item-edit.page.html","webpack:///./src/app/mobile/pages/order-item-edit/order-item-edit.page.scss","webpack:///./src/app/mobile/pages/order-item-edit/order-item-edit.page.ts"],"names":[],"mappings":"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","file":"default~mobile-pages-filial-stock-filial-stock-module~mobile-pages-order-item-edit-order-item-edit-m~0aea3000.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderItemEditPage } from './order-item-edit.page';\r\nimport { GlobalComponentsModule } from '../../../components/global-components.module';\r\nimport { MobileComponentsModule } from '../../components/mobile-components.module';\r\nimport { PipesModule } from '../../../pipes/pipes.module';\r\n\r\n// const routes: Routes = [\r\n//   {\r\n//     path: '',\r\n//     component: OrderItemEditPage\r\n//   }\r\n// ];\r\n\r\n@NgModule({\r\n  imports: [\r\n    //Custom Modules\r\n    GlobalComponentsModule,\r\n    MobileComponentsModule,\r\n    PipesModule,\r\n\r\n    //Default Modules\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    // RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [OrderItemEditPage],\r\n  entryComponents: [OrderItemEditPage]\r\n})\r\nexport class OrderItemEditPageModule { }\r\n","module.exports = \"<ion-header no-border class=\\\"app\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\" hideBackButton>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button icon-only (click)=\\\"dismiss()\\\">\\r\\n        <ion-icon name=\\\"ios-arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title class=\\\"title-default\\\">\\r\\n      <h3 ion-text class=\\\"my-font-logo\\\" no-margin>SEU PEDIDO</h3>\\r\\n    </ion-title>\\r\\n\\r\\n    <!-- <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button icon-only (click)=\\\"help()\\\">\\r\\n        <ion-icon class=\\\"help-toolbar\\\" name=\\\"md-help\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <div class=\\\"background-toolbar-right\\\"></div>\\r\\n    -->\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <header>\\r\\n    <div class=\\\"product-name\\\">\\r\\n      <h5 text-wrap padding-horizontal class=\\\"my-font-bold\\\">{{entry?.product?.name}}</h5>\\r\\n    </div>\\r\\n    <ion-grid class=\\\"info shadow shadow-light\\\" no-padding padding-horizontal no-lines>\\r\\n      <ion-row class=\\\"money\\\">\\r\\n        <ion-col size=\\\"12\\\" no-padding>\\r\\n          <p class=\\\"text-new-price\\\"><strong class=\\\"price-value\\\">R$ {{ entry?.price | number : '1.2-2' }}</strong></p>\\r\\n        </ion-col>\\r\\n        <!-- <ion-col></ion-col> -->\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"description\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <p ion-text text-wrap>{{entry?.product?.description}}</p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n    <nano-thumb [src]=\\\"entry?.product?.image\\\" [product_image]=\\\"true\\\" class=\\\"product-image shadow shadow-light\\\"></nano-thumb>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"quantity-card shadow shadow-light\\\">\\r\\n    <h6> Quantidade </h6>\\r\\n    <div class=\\\"quantity-buttons\\\">\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"decrement()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"md-remove\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <span> {{ entry.quantity }} </span>\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"increment()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"md-add\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <order-complement-list *ngFor=\\\"let complement of entry?.complements\\\" [complement]=\\\"complement\\\" (change)=\\\"calculateEntry()\\\"></order-complement-list>\\r\\n\\r\\n  <ion-item no-lines class=\\\"obs-product shadow shadow-light\\\">\\r\\n    <ion-label position=\\\"stacked\\\">Observações do produto</ion-label>\\r\\n    <ion-textarea [(ngModel)]=\\\"entry.observation\\\" placeholder=\\\"Ex: apenas orgânicos\\\"></ion-textarea>\\r\\n  </ion-item>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n\\r\\n  <ion-row class=\\\"add-button\\\" tappable color=\\\"primary\\\" (click)=\\\"addToCart()\\\" color=\\\"primary\\\" text-center>\\r\\n    <ion-col size=\\\"3\\\">\\r\\n      <coin-real [value]=\\\"totalPriceEntry\\\"></coin-real>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <h4 class=\\\"my-font-logo\\\">{{ edit || 'ADICIONAR'}} </h4>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"3\\\">\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n</ion-footer>\"","module.exports = \"ion-item {\\n  --background: white !important;\\n  background: white !important; }\\n\\nion-grid {\\n  --background: white !important;\\n  background: white !important; }\\n\\n.text {\\n  padding: 0px;\\n  margin: 0px; }\\n\\nion-header .help-toolbar {\\n  margin-right: 10px; }\\n\\n.price-value {\\n  font-size: 15px;\\n  color: green !important; }\\n\\nheader .product-name {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 4; }\\n\\nheader .product-name h5 {\\n    line-height: 1.3em; }\\n\\nheader .product-image {\\n  position: absolute;\\n  z-index: 1;\\n  top: 5vw;\\n  right: 5vw; }\\n\\nheader nano-thumb .thumb {\\n  height: 34vw;\\n  width: 34vw;\\n  max-width: 120px;\\n  max-height: 120px; }\\n\\n.quantity-card {\\n  background: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  width: 100%;\\n  margin: 10px 0;\\n  padding: 5px 10px; }\\n\\n.quantity-card h6 {\\n    margin: 10px 0;\\n    font-weight: bold; }\\n\\n.quantity-card .quantity-buttons {\\n    display: flex;\\n    align-items: center; }\\n\\n.obs-product {\\n  margin: 10px 0; }\\n\\nion-footer {\\n  background: var(--ion-color-primary); }\\n\\nion-footer span.value {\\n    color: white !important; }\\n\\nion-footer ion-row ion-col {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n\\nion-footer ion-row ion-col h4 {\\n      font-size: 1.2em !important;\\n      color: white !important;\\n      vertical-align: center !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Entry } from '../../../../models/order';\r\nimport { NavParams, NavController, AlertController, ToastController, ModalController } from '@ionic/angular';\r\nimport { CartService } from '../../../services/cart.service';\r\nimport { SystemService } from '../../../services/system.service';\r\nimport { Filial } from '../../../../models/filial';\r\n\r\n@Component({\r\n  selector: 'app-order-item-edit',\r\n  templateUrl: './order-item-edit.page.html',\r\n  styleUrls: ['./order-item-edit.page.scss'],\r\n})\r\nexport class OrderItemEditPage {\r\n\r\n  filial: Filial;\r\n\r\n  entry: Entry;\r\n  edit: string;\r\n  get totalPriceEntry() {\r\n    return this.entry.price * this.entry.quantity\r\n  }\r\n\r\n  constructor(public navParams: NavParams,\r\n    public navCtrl: NavController,\r\n    public cartProvider: CartService,\r\n    public alertCtrl: AlertController,\r\n    public toast: ToastController,\r\n    public system: SystemService,\r\n    public modalCtrl: ModalController) {\r\n\r\n    if (this.navParams.get('entry')) {\r\n      this.entry = this.navParams.get('entry')\r\n      this.edit = 'EDITAR PEDIDO'\r\n    }\r\n\r\n    else this.entry = Entry.entryFromProduct(this.navParams.get('product'))\r\n\r\n    if (this.navParams.get('filial')) this.filial = this.navParams.get('filial')\r\n    else this.filial = this.cartProvider.filial\r\n\r\n    this.calculateEntry();\r\n  }\r\n\r\n  ionViewDidEnter(): void {\r\n    this.system.setScreenName(\"OrderItemEditPage\")\r\n  }\r\n\r\n  async addToCart() {\r\n    if (!this.entry.valid) {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Você precisa selecionar os complementos obrigatórios\",\r\n        buttons: [\r\n          {\r\n            text: \"Ok\"\r\n          }\r\n        ]\r\n      })\r\n      alert.present();\r\n      return;\r\n    }\r\n    if (this.navParams.get('entry')) {\r\n      this.cartProvider.updateStorage()\r\n      this.navCtrl.goBack();\r\n      let toast = await this.toast.create({\r\n        message: `${this.entry.product.name} editado com sucesso`,\r\n        position: 'bottom',\r\n        duration: 1500\r\n      })\r\n      toast.present();\r\n    } else {\r\n      this.cartProvider.add(this.entry, this.filial, this.modalCtrl);\r\n    }\r\n  }\r\n\r\n  increment() {\r\n    this.cartProvider.increment(this.entry, 1)\r\n  }\r\n\r\n  decrement() {\r\n    this.cartProvider.increment(this.entry, -1)\r\n  }\r\n\r\n  calculateEntry() {\r\n    Entry.calculateEntryValues(this.entry)\r\n  }\r\n\r\n  async help() {\r\n    let alert = await this.alertCtrl.create({\r\n      header: \"Especificações de um produto\",\r\n      message: \"Você pode escolher dentre diversas opções para melhor personalizar seu produto. Algumas opções são obrigatórias e necessárias para a realização do pedido.\",\r\n      buttons: [\"Ok\"]\r\n    })\r\n    alert.present()\r\n  }\r\n\r\n  dismiss() {\r\n    this.modalCtrl.dismiss()\r\n  }\r\n\r\n}"],"sourceRoot":""}