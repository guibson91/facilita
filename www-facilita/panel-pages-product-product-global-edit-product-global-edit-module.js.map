{"version":3,"sources":["webpack:///./src/app/panel/pages/product/product-global-edit/product-global-edit.module.ts","webpack:///./src/app/panel/pages/product/product-global-edit/product-global-edit.page.html","webpack:///./src/app/panel/pages/product/product-global-edit/product-global-edit.page.scss","webpack:///./src/app/panel/pages/product/product-global-edit/product-global-edit.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEsB;AACN;AACnB;AAC+C;AACL;AACC;AAErF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAqB;KACjC;CACF,CAAC;AAiBF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAfvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,yFAAqB;gBACrB,2FAAsB;gBACtB,iGAAwB;gBACxB,uDAAa;gBACb,+DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;ACpCxC,o3CAAo3C,qBAAqB,qvB;;;;;;;;;;;ACAz4C,+BAA+B,gBAAgB,EAAE,QAAQ,gCAAgC,EAAE,+BAA+B,iBAAiB,oBAAoB,6BAA6B,EAAE,EAAE,6BAA6B,sBAAsB,EAAE,iBAAiB,6BAA6B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhO;AACD;AACZ;AACD;AACI;AACT;AAC8B;AACtB;AACA;AAEU;AACS;AAO7E;IAwBE,+BAAoB,OAAsB,EAChC,WAAwB,EACxB,QAAwB,EACxB,KAAqB,EACrB,SAA0B,EAC1B,MAAqB,EACrB,GAAsB;QANZ,YAAO,GAAP,OAAO,CAAe;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAe;QACrB,QAAG,GAAH,GAAG,CAAmB;IAAI,CAAC;IAErC,wCAAQ,GAAR;QAAA,iBA+CC;QA9CC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YAC/B,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QAC1B,CAAC,CAAC;QAEF,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/B,IAAI,CAAC,gEAAS,CAAC,UAAC,MAAgB;YAC/B,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC;gBAC1B,OAAO,uDAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC;;gBAE7D,OAAO,+CAAE,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEL,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAgB;YAClC,KAAI,CAAC,OAAO,GAAG,OAAO;YACtB,6BAA6B;YAC7B,IAAI,KAAI,CAAC,OAAO,EAAE;gBAChB,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC;gBAElC,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE;oBACrD,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ;oBAC9D,yDAAQ,CAAC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC;yBACpC,IAAI,CAAC,4DAAK,EAAE,CAAC;yBACb,SAAS,CAAC,UAAC,CAAC;wBACX,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;wBACxB,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE;oBAC1B,CAAC,CAAC;oBACJ,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC;wBACnB,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,EAAE;qBACjC,CAAC;iBACH;aACF;YAED,KAAI,CAAC,OAAO,GAAG,KAAK;YACpB,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QAC1B,CAAC,CAAC;IACJ,CAAC;IAEK,8CAAc,GAApB;;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,SAAS,EAAE,yFAAkB;4BAC7B,cAAc,EAAE;gCACd,MAAM,EAAE,IAAI;gCACZ,cAAc,EAAE,IAAI,CAAC,cAAc;6BACpC;yBACF,CAAC;;wBANI,KAAK,GAAG,SAMZ;wBACF,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,EAAsB;4BAC/C,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE;gCACrC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gCACvD,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ;6BACvC;wBACH,CAAC,CAAC;wBACF,KAAK,CAAC,OAAO,EAAE;;;;;KAChB;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;IAC1B,CAAC;IAED;;OAEG;IACH,sCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,sCAAM,GAAN;QAAA,iBAaC;QAZC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,uDAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EACnC;gBACE;oBACE,YAAY,EAAE,uDAAO,CAAC,QAAQ;oBAC9B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;iBAC9B;aACF,CAAC;iBACD,IAAI,CAAC,0DAAG,CAAC;gBACR,KAAI,CAAC,MAAM,EAAE;YACf,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED;;OAEG;IACH,oCAAI,GAAJ;QAAA,iBAwCC;QAvCC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,WAAW,GAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3C,gDAAgD;QAChD,WAAW,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC;QAC/C,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,SAAS;QAChD,yEAAyE;QACzE,WAAW,CAAC,MAAM,GAAG;YACnB,IAAI,EAAE,yDAAU,CAAC,SAAS;SAC3B;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,OAAO,uDAAU,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC,CAAC;SAClF;QACD,iDAAiD;QACjD,2CAA2C;QAC3C,OAAQ,WAAmB,CAAC,QAAQ,CAAC;QACrC,iDAAiD;QACjD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,uDAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC;oBACnD,YAAY,EAAE,uDAAO,CAAC,QAAQ;oBAC9B,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE;oBAC1B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;iBAC9B,CAAC,CAAC;iBACA,IAAI,CAAC,0DAAG,CAAC;gBACR,KAAI,CAAC,MAAM,EAAE;YACf,CAAC,CAAC,CAAC;SACN;QACD,mDAAmD;aAC9C;YACH,OAAO,uDAAO,CAAC,GAAG,CAAC,WAAW,EAAE;gBAC9B;oBACE,YAAY,EAAE,uDAAO,CAAC,QAAQ;oBAC9B,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE;iBAC3B;aACF,CAAC;iBACC,IAAI,CAAC,0DAAG,CAAC;gBACR,KAAI,CAAC,MAAM,EAAE;YACf,CAAC,CAAC,CAAC;SACN;IAEH,CAAC;IA1KU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAyB6B,4DAAa;YACnB,0DAAW;YACd,6DAAc;YACjB,8DAAc;YACV,8DAAe;YAClB,sEAAa;YAChB,+DAAiB;OA9BrB,qBAAqB,CA4KjC;IAAD,4BAAC;CAAA;AA5KiC","file":"panel-pages-product-product-global-edit-product-global-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProductGlobalEditPage } from './product-global-edit.page';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { CategorySelectPageModule } from '../category-select/category-select.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductGlobalEditPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    CategorySelectPageModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProductGlobalEditPage]\r\n})\r\nexport class ProductGlobalEditPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Cadastrar/Editar produto\\\" icon=\\\"menus-icon-ecommerce-43\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <!-- Informações gerais do produto -->\\r\\n      <form [formGroup]=\\\"form\\\" class=\\\"form-content\\\">\\r\\n        <ion-list>\\r\\n          <!--<ion-list class=\\\"myformlist\\\" color=\\\"light\\\">-->\\r\\n\\r\\n          <!-- Imagem e barra de progresso -->\\r\\n          <nano-uploadimage [form]=\\\"this.form\\\" [storagePath]=\\\"'products'\\\"></nano-uploadimage>\\r\\n\\r\\n          <!--Nome-->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome</ion-label>\\r\\n            <ion-input class=\\\"input\\\" formControlName=\\\"name\\\" maxlength=\\\"50\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <!--Descrição-->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Descrição</ion-label>\\r\\n            <ion-textarea class=\\\"input\\\" rows=\\\"5\\\" formControlName=\\\"description\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n          \\r\\n          <!-- Categoria -->\\r\\n          <div padding-horizontal>\\r\\n            <h3 ion-text color=\\\"tertiary\\\">Categoria</h3>\\r\\n            <h4 ion-text *ngIf=\\\"categoryActual\\\">{{categoryActual.name}}</h4>\\r\\n            <ion-button class=\\\"button-select-category\\\" fill=\\\"clear\\\" (click)=\\\"selectCategory()\\\">Selecionar categoria</ion-button>\\r\\n          </div>\\r\\n\\r\\n          <!-- Preço -->\\r\\n          <ion-item padding-horizontal item-content>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Preço base (em R$)</ion-label>\\r\\n            <money-input item-content [control]=\\\"form.controls['priceBase']\\\"></money-input>\\r\\n          </ion-item>\\r\\n\\r\\n        </ion-list>\\r\\n      </form>\\r\\n    </nano-loading>\\r\\n    <nano-buttons [canSave]=\\\"form.valid\\\" [save]=\\\"save.bind(this)\\\" [canRemove]=\\\"product\\\" [remove]=\\\"remove.bind(this)\\\"\\r\\n      [cancel]=\\\"cancel.bind(this)\\\"></nano-buttons>\\r\\n  </ion-card>\\r\\n</ion-content>\"","module.exports = \"money-input {\\n  width: 100%; }\\n\\nh2 {\\n  line-height: 1.3 !important; }\\n\\n@media (max-width: 400px) {\\n  .complement {\\n    display: flex;\\n    flex-direction: column; } }\\n\\n.button-select-category {\\n  margin-left: -7px; }\\n\\ninput:focus {\\n  outline: none !important; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Product } from '../../../../../models/product';\r\nimport { switchMap, first, tap } from 'rxjs/operators';\r\nimport { ParamMap, ActivatedRoute } from '@angular/router';\r\nimport { of, Observable, throwError } from 'rxjs';\r\nimport { MenuController, NavController, ModalController } from '@ionic/angular';\r\nimport { FilialType } from '../../../../../models/filial';\r\nimport { Category } from '../../../../../models/category';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { CategorySelectPage } from '../category-select/category-select.page';\r\n\r\n@Component({\r\n  selector: 'app-product-global-edit',\r\n  templateUrl: './product-global-edit.page.html',\r\n  styleUrls: ['./product-global-edit.page.scss'],\r\n})\r\nexport class ProductGlobalEditPage implements OnInit {\r\n\r\n  /**\r\n   * Formulário\r\n   */\r\n  form: FormGroup;\r\n\r\n  /**\r\n   * Dados do produto a ser editado.\r\n   */\r\n  product: Product;\r\n\r\n  /**\r\n   * Categoria no início da atualização\r\n   */\r\n  categoryOld: Category;\r\n\r\n  /**\r\n   * Categoria que será atualizada no produto\r\n   */\r\n  categoryActual: Category\r\n\r\n  loading: boolean;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private menuCtrl: MenuController,\r\n    private route: ActivatedRoute,\r\n    private modalCtrl: ModalController,\r\n    private shared: SharedService,\r\n    private ref: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.menuCtrl.enable(true);\r\n    this.loading = true;\r\n\r\n    this.form = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      image: [''],\r\n      priceBase: [null, Validators.required],\r\n      category: ['', Validators.required]\r\n    });\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      this.ref.detectChanges()\r\n    })\r\n\r\n    let product$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('product_id'))\r\n          return Product.object(params.get('product_id')).pipe(first())\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    product$.subscribe((product: Product) => {\r\n      this.product = product\r\n      //Página de edição de produto\r\n      if (this.product) {\r\n        this.form.patchValue(this.product)\r\n\r\n        if (this.product.category && this.product.category.id) {\r\n          this.categoryActual = this.categoryOld = this.product.category\r\n          Category.object(this.categoryActual.id)\r\n            .pipe(first())\r\n            .subscribe((c) => {\r\n              this.categoryActual = c;\r\n              this.ref.detectChanges()\r\n            })\r\n          this.form.patchValue({\r\n            category: this.categoryActual.id\r\n          })\r\n        }\r\n      }\r\n\r\n      this.loading = false\r\n      this.ref.detectChanges()\r\n    })\r\n  }\r\n\r\n  async selectCategory() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: CategorySelectPage,\r\n      componentProps: {\r\n        global: true,\r\n        categoryActual: this.categoryActual\r\n      }\r\n    });\r\n    modal.onDidDismiss().then((ev: OverlayEventDetail) => {\r\n      if (ev && ev.data && ev.data.category) {\r\n        this.form.patchValue({ category: ev.data.category.id })\r\n        this.categoryActual = ev.data.category\r\n      }\r\n    })\r\n    modal.present()\r\n  }\r\n\r\n  detect() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  /**\r\n   * Voltar página sem salvar alterações\r\n   */\r\n  cancel(): void {\r\n    this.navCtrl.navigateRoot(['product/global/list'])\r\n  }\r\n\r\n  /**\r\n   * Remove produto do database\r\n   */\r\n  remove(): Observable<any> {\r\n    if (this.product) {\r\n      return Product.remove(this.product.id,\r\n        [\r\n          {\r\n            relationship: Product.category,\r\n            removeId: this.categoryOld.id\r\n          }\r\n        ])\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Salvar alterações e redirecionar para página anterior\r\n   */\r\n  save(): Observable<any> {\r\n    console.log(\"produto a ser salvo: \", this.form.value);\r\n    let new_product: Product = this.form.value;\r\n    // Convertendo o priceBase de string para número\r\n    new_product.priceBase = +new_product.priceBase;\r\n    new_product.minimumPrice = new_product.priceBase\r\n    // Criando um produto de tipo global para depósitos (Água, gás e bebidas)\r\n    new_product.global = {\r\n      type: FilialType.WAREHOUSE\r\n    }\r\n    if (!this.categoryActual) {\r\n      return throwError(Error(\"Você precisa selecionar uma categoria para o produto\"));\r\n    }\r\n    //Remover categoria como atributo antes de salvar\r\n    //Será considerada apenas no relacionamento\r\n    delete (new_product as any).category;\r\n    // Página de edição, atualizar objeto no database\r\n    if (this.product) {\r\n      return Product.update(this.product.id, new_product, [{\r\n        relationship: Product.category,\r\n        id: this.categoryActual.id,\r\n        removeId: this.categoryOld.id\r\n      }])\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n    //Página de registro, criar novo objeto no database\r\n    else {\r\n      return Product.add(new_product, [\r\n        {\r\n          relationship: Product.category,\r\n          id: this.categoryActual.id\r\n        }\r\n      ])\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n\r\n  }\r\n\r\n}"],"sourceRoot":""}