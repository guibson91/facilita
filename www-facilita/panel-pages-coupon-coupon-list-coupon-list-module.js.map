{"version":3,"sources":["webpack:///./src/app/panel/pages/coupon/coupon-list/coupon-list.module.ts","webpack:///./src/app/panel/pages/coupon/coupon-list/coupon-list.page.html","webpack:///./src/app/panel/pages/coupon/coupon-list/coupon-list.page.scss","webpack:///./src/app/panel/pages/coupon/coupon-list/coupon-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-coupon-coupon-list-coupon-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CouponListPage } from './coupon-list.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CouponListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CouponListPage]\r\n})\r\nexport class CouponListPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <nano-navbar title=\\\"Cupons\\\" icon=\\\"menus-icon-ecommerce-46\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchString\\\" placeholder=\\\"Pesquisar\\\">\\r\\n    </ion-searchbar>\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <ion-list>\\r\\n        <div class=\\\"container\\\" no-lines padding *ngFor=\\\"let coupon of coupons$ | async | filterBy:['name']:searchString\\\"\\r\\n          text-wrap>\\r\\n          <h2 class=\\\"coupon-name\\\" [ngClass]=\\\"{inactive: !coupon?.enable}\\\">{{coupon.name}}<span *ngIf=\\\"coupon.fromTeam\\\"\\r\\n              style=\\\"color:coral\\\"><br />(TEAM)</span></h2>\\r\\n          <p [ngClass]=\\\"{inactive: !coupon?.enable}\\\">{{coupon.description}}</p>\\r\\n          <div>\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"edit(coupon)\\\" color=\\\"proceed\\\">\\r\\n              <ion-icon name=\\\"md-create\\\"></ion-icon> Editar\\r\\n            </ion-button>\\r\\n          </div>\\r\\n          <div>\\r\\n            <ion-item>\\r\\n              <ion-label>Ativo</ion-label>\\r\\n              <ion-toggle [(ngModel)]=\\\"coupon.enable\\\" (ionChange)=\\\"changeActiveStatus(coupon)\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ion-list>\\r\\n\\r\\n      <ion-item text-center padding *ngIf=\\\"!existsCoupons\\\">\\r\\n        <p ion-text>Você ainda não possui coupons</p>\\r\\n      </ion-item>\\r\\n    </nano-loading>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n\\r\\n</ion-content>\"","module.exports = \"ion-list .container {\\n  border-bottom: 1px solid #eee;\\n  display: flex !important;\\n  justify-content: space-between !important;\\n  align-items: center !important; }\\n  ion-list .container h2 {\\n    min-width: 16%;\\n    font-weight: bold !important;\\n    color: var(--ion-color-primary) !important; }\\n  ion-list .container h2.inactive, ion-list .container p.inactive {\\n    font-weight: normal !important;\\n    color: lightgrey !important;\\n    text-decoration: line-through !important; }\\n  ion-list .container ion-item ion-label {\\n    font-size: 1.2em;\\n    font-weight: bold;\\n    color: var(--ion-color-primary); }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Observable, of, combineLatest } from 'rxjs';\r\nimport { Coupon } from '../../../../../models/coupon';\r\nimport { AuthenticationService } from '../../../../services/authentication.service';\r\nimport { CouponService } from '../../../../services/coupon.service';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { MenuController, NavController } from '@ionic/angular';\r\nimport { Company } from '../../../../../models/company';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Filial } from '../../../../../models/filial';\r\n\r\n@Component({\r\n  selector: 'app-coupon-list',\r\n  templateUrl: './coupon-list.page.html',\r\n  styleUrls: ['./coupon-list.page.scss'],\r\n})\r\nexport class CouponListPage implements OnInit {\r\n\r\n  coupons$: Observable<Coupon[]>;\r\n\r\n  searchString: string;\r\n\r\n  existsCoupons: boolean\r\n\r\n  loading: boolean = true;\r\n\r\n  /**\r\n   * A empresa se for um funcionário da empresa ou dono de filial e null se for TEAM\r\n   */\r\n  company: Company\r\n\r\n  /**\r\n   * A filial se for um funcionári oda filial ou null se for TEAM ou funcionário da empresa\r\n   */\r\n  filial: Filial\r\n\r\n  constructor(public navCtrl: NavController,\r\n    private menuCtrl: MenuController,\r\n    public shared: SharedService,\r\n    private ref: ChangeDetectorRef,\r\n    public authentication: AuthenticationService,\r\n    private route: ActivatedRoute,\r\n    public couponProvider: CouponService) { }\r\n\r\n  /**\r\n   * Inicializando estruturas após entrar na página.\r\n   */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true)\r\n    this.load()\r\n  }\r\n\r\n  load() {\r\n    this.loading = true\r\n\r\n    let company$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let filial$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('filial_id'))\r\n          return Company.object(params.get('filial_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    this.coupons$ = combineLatest([\r\n      company$,\r\n      filial$\r\n    ])\r\n      .pipe(switchMap((arr: [Company, Filial]) => {\r\n        this.company = arr[0]\r\n        this.filial = arr[1]\r\n\r\n        if (this.filial) {\r\n          return this.couponProvider.getCouponsFromFilial(this.filial.id)\r\n        } else if (this.company) {\r\n          return this.couponProvider.getCouponsFromCompany(this.company.id)\r\n        } else {\r\n          return Coupon.list()\r\n        }\r\n      }))\r\n      .pipe(tap((coupons) => {\r\n        this.loading = false;\r\n        this.ref.detectChanges()\r\n        if (coupons && coupons.length > 0) {\r\n          this.existsCoupons = true;\r\n        } else {\r\n          this.existsCoupons = false;\r\n        }\r\n      }))\r\n  }\r\n\r\n  async edit(coupon: Coupon) {\r\n    await this.navCtrl.navigateRoot(['coupon/edit', { company_id: (this.company ? this.company.id : ''), coupon_id: coupon.id }])\r\n  }\r\n\r\n  changeActiveStatus(coupon: Coupon) {\r\n    console.log(\"Cupom a ser editado: \", coupon);\r\n    let couponObject: Coupon = {};\r\n    couponObject.enable = coupon.enable;\r\n    Coupon.update(coupon.id, couponObject).subscribe(() => {\r\n      console.log(\"Cupom atualizado com sucesso\");\r\n    }, error => {\r\n      console.error(\"Error\", error);\r\n    })\r\n  }\r\n\r\n  async add() {\r\n    await this.navCtrl.navigateRoot(['coupon/edit', { company_id: (this.company ? this.company.id : '') }])\r\n  }\r\n\r\n}"],"sourceRoot":""}