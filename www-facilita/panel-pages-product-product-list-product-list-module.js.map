{"version":3,"sources":["webpack:///./src/app/panel/pages/product/product-list/product-list.module.ts","webpack:///./src/app/panel/pages/product/product-list/product-list.page.html","webpack:///./src/app/panel/pages/product/product-list/product-list.page.scss","webpack:///./src/app/panel/pages/product/product-list/product-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-product-product-list-product-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProductListPage } from './product-list.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProductListPage]\r\n})\r\nexport class ProductListPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Produtos\\\" icon=\\\"menus-icon-pizza\\\" [helpPage]=\\\"10\\\">\\r\\n  </nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchString\\\" placeholder=\\\"Pesquisar\\\" (ionChange)=\\\"change()\\\">\\r\\n    </ion-searchbar>\\r\\n\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <ion-list>\\r\\n        <div *ngFor=\\\"let product of products | filterBy:['name', 'description']:searchString; let i = index\\\">\\r\\n          <ion-item-divider *ngIf=\\\"i == 0 || product?.category?.id != tempCategory\\\">\\r\\n            <h1 ion-text text-wrap>{{getCategoryName(product.category)}}</h1>\\r\\n          </ion-item-divider>\\r\\n          <ion-item no-lines padding text-wrap class=\\\"product\\\">\\r\\n            <!-- Imagem -->\\r\\n            <nano-thumb [ngClass]=\\\"{ 'goneImage' : !product?.image }\\\" item-left [src]=\\\"product.image\\\"></nano-thumb>\\r\\n            <!-- Nome -->\\r\\n            <h2 text-wrap padding-top padding-horizontal>\\r\\n              {{product.name}}\\r\\n            </h2>\\r\\n            <!-- Descrição -->\\r\\n            <p text-wrap padding-horizontal>{{product.description}}</p>\\r\\n\\r\\n            <p text-wrap padding-horizontal>\\r\\n              <span *ngIf=\\\"product.minimumPrice !== product.priceBase\\\"> </span>R$ {{product.minimumPrice | number : '1.2-2'}}\\r\\n            </p>\\r\\n            <div item-right>\\r\\n              <ion-button (click)=\\\"copy(product)\\\" fill=\\\"clear\\\" color=\\\"proceed\\\">\\r\\n                <ion-icon name=\\\"md-copy\\\"></ion-icon> Copiar\\r\\n              </ion-button>\\r\\n              <ion-button (click)=\\\"edit(product)\\\" fill=\\\"clear\\\" color=\\\"proceed\\\">\\r\\n                <ion-icon name=\\\"md-create\\\"></ion-icon> Editar\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n\\r\\n        <ion-item text-center padding *ngIf=\\\"!existsProducts\\\">\\r\\n          <p ion-text>Você ainda não possui nenhum produto</p>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </nano-loading>\\r\\n  </ion-card>\\r\\n  \\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n\\r\\n</ion-content>\"","module.exports = \"ion-content {\\n  background-color: #f8f8f8 !important; }\\n\\nion-grid ion-icon {\\n  margin-top: 14px;\\n  font-size: 2.2em; }\\n\\nion-item-divider {\\n  border-bottom: none !important; }\\n\\nion-item-divider ion-label {\\n    margin-bottom: 0px !important; }\\n\\nion-item-divider h1 {\\n    color: #333333 !important;\\n    font-family: myFontBold !important;\\n    padding-top: 16px;\\n    font-size: 2.0em;\\n    text-align: left !important;\\n    margin: 0 0.7em;\\n    border-bottom: 1px dashed #999; }\\n\\nion-item {\\n  padding: 8px 16px 8px 16px !important; }\\n\\n@media (max-width: 400px) {\\n    ion-item {\\n      display: flex;\\n      flex-direction: column;\\n      margin-top: 10px; } }\\n\\nion-item ion-label {\\n    padding-left: 8px !important; }\\n\\nion-item ion-label h2 {\\n      font-weight: bold !important; }\\n\\nion-item nano-thumb.goneImage {\\n    display: none !important; }\\n\\nion-item button {\\n    padding: 8px !important; }\\n\\n.category-name {\\n  font-family: myFontBold;\\n  padding-top: 16px;\\n  font-size: 2.0em;\\n  text-align: left;\\n  margin: 0 0.7em;\\n  border-bottom: 1px dashed #999;\\n  margin-bottom: 10px !important; }\\n\\n.products {\\n  margin: auto; }\\n\\n.products .list-item {\\n    display: flex;\\n    margin: 0.6em 0 0.6em 1.6em;\\n    background-color: white !important; }\\n\\n.products .list-item .product-item {\\n      -ms-grid-row-align: center;\\n          align-self: center;\\n      margin-right: 1.2em; }\\n\\n.products .list-item .product-item .name {\\n        font-size: 1.4em;\\n        color: #666; }\\n\\n.products .list-item .product-item .description {\\n        font-size: 1em;\\n        color: #999; }\\n\\n.products .list-item .product-item .price {\\n        white-space: nowrap;\\n        font-size: 1.4em;\\n        color: #4c4; }\\n\\n.myfilter {\\n  display: flex; }\\n\\n.myfilter button {\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n    margin-right: 8px !important; }\\n\"","import { Component, OnInit, ChangeDetectorRef, OnDestroy } from \"@angular/core\";\r\nimport { Observable, of, Subscription } from \"rxjs\";\r\nimport { NavController, PopoverController, MenuController, LoadingController } from \"@ionic/angular\";\r\nimport { SharedService } from \"../../../../services/shared.service\";\r\nimport { AuthenticationService } from \"../../../../services/authentication.service\";\r\nimport { ProductService, ProductStock } from \"../../../../services/product.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { switchMap, first, map, tap } from \"rxjs/operators\";\r\nimport { Company } from \"../../../../../models/company\";\r\nimport { Product } from \"../../../../../models/product\";\r\nimport { Category } from \"../../../../../models/category\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.page.html',\r\n  styleUrls: ['./product-list.page.scss'],\r\n})\r\nexport class ProductListPage implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Capta o que foi digitado pelo usuário no campo de pesquisa\r\n   */\r\n  searchString: string = \"\";\r\n\r\n  /**\r\n   * Lista de produtos ordenados\r\n   */\r\n  products: ProductStock[]\r\n\r\n  /**\r\n   * Subscription do subscribe inicial que carrega os produtos\r\n   */\r\n  subscriptionProducts: Subscription\r\n\r\n  /**\r\n   * variavel auxiliar para o ngfor que guarda o id\r\n   * da categoria do produto anterior\r\n   */\r\n  tempCategory: string;\r\n\r\n  /**\r\n   * Se está carregando os elementos da página.\r\n   */\r\n  loading: boolean = true;\r\n\r\n  /**\r\n   * Verifica se existem produtos\r\n   */\r\n  existsProducts: boolean = true;\r\n\r\n  /**\r\n   * Id das categorias selecionadas no filtro\r\n   */\r\n  categoriesSelected: string[] = [];\r\n\r\n  /**\r\n   * Empresa atual\r\n   */\r\n  company: Company;\r\n\r\n  constructor(public navCtrl: NavController,\r\n    public shared: SharedService,\r\n    public authentication: AuthenticationService,\r\n    public popoverCtrl: PopoverController,\r\n    private menuCtrl: MenuController,\r\n    private ref: ChangeDetectorRef,\r\n    public loadingCtrl: LoadingController,\r\n    private route: ActivatedRoute,\r\n    private productProvider: ProductService) { }\r\n\r\n  /**\r\n   * Inicializando estruturas após entrar na página.\r\n   */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true)\r\n    this.load()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptionProducts) {\r\n      this.subscriptionProducts.unsubscribe()\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.existsProducts = true\r\n    this.loading = true\r\n\r\n    this.subscriptionProducts = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n      .pipe(first()).pipe(switchMap((company: Company) => {\r\n        this.company = company;\r\n\r\n        return this.productProvider.getProductsStockCompany(company.id)\r\n          .pipe(map((products_menu: ProductStock[]) => {\r\n            return products_menu.sort(this.productProvider.comparatorProductStock)\r\n          }))\r\n      }))\r\n      .subscribe((products: ProductStock[]) => {\r\n        if (!products || products.length <= 0) this.existsProducts = false\r\n        this.products = products;\r\n        console.log(\"Produtos: \", this.products);\r\n        this.loading = false\r\n        this.change()\r\n      })\r\n  }\r\n\r\n  change() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  /**\r\n   * Dispara evento se as teclas alt + n for pressionado\r\n   * @param event evento\r\n   */\r\n  hotkeys(event) {\r\n    if (event.keyCode == 80 && event.altKey) {\r\n      this.add();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ir para página ProductEditPage para adicionar um novo produto\r\n   */\r\n  add() {\r\n    this.navCtrl.navigateRoot(['product/edit', { company_id: this.company.id }])\r\n  }\r\n\r\n  /** \r\n   * Ir para a página ProductEditPage para editar um produto\r\n   * @param product produto a ser editado\r\n   */\r\n  edit(product: Product) {\r\n    this.navCtrl.navigateRoot(['product/edit', { company_id: this.company.id, product_id: product.id }])\r\n  }\r\n\r\n  /**\r\n   * Cria uma cópia do produto\r\n   * @param product produto\r\n   */\r\n  copy(product) {\r\n    this.navCtrl.navigateRoot(['product/edit', { company_id: this.company.id, product_id: product.id, copy: true }])\r\n  }\r\n\r\n  /**\r\n   * @param category é a categoria que se quer receber o nome\r\n   */\r\n  getCategoryName(category: Category) {\r\n    if (!category) return;\r\n    this.tempCategory = category.id;\r\n    if (!category.name) return \"Categoria sem nome\"\r\n    return category.name;\r\n  }\r\n\r\n}"],"sourceRoot":""}