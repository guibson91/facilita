{"version":3,"sources":["webpack:///./src/app/panel/pages/order-promotion/order-promotion-list/order-promotion-list.module.ts","webpack:///./src/app/panel/pages/order-promotion/order-promotion-list/order-promotion-list.page.html","webpack:///./src/app/panel/pages/order-promotion/order-promotion-list/order-promotion-list.page.scss","webpack:///./src/app/panel/pages/order-promotion/order-promotion-list/order-promotion-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-order-promotion-order-promotion-list-order-promotion-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderPromotionListPage } from './order-promotion-list.page';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\nimport { MomentModule } from 'ngx-moment';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderPromotionListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    MomentModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [OrderPromotionListPage]\r\n})\r\nexport class OrderPromotionListPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Promoções geradas\\\" icon=\\\"menus-icon-list\\\">\\r\\n  </nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card class=\\\"content-card\\\" margin>\\r\\n    <div class=\\\"search-order-list\\\">\\r\\n      <ion-searchbar [(ngModel)]=\\\"input_search\\\" (ionChange)=\\\"change()\\\" placeholder=\\\"Filtrar pelo cliente ou filial\\\">\\r\\n      </ion-searchbar>\\r\\n      <ion-item class=\\\"date-filter\\\">\\r\\n\\r\\n        <ion-label stacked class=\\\"label-date\\\">Data\\r\\n          <div class=\\\"filter-dates-modes\\\">\\r\\n            <p (click)=\\\"changeModeFilterDate('day')\\\" [ngClass]=\\\"{'active-mode-filter-date': modeFilterDate == 'day'}\\\" padding-horizontal>\\r\\n              <strong>Dia</strong>\\r\\n            </p>\\r\\n            <p (click)=\\\"changeModeFilterDate('month')\\\" [ngClass]=\\\" { 'active-mode-filter-date': modeFilterDate=='month' }\\\" class=\\\"mode-filter-month\\\">\\r\\n              <strong>Mês</strong>\\r\\n            </p>\\r\\n          </div>\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-datetime *ngIf=\\\"modeFilterDate == 'month'\\\" displayFormat=\\\"MM/YYYY\\\" [(ngModel)]=\\\"dateInput\\\" (ionChange)=\\\"changeOrders()\\\"></ion-datetime>\\r\\n        <ion-datetime *ngIf=\\\"modeFilterDate == 'day'\\\" displayFormat=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"dateInput\\\" (ionChange)=\\\"changeOrders()\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n    <ion-list>\\r\\n      <div *ngFor=\\\"let order of orders | filterBy:[ 'user_full.name', 'filial_full.name', 'code', 'user_full?.phone']: input_search ; let i = index\\\"\\r\\n        class=\\\"order\\\" padding>\\r\\n        <h6>\\r\\n          <span *ngIf=\\\"order.code\\\">\\r\\n            <strong>Código: </strong>{{order.code}} </span>\\r\\n          <span *ngIf=\\\"order.filial_full?.name\\\">\\r\\n            <strong>Filial: </strong>{{order.filial_full?.name}} </span>\\r\\n          <span *ngIf=\\\"order.user_full?.phone\\\">\\r\\n            <strong>Phone: </strong>\\r\\n            <ion-icon class=\\\"icon-phone\\\" name=\\\"md-call\\\" item-start></ion-icon>{{order.user_full.phone}}\\r\\n          </span>\\r\\n          <span *ngIf=\\\"order.user_full?.name\\\">\\r\\n            <strong>Cliente: </strong>{{order.user_full?.name}} </span>\\r\\n        </h6>\\r\\n        <div>\\r\\n          <h3>\\r\\n            <strong>Nome da promoção: </strong> {{order.promotion_full?.name}}</h3>\\r\\n          <h3>\\r\\n            <strong>Data da criação: </strong> {{order.created_at | timestampToDate | date:'dd/MM/yyyy - HH:mm'}}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <ion-item text-center padding *ngIf=\\\"!loading\\\" class=\\\"noOrders\\\">\\r\\n        <p ion-text>Você ainda não possui nenhuma promoção gerada</p>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-item text-center *ngIf=\\\"loading\\\">\\r\\n      <ion-spinner></ion-spinner>\\r\\n    </ion-item>\\r\\n\\r\\n  </ion-card>\\r\\n</ion-content>\"","module.exports = \"ion-card.content-card {\\n  margin: 10px !important; }\\n\\n.toolbar {\\n  padding: 0; }\\n\\nion-scroll {\\n  height: 60px; }\\n\\nion-scroll .scroll-content {\\n    padding: 18px 0 !important; }\\n\\nion-scroll .segment {\\n    display: block;\\n    white-space: nowrap;\\n    font-size: 0;\\n    overflow: auto; }\\n\\nion-scroll .segment::-webkit-scrollbar {\\n      width: 0;\\n      height: 0;\\n      display: none; }\\n\\nion-scroll .segment ion-segment-button.segment-button {\\n      display: inline-block;\\n      min-width: 100px;\\n      padding: 0 25px;\\n      width: auto;\\n      color: #fff;\\n      border-bottom-color: transparent; }\\n\\nion-scroll .segment ion-segment-button.segment-button h4 {\\n        padding-top: 10px;\\n        font-size: 16px;\\n        font-weight: bold;\\n        margin: 0; }\\n\\nion-scroll .segment ion-segment-button.segment-button.segment-activated {\\n        border-color: #fff; }\\n\\n.button-alert {\\n  font-size: 10px;\\n  margin-top: -0.8em; }\\n\\n.noOrders {\\n  display: none; }\\n\\n.noOrders:first-child {\\n    display: block !important; }\\n\\n.date-filter {\\n  width: 300px; }\\n\\n@media (max-width: 420px) {\\n    .date-filter {\\n      width: 100%; } }\\n\\n.date-filter .item-inner {\\n    border-bottom: 1px solid var(--ion-color-primary) !important; }\\n\\n.date-filter .label-date {\\n    display: flex;\\n    justify-content: space-between; }\\n\\n.date-filter .label-date .filter-dates-modes {\\n      z-index: 999;\\n      display: flex !important; }\\n\\n.date-filter .label-date .filter-dates-modes p {\\n        margin: 0px; }\\n\\n.date-filter .label-date .filter-dates-modes p:hover {\\n          cursor: pointer; }\\n\\n.date-filter .label-date .filter-dates-modes p.mode-filter-month {\\n          margin-left: 5px !important; }\\n\\n.date-filter .label-date .filter-dates-modes p.active-mode-filter-date {\\n          color: var(--ion-color-primary) !important; }\\n\\n@media (max-width: 420px) {\\n  .content-card {\\n    margin: 10px !important; } }\\n\\n.search-order-list {\\n  display: flex;\\n  align-items: center;\\n  flex-wrap: wrap;\\n  border-bottom: solid 2px #dddddd; }\\n\\n.search-order-list ion-item {\\n    padding-bottom: 5px; }\\n\\n.search-order-list .datetime-md {\\n    padding: 7px 8px 7px 0px !important; }\\n\\n.search-order-list ion-searchbar {\\n    border-bottom: solid 0px transparent !important;\\n    height: 73px;\\n    width: 70%;\\n    min-width: 330px; }\\n\\n@media (max-width: 500px) {\\n      .search-order-list ion-searchbar {\\n        width: 100%; } }\\n\\n.search-order-list .date-filter {\\n    width: 30%; }\\n\\n@media (max-width: 520px) {\\n      .search-order-list .date-filter {\\n        width: 100%; } }\\n\\n.searchbar-input {\\n  padding-right: 6px !important; }\\n\\n.order {\\n  border-bottom: 1px solid lightgrey; }\\n\\n.order h2 span {\\n    margin-right: 20px; }\\n\\n@media (max-width: 420px) {\\n    .order .info-order {\\n      display: flex;\\n      flex-direction: column; } }\\n\\n.order .more {\\n    text-align: left !important;\\n    cursor: pointer;\\n    color: var(--ion-color-primary);\\n    width: auto !important;\\n    margin-left: -5px; }\\n\\n@media (max-width: 625px) {\\n    .order .more {\\n      margin: 0 auto;\\n      margin-top: 8px; } }\\n\\n.order .infos {\\n    display: flex; }\\n\\n@media (max-width: 625px) {\\n      .order .infos {\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: space-between; }\\n        .order .infos .datetime-md {\\n          padding: 2px 8px 5px 0px !important; } }\\n\\n.order .infos .entry {\\n      width: 35%; }\\n\\n@media (max-width: 625px) {\\n        .order .infos .entry {\\n          width: 100% !important;\\n          max-width: 100%; } }\\n\\n.order .infos .delivery {\\n      width: 36.69%; }\\n\\n@media (max-width: 625px) {\\n        .order .infos .delivery {\\n          width: 100% !important;\\n          max-width: 100%; } }\\n\\n@media (max-width: 625px) {\\n        .order .infos .delivery .phone {\\n          width: 100%;\\n          text-align: center;\\n          display: inline-block;\\n          margin: 0; } }\\n\\n.order .infos .delivery .total {\\n        margin-top: 10px; }\\n\\n.order .infos .status-box {\\n      width: 27.3%; }\\n\\n@media (max-width: 625px) {\\n        .order .infos .status-box {\\n          width: 100% !important;\\n          max-width: 100%; } }\\n\\n.order .infos .status-box .status {\\n        font-size: 1.3em;\\n        font-weight: bold; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { OrderPromotion } from '../../../../../models/order-promotion';\r\nimport { Observable, Subscription, of, combineLatest } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { switchMap, map, tap, first } from 'rxjs/operators';\r\nimport { ParamMap } from '@angular/router';\r\nimport { Company } from '../../../../../models/company';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport * as moment from 'moment';\r\nimport { Filial } from '../../../../../models/filial';\r\nimport { SystemService } from '../../../../services/system.service';\r\nimport { User } from '../../../../../models/user';\r\nimport { Promotion } from '../../../../../models/promotion';\r\nimport { MenuController } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-order-promotion-list',\r\n  templateUrl: './order-promotion-list.page.html',\r\n  styleUrls: ['./order-promotion-list.page.scss'],\r\n})\r\nexport class OrderPromotionListPage implements OnInit {\r\n  /**\r\n     * Observable com a lista de promoções geradas do restaurante ou da filial\r\n     */\r\n  orders$: Observable<OrderPromotion[]>;\r\n\r\n  /**\r\n   * Lista de promoções geradas\r\n   */\r\n  orders: OrderPromotion[];\r\n\r\n  /**\r\n   * Subscription do observable de pedidos\r\n   */\r\n  ordersSubscription: Subscription;\r\n\r\n\t/**\r\n\t * Se está carregando os elementos da página.\r\n\t */\r\n  loading: boolean = true;\r\n\r\n\t/**\r\n\t * Verifica se existe promoções geradas\r\n\t */\r\n  existsOrders: boolean = true\r\n\r\n\t/**\r\n\t * Input de pesquisa\r\n\t */\r\n  input_search: string\r\n\r\n\t/**\r\n\t * Data do input\r\n\t */\r\n  modeFilterDate: string\r\n  dateInput = moment().format();\r\n\r\n\t/**\r\n\t * Data para filtrar os pedidos\r\n\t */\r\n  dateStart: Date = new Date();\r\n  dateEnd: Date;\r\n\r\n  company: Company\r\n\r\n  filial: Filial\r\n\r\n  constructor(private menuCtrl: MenuController,\r\n    private ref: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private shared: SharedService,\r\n    private system: SystemService) { }\r\n\r\n  /**\r\n\t * Inicializando estruturas após entrar na página.\r\n\t */\r\n  ngOnInit(): void {\r\n    this.modeFilterDate = 'month'\r\n    this.dateFilter(this.dateStart)\r\n\r\n    this.menuCtrl.enable(true);\r\n    this.load();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.ordersSubscription) this.ordersSubscription.unsubscribe()\r\n  }\r\n\r\n  change() {\r\n    this.ref.detectChanges()\r\n  }\r\n\t/**\r\n\t * Carrega a lista da página\r\n\t */\r\n  load() {\r\n    this.loading = true\r\n    this.existsOrders = true\r\n\r\n    let company$: Observable<Company> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n            .pipe(first())\r\n        else if (this.shared.isManager || this.shared.isFilialManager)\r\n          return this.shared.company$\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let filial$: Observable<Filial> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('filial_id'))\r\n          return Filial.object(params.get('filial_id'))\r\n            .pipe(first())\r\n        else if (this.shared.isManager || this.shared.isFilialManager)\r\n          return this.shared.filial$\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    if (this.ordersSubscription) this.ordersSubscription.unsubscribe()\r\n    this.ordersSubscription =\r\n      combineLatest([\r\n        company$,\r\n        filial$\r\n      ])\r\n        .pipe(tap((arr: [Company, Filial]) => {\r\n          this.company = arr[0]\r\n          this.filial = arr[1]\r\n        }))\r\n        .pipe(switchMap(() => {\r\n          let promotions$: Observable<OrderPromotion[]>\r\n          if (this.filial) {\r\n            promotions$ = Filial.orders_promotions.list(this.filial.id,\r\n              [\r\n                { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n                { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n              ]\r\n              , [\r\n                {\r\n                  name: \"created_at\",\r\n                  type: \"desc\"\r\n                }\r\n              ])\r\n          } else if (this.company) {\r\n            promotions$ = Company.orders_promotions.list(this.company.id,\r\n              [\r\n                { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n                { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n              ]\r\n              , [\r\n                {\r\n                  name: \"created_at\",\r\n                  type: \"desc\"\r\n                }\r\n              ])\r\n          } else if (this.shared.isTeam) {\r\n            promotions$ = OrderPromotion.list([\r\n              { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n              { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n            ])\r\n          } else {\r\n            throw Error(\"Nem é TEAM nem tem filial nem company\")\r\n          }\r\n          return promotions$\r\n        }))\r\n        .pipe(switchMap((orders: OrderPromotion[]) => {\r\n          if (!orders || orders.length <= 0) return of([])\r\n          return combineLatest(\r\n            orders.map((order: OrderPromotion) => {\r\n              if (order && order.user && order.promotion && order.company && order.filial) {\r\n                const user$ = User.object<User>(order.user.id, true)\r\n                const promotion$ = Promotion.object<Promotion>(order.promotion.id, true)\r\n\r\n                let company$: Observable<Company>;\r\n                if (this.company) company$ = of(this.company)\r\n                else company$ = Company.object(order.company.id, true)\r\n\r\n                let filial$: Observable<Filial>;\r\n                if (this.filial) filial$ = of(this.filial)\r\n                else filial$ = Filial.object(order.filial.id, true)\r\n\r\n                return combineLatest(\r\n                  user$,\r\n                  promotion$,\r\n                  company$,\r\n                  filial$\r\n                ).pipe(map((arr: [User, Promotion, Company, Filial]) => {\r\n                  order.user_full = arr[0]\r\n                  order.promotion_full = arr[1]\r\n                  order.company_full = arr[2]\r\n                  order.filial_full = arr[3]\r\n                  return order\r\n                }))\r\n              } else {\r\n                console.error(\"Algo de errado aconteceu, um pedido de promoção não tem um dos elementos: Company, Filial, User, Promotion\")\r\n                return of(null)\r\n              }\r\n            })\r\n          )\r\n        }))\r\n        .pipe(map((orders: OrderPromotion[]) => {\r\n          return orders.filter((order) => order)\r\n        }))\r\n        .subscribe((orders: OrderPromotion[]) => {\r\n          if (!orders || orders.length <= 0) this.existsOrders = false\r\n          else this.existsOrders = true\r\n          this.orders = orders || []\r\n          this.loading = false\r\n          this.ref.detectChanges()\r\n        }, err => {\r\n          this.loading = false\r\n          this.orders = []\r\n          this.ref.detectChanges()\r\n          this.system.showErrorAlert(err);\r\n        })\r\n\r\n  }\r\n\r\n  changeOrders() {\r\n    this.dateFilter(this.dateInput)\r\n    this.load()\r\n  }\r\n\r\n  changeModeFilterDate(mode: 'day' | 'month') {\r\n    this.modeFilterDate = mode\r\n    let newDate = new Date()\r\n    if (mode == 'month') {\r\n      newDate.setDate(1)\r\n    } else {\r\n      this.dateInput = moment().format()\r\n    }\r\n    this.dateFilter(newDate)\r\n    this.load()\r\n  }\r\n\r\n  dateFilter(date) {\r\n    this.dateStart = new Date(date)\r\n    this.dateStart.setHours(0, 0, 0)\r\n    this.dateEnd = new Date(this.dateStart)\r\n    if (this.modeFilterDate == 'month') {\r\n\r\n      let aux = this.dateStart.getMonth()\r\n      this.dateStart.setDate(1)\r\n      if (aux == 12) {\r\n        this.dateEnd.setMonth(1)\r\n      } else {\r\n        this.dateEnd.setMonth(aux + 1)\r\n      }\r\n\r\n    } else {\r\n      this.dateEnd.setDate(this.dateEnd.getDate() + 1)\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}