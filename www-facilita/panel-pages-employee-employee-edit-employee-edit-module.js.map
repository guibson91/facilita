{"version":3,"sources":["webpack:///./src/app/panel/pages/employee/employee-edit/employee-edit.module.ts","webpack:///./src/app/panel/pages/employee/employee-edit/employee-edit.page.html","webpack:///./src/app/panel/pages/employee/employee-edit/employee-edit.page.scss","webpack:///./src/app/panel/pages/employee/employee-edit/employee-edit.page.ts"],"names":[],"mappings":"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","file":"panel-pages-employee-employee-edit-employee-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EmployeeEditPage } from './employee-edit.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeeEditPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [EmployeeEditPage]\r\n})\r\nexport class EmployeeEditPageModule {}\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Cadastrar/Editar funcionÃ¡rio\\\" icon=\\\"menus-icon-servant-outline\\\" [helpPage]=\\\"9\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <form [formGroup]=\\\"form\\\" class=\\\"form-content\\\">\\r\\n      <ion-list>\\r\\n\\r\\n        <!-- Imagem e barra de progresso -->\\r\\n        <nano-uploadimage [form]=\\\"this.form\\\" [storagePath]=\\\"'users'\\\"></nano-uploadimage>\\r\\n\\r\\n        <!--Nome-->\\r\\n        <ion-item padding-horizontal>\\r\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome</ion-label>\\r\\n          <ion-input formControlName=\\\"name\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <!--Email-->\\r\\n        <ion-item padding-horizontal>\\r\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Email</ion-label>\\r\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <!--Senha-->\\r\\n        <ion-item padding-horizontal>\\r\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\" *ngIf=\\\"!employee\\\">Senha</ion-label>\\r\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\" *ngIf=\\\"employee\\\">Nova senha</ion-label>\\r\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-input>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"generatePassword()\\\" color=\\\"tertiary\\\">Gerar senha aleatÃ³ria</ion-button>\\r\\n        </ion-item>\\r\\n\\r\\n        <!-- Se o usuÃ¡rio Ã© da empresa ou da filial -->\\r\\n        <h4 ion-text padding-horizontal>Tipo de funcionÃ¡rio:</h4>\\r\\n        <ion-radio-group [(ngModel)]=\\\"typeOfEmployee\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label>Administrador da empresa</ion-label>\\r\\n            <ion-radio value=\\\"company\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label>FuncionÃ¡rio de uma filial</ion-label>\\r\\n            <ion-radio value=\\\"filial\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n\\r\\n        <!-- PermissÃ£o -->\\r\\n        <div *ngIf=\\\"typeOfEmployee === 'filial'\\\">\\r\\n          <h4 ion-text padding-horizontal text-bold>PermissÃµes do funcionÃ¡rio da filial:</h4>\\r\\n          <ion-radio-group [(ngModel)]=\\\"levelOfFilialPermission\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label>Gerenciar todo o estabelecimento</ion-label>\\r\\n              <ion-radio value=\\\"manager\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label>Gerenciar somente os pedidos</ion-label>\\r\\n              <ion-radio value=\\\"cashier\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n        </div>\\r\\n        <!-- Filial -->\\r\\n        <nano-loading [loading]=\\\"loadingFilials\\\" [hidden]=\\\"typeOfEmployee !== 'filial'\\\">\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Filial do funcionÃ¡rio</ion-label>\\r\\n            <ion-select formControlName=\\\"filialId\\\" submitText=\\\"Ok\\\" cancelText=\\\"Cancelar\\\">\\r\\n              <ion-select-option class=\\\"dropdown-filials\\\" *ngFor=\\\"let filial of filials$ | async\\\" [value]=\\\"filial.id\\\">{{filial.name}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </nano-loading>\\r\\n\\r\\n        <nano-error [error]=\\\"error\\\"></nano-error>\\r\\n        <nano-buttons [canSave]=\\\"form.valid\\\" [save]=\\\"save.bind(this)\\\" [canRemove]=\\\"employee\\\" [remove]=\\\"remove.bind(this)\\\"\\r\\n          [cancel]=\\\"back.bind(this)\\\"></nano-buttons>\\r\\n\\r\\n      </ion-list>\\r\\n    </form>\\r\\n  </ion-card>\\r\\n</ion-content>\"","module.exports = \".select .select-text {\\n  padding-left: 8px; }\\n\\nnano-buttons .button-clear-md-danger {\\n  margin-left: -6px;\\n  padding-left: 8px;\\n  padding-right: 8px; }\\n\\n.itens-permission {\\n  margin-top: -20px !important; }\\n\\n.itens-permission .item.item-md .checkbox-md {\\n    margin: 9px 14px 2px 4px !important; }\\n\\n.permissions {\\n  padding-bottom: 1em; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Filial } from '../../../../../models/filial';\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Permission, User } from '../../../../../models/user';\r\nimport { NavController, MenuController } from '@ionic/angular';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { AuthenticationService } from '../../../../services/authentication.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { tap, switchMap, first, map, flatMap } from 'rxjs/operators';\r\nimport { Company } from '../../../../../models/company';\r\nimport { validateEmail, elementIsInsideArray, makeRandomString } from '../../../../util/util';\r\nimport { CascadeRelationship } from '../../../../../modules/firestore/collection';\r\n\r\n@Component({\r\n  selector: 'app-employee-edit',\r\n  templateUrl: './employee-edit.page.html',\r\n  styleUrls: ['./employee-edit.page.scss'],\r\n})\r\nexport class EmployeeEditPage implements OnInit {\r\n  /**\r\n   * ReferÃªncia para usar o array de permissÃµes na view\r\n   */\r\n  Permission = Permission\r\n\r\n  /**\r\n   * Carregando informaÃ§Ãµes do funcionÃ¡rio\r\n   */\r\n  loading: boolean\r\n\r\n  /**\r\n   * Carregando lista de filiais\r\n   */\r\n  loadingFilials: boolean\r\n\r\n  /**\r\n   * FormulÃ¡rio\r\n   */\r\n  form: FormGroup;\r\n\r\n  /**\r\n   * Empresa no qual o funcionÃ¡rio trabalha\r\n   */\r\n  company: Company;\r\n\r\n  /**\r\n   * Dados do produto a ser editado\r\n   */\r\n  employee: User; // null se for pÃ¡gina de cadastro\r\n\r\n  /**\r\n   * Observable da lista de filiais do restaurante\r\n   */\r\n  filials$: Observable<Filial[]>;\r\n\r\n  /**\r\n   * Id da filial no inÃ­cio da pÃ¡gina de ediÃ§Ã£o\r\n   */\r\n  filialIdOld: string;\r\n\r\n  /**\r\n   * Email no inÃ­cio da pÃ¡gina de ediÃ§Ã£o\r\n   */\r\n  emailOld: string;\r\n  /**\r\n   * Exibe mensagem de erro\r\n   */\r\n  error: string;\r\n\r\n  /**\r\n   * Senha do usuÃ¡rio\r\n   */\r\n  password: string = \"\";\r\n\r\n  /**\r\n   * Define se o usuÃ¡rio vai ser um administrador da empresa ou se ele vai ser um funcionÃ¡rio de uma filial\r\n   */\r\n  typeOfEmployee: \"company\" | \"filial\"\r\n\r\n  levelOfFilialPermission: \"manager\" | \"cashier\"\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private shared: SharedService,\r\n    private authentication: AuthenticationService,\r\n    private ref: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private menuCtrl: MenuController) { }\r\n\r\n  ngOnInit() {\r\n    this.menuCtrl.enable(true);\r\n    this.initForm()\r\n\r\n    this.loading = true\r\n    this.loadingFilials = true\r\n\r\n    let company$: Observable<Company> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else if (this.shared.isManager)\r\n          return this.shared.company$\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let employee$: Observable<User> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('employee_id'))\r\n          return User.object(params.get('employee_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    combineLatest([\r\n      company$.pipe(first())\r\n        .pipe(tap((company: Company) => {\r\n          this.company = company;\r\n          if (!company) {\r\n            console.error(\"Sem empresa\")\r\n            //this.navCtrl.setRoot(HomePage)\r\n            return;\r\n          }\r\n        }))\r\n        .pipe(tap((company: Company) => {\r\n\r\n          this.filials$ = Company.filials.list(company.id)\r\n            .pipe(tap(() => {\r\n              this.loadingFilials = false\r\n            }));\r\n        })),\r\n      employee$.pipe(tap((employee: User) => {\r\n        this.employee = employee\r\n        this.loading = false\r\n        this.ref.detectChanges()\r\n        if (this.employee) {\r\n          if (this.employee.filial_employee && this.employee.filial_employee.id) {\r\n            this.filialIdOld = this.employee.filial_employee.id\r\n            this.form.patchValue({\r\n              filialId: this.filialIdOld\r\n            })\r\n            if (elementIsInsideArray(Permission.COMPANY_MANAGEMENT, this.employee.permissions)) {\r\n              this.typeOfEmployee = \"company\"\r\n            } else if (elementIsInsideArray(Permission.FILIAL_MANAGEMENT, this.employee.permissions)) {\r\n              this.typeOfEmployee = \"filial\"\r\n              this.levelOfFilialPermission = \"manager\"\r\n            } else if (elementIsInsideArray(Permission.ORDER, this.employee.permissions) && elementIsInsideArray(Permission.ORDER_READ, this.employee.permissions)) {\r\n              this.typeOfEmployee = \"filial\"\r\n              this.levelOfFilialPermission = \"cashier\"\r\n            }\r\n          }\r\n          this.emailOld = this.employee.email\r\n          this.form.patchValue(this.employee)\r\n        }\r\n\r\n      }))\r\n    ])\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.loading = false;\r\n        this.ref.detectChanges()\r\n      })\r\n\r\n  }\r\n\r\n  generatePassword() {\r\n    this.password = makeRandomString(6);\r\n  }\r\n\r\n  initForm() {\r\n\r\n    this.form = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      image: [''],\r\n      filialId: [''] // utilizado somente para gerar o relacionamento\r\n    })\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      this.ref.detectChanges()\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Voltar pÃ¡gina sem salvar alteraÃ§Ãµes\r\n   */\r\n  back() {\r\n    this.navCtrl.navigateRoot(['employee/list', { company_id: this.company.id }]);\r\n  }\r\n\r\n  /**\r\n   * Remover usuÃ¡rio e autenticaÃ§Ã£o\r\n   */\r\n  remove(): Observable<void> {\r\n    let relationships: CascadeRelationship[] = [\r\n      {\r\n        relationship: User.company_employee,\r\n        removeId: this.company.id\r\n      }\r\n    ];\r\n    if (this.typeOfEmployee === 'filial') {\r\n      relationships.push({\r\n        relationship: User.filial_employee,\r\n        removeId: this.filialIdOld\r\n      })\r\n    }\r\n    return User.remove(this.employee.id, relationships)\r\n  }\r\n\r\n  /**\r\n   * Salvar alteraÃ§Ãµes e redirecionar para pÃ¡gina anterior.\r\n   * Tanto para criar novo registro, quanto para atualizÃ¡-lo\r\n   */\r\n  save(): Observable<any> {\r\n    let filialId = this.form.value.filialId\r\n    return this.userFromForm().pipe(flatMap((employee: User) => {\r\n      //Atualizar usuÃ¡rio e autenticaÃ§Ã£o\r\n      if (this.employee) {\r\n\r\n        let obs$: Observable<any>;\r\n        if (employee.email != this.emailOld || this.password.length > 0) {\r\n          obs$ = this.authentication.changePassword(this.employee.id, employee.email, this.password)\r\n        } else {\r\n          obs$ = of(true)\r\n        }\r\n\r\n        return obs$\r\n          .pipe(flatMap(() => {\r\n            return User.update(this.employee.id, employee, [\r\n              {\r\n                relationship: User.filial_employee,\r\n                id: (this.typeOfEmployee === 'filial' ? filialId : undefined),\r\n                removeId: this.filialIdOld\r\n              }\r\n              //NÃ£o Ã© possÃ­vel modificar relaÃ§Ã£o de usuÃ¡rio com a empresa\r\n            ])\r\n          }))\r\n          .pipe(tap(() => {\r\n            this.back()\r\n          }))\r\n      }\r\n      //Cadastro de usuÃ¡rio e autenticaÃ§Ã£o\r\n      else {\r\n        return this.authentication.register(employee.email, this.password)\r\n          .pipe(flatMap((user_key) => {\r\n            let relationships: CascadeRelationship[] = [\r\n              {\r\n                relationship: User.company_employee,\r\n                id: this.company.id\r\n              }\r\n            ];\r\n            if (this.typeOfEmployee === 'filial') {\r\n              relationships.push({\r\n                relationship: User.filial_employee,\r\n                id: filialId\r\n              })\r\n            }\r\n            return User.update(user_key, employee, relationships)\r\n          }))\r\n          .pipe(tap(() => {\r\n            this.back()\r\n          }))\r\n      }\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Baseado nas informaÃ§Ãµes do formulÃ¡rio\r\n   * criar o respectivo usuÃ¡rio\r\n   */\r\n  userFromForm(): Observable<User> {\r\n    return of(null).pipe(map(() => {\r\n      let user: User = Object.assign({}, this.form.value)\r\n      if (this.form.value)\r\n        //Verifica se a senha Ã© vÃ¡lida\r\n        if (this.form.value.password && this.form.value.password.length < 6) {\r\n          throw Error('Sua senha deve conter pelo menos 6 caracteres')\r\n        }\r\n\r\n      //Verifica se o email Ã© vÃ¡lido\r\n      if (!validateEmail(this.form.value.email)) {\r\n        throw Error(\"Por favor, digite um email vÃ¡lido\")\r\n      }\r\n\r\n      if (this.typeOfEmployee === \"filial\" && !user['filialId']) {\r\n        throw Error(\"Por favor selecione qual filial esse funcionÃ¡rio irÃ¡ trabalhar.\")\r\n      }\r\n\r\n      if (user['filialId'])\r\n        delete user['filialId']\r\n      if (user['password'])\r\n        delete user['password']\r\n      if (user['password2'])\r\n        delete user['password2']\r\n\r\n      /**\r\n       * Atribuindo as permissÃµes de acordo com o que foi selecionado\r\n       */\r\n      switch (this.typeOfEmployee) {\r\n        case \"filial\":\r\n          switch (this.levelOfFilialPermission) {\r\n            case \"manager\":\r\n              user.permissions = [Permission.FILIAL_MANAGEMENT, Permission.ORDER, Permission.ORDER_READ]\r\n              break;\r\n            case \"cashier\":\r\n              user.permissions = [Permission.ORDER, Permission.ORDER_READ]\r\n              break;\r\n            default:\r\n              throw Error(\"NÃ£o foi selecionado nÃ­vel de permissÃ£o do funcionÃ¡rio da filial\")\r\n          }\r\n          break;\r\n        case \"company\":\r\n          user.permissions = [Permission.COMPANY_MANAGEMENT]\r\n          break;\r\n        default:\r\n          throw Error(\"NÃ£o foi selecionado o tipo de funcionÃ¡rio(se Ã© um administrador da empresa ou funcionÃ¡rio de uma filial)\")\r\n      }\r\n      return user\r\n    }))\r\n  }\r\n}"],"sourceRoot":""}