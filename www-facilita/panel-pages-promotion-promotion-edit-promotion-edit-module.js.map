{"version":3,"sources":["webpack:///./src/app/panel/pages/promotion/promotion-edit/promotion-edit.module.ts","webpack:///./src/app/panel/pages/promotion/promotion-edit/promotion-edit.page.html","webpack:///./src/app/panel/pages/promotion/promotion-edit/promotion-edit.page.scss","webpack:///./src/app/panel/pages/promotion/promotion-edit/promotion-edit.page.ts"],"names":[],"mappings":"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","file":"panel-pages-promotion-promotion-edit-promotion-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PromotionEditPage } from './promotion-edit.page';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PromotionEditPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PromotionEditPage]\r\n})\r\nexport class PromotionEditPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Cadastrar/Editar promoção\\\" icon=\\\"menus-icon-ecommerce-41\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <!-- Informações gerais do produto -->\\r\\n      <form [formGroup]=\\\"form\\\" class=\\\"form-content\\\">\\r\\n        <ion-list>\\r\\n          <!--<ion-list class=\\\"myformlist\\\" color=\\\"light\\\">-->\\r\\n\\r\\n          <!-- Imagem e barra de progresso -->\\r\\n          <nano-uploadimage [form]=\\\"this.form\\\" [storagePath]=\\\"'promotions'\\\"></nano-uploadimage>\\r\\n\\r\\n          <!--Nome-->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome</ion-label>\\r\\n            <ion-input class=\\\"input\\\" formControlName=\\\"name\\\" maxlength=\\\"50\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <!--Descrição-->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Descrição</ion-label>\\r\\n            <ion-textarea class=\\\"input\\\" rows=\\\"5\\\" formControlName=\\\"description\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- Preço -->\\r\\n          <ion-item padding-horizontal item-content>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Preço base (em R$)</ion-label>\\r\\n            <money-input item-content [control]=\\\"form.controls['priceBase']\\\"></money-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- Ativar preço promocional -->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label>Ativar promoção</ion-label>\\r\\n            <ion-toggle slot=\\\"end\\\" color=\\\"primary\\\" formControlName=\\\"promotionActive\\\"></ion-toggle>\\r\\n          </ion-item>\\r\\n          <ion-radio-group [hidden]=\\\"!form.controls['promotionActive'].value\\\" [(ngModel)]=\\\"promotionType\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ionChange)=\\\"detect()\\\">\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label>Definir valor de desconto</ion-label>\\r\\n              <ion-radio value=\\\"money\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label>Definir porcentagem de desconto</ion-label>\\r\\n              <ion-radio value=\\\"percentage\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n          <!--Preço Promocional por valor-->\\r\\n          <ion-item padding-horizontal [hidden]=\\\"!(form.controls['promotionActive'].value && promotionType == 'money')\\\">\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Valor de desconto (em R$)</ion-label>\\r\\n            <money-input [control]=\\\"form.controls['promotionPrice']\\\"></money-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <!--Preço Promocional por porcentagem-->\\r\\n          <ion-item padding-horizontal item-content [hidden]=\\\"!(form.controls['promotionActive'].value && promotionType == 'percentage')\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"label\\\" color=\\\"tertiary\\\">Porcentagem de desconto</ion-label>\\r\\n            <money-input item-content [control]=\\\"form.controls['promotionPercentage']\\\"></money-input>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </form>\\r\\n    </nano-loading>\\r\\n    <nano-buttons [canSave]=\\\"form.valid\\\" [save]=\\\"save.bind(this)\\\" [canRemove]=\\\"promotion\\\" [remove]=\\\"remove.bind(this)\\\"\\r\\n      [cancel]=\\\"cancel.bind(this)\\\"></nano-buttons>\\r\\n  </ion-card>\\r\\n</ion-content>\"","module.exports = \"money-input {\\n  width: 100%; }\\n\\nh2 {\\n  line-height: 1.3 !important; }\\n\\n@media (max-width: 400px) {\\n  .complement {\\n    display: flex;\\n    flex-direction: column; } }\\n\\n.button-select-category {\\n  margin-left: -7px; }\\n\\ninput:focus {\\n  outline: none !important; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Promotion } from '../../../../../models/promotion';\r\nimport { Company } from '../../../../../models/company';\r\nimport { NavController, AlertController, MenuController, LoadingController } from '@ionic/angular';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { of, combineLatest, Observable, throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-promotion-edit',\r\n  templateUrl: './promotion-edit.page.html',\r\n  styleUrls: ['./promotion-edit.page.scss'],\r\n})\r\nexport class PromotionEditPage implements OnInit {\r\n\r\n  /**\r\n   * Formulário\r\n   */\r\n  form: FormGroup;\r\n\r\n  /**\r\n   * Dados da promoção a ser editada.\r\n   */\r\n  promotion: Promotion;\r\n\r\n  loading: boolean;\r\n\r\n  // \"money\" ou \"percentage\"\r\n  promotionType: string;\r\n\r\n  /**\r\n   * Verifica se foi salvo os dados editados. Isso serve para verificar se o usuário pode sair da tela\r\n   */\r\n  saveChange: boolean = false;\r\n\r\n  /**\r\n   * Empresa atual\r\n   */\r\n  company: Company;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    public alert: AlertController,\r\n    private formBuilder: FormBuilder,\r\n    private menuCtrl: MenuController,\r\n    private route: ActivatedRoute,\r\n    private ref: ChangeDetectorRef,\r\n    public loadingCtrl: LoadingController) { }\r\n\r\n  ngOnInit() {\r\n    this.menuCtrl.enable(true);\r\n    this.loading = true;\r\n\r\n    this.form = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      image: [''],\r\n      priceBase: [null, Validators.required],\r\n      promotionPrice: [null],\r\n      promotionPercentage: [null],\r\n      promotionActive: [false],\r\n    });\r\n\r\n    this.form.valueChanges.subscribe((data) => {\r\n      this.ref.detectChanges()\r\n    })\r\n\r\n    let company$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let promotion$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('promotion_id'))\r\n          return Promotion.object(params.get('promotion_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    combineLatest([\r\n      company$,\r\n      promotion$\r\n    ]).subscribe((arr: [Company, Promotion]) => {\r\n      this.company = arr[0]\r\n      this.promotion = arr[1]\r\n      //Página de edição de produto\r\n      if (this.promotion) {\r\n\r\n        if (this.promotion.promotionActive) {\r\n          if (this.promotion.promotionPrice) {\r\n            this.promotionType = 'money';\r\n          }\r\n          else {\r\n            this.promotionType = 'percentage';\r\n          }\r\n        }\r\n\r\n        this.form.patchValue(this.promotion)\r\n      }\r\n\r\n      this.loading = false\r\n      console.log(\"Detect changes\")\r\n      this.ref.detectChanges()\r\n    })\r\n  }\r\n\r\n  detect() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  /**\r\n   * @todo CAN DEACTIVE ATUALIZAR PARA O METODO DO ANGULAR: https://angular.io/api/router/CanDeactivate\r\n   \r\n  ionViewCanLeave() {\r\n    /**\r\n     * Verifica se o form foi alterado\r\n     *\r\n    let change: boolean\r\n    if (this.product) {\r\n      if (JSON.stringify(this.complements) == JSON.stringify(this.product.complements)) {\r\n        for (let key in this.form.value) {\r\n          if (this.form.value.category != this.product.category.id) {\r\n            change = true\r\n          } else if (this.form.value[key] != this.product[key] && key != 'category') {\r\n            change = true\r\n          }\r\n        }\r\n      } else {\r\n        change = true\r\n      }\r\n    } else {\r\n      if (this.complements.length < 1) {\r\n        for (let key in this.form.value) {\r\n          if (this.form.value[key]) change = true\r\n        }\r\n      } else {\r\n        change = true\r\n      }\r\n    }\r\n    /**\r\n     * Verifica se o usuário pode sair da pagina antes de salvar as alterações\r\n     *\r\n    return new Promise(async (resolve: Function, reject: Function) => {\r\n      if (this.saveChange) {\r\n        resolve()\r\n      } else if (change) {\r\n        let alert = await this.alert.create({\r\n          header: 'Deseja sair sem salvar suas alterações ?',\r\n          buttons: [{\r\n            role: 'cancel',\r\n            text: 'Cancelar',\r\n            handler: () => {\r\n              reject()\r\n            }\r\n          }, {\r\n            text: 'Confirmar',\r\n            handler: () => {\r\n              resolve()\r\n            }\r\n          }]\r\n        })\r\n        alert.present()\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }*/\r\n\r\n  /**\r\n   * Voltar página sem salvar alterações\r\n   */\r\n  cancel(): void {\r\n    this.navCtrl.navigateRoot(['promotion/list', { company_id: this.company.id }])\r\n  }\r\n\r\n  /**\r\n   * Remove produto do database\r\n   */\r\n  remove(): Observable<any> {\r\n    if (this.promotion) {\r\n      return Promotion.remove(this.promotion.id, [\r\n        {\r\n          relationship: Promotion.company,\r\n          removeId: this.company.id\r\n        }\r\n      ])\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Salvar alterações e redirecionar para página anterior\r\n   */\r\n  save(): Observable<any> {\r\n\r\n    if (this.form.value.promotionActive && !this.promotionType) {\r\n      return throwError(Error(\"Você precisa escolher como deseja definir a promoção\"));\r\n    }\r\n\r\n    if (this.form.value.promotionActive && this.promotionType == 'money' && !this.form.value.promotionPrice) {\r\n      return throwError(Error(\"Você precisa definir o valor do desconto\"));\r\n    }\r\n\r\n    if (this.form.value.promotionActive && this.promotionType == 'percentage' && !this.form.value.promotionPercentage) {\r\n      return throwError(Error(\"Você precisa definir a porcentagem de desconto\"));\r\n    }\r\n\r\n    if (!this.form.value.promotionActive) {\r\n      let obj = {\r\n        promotionPercentage: null,\r\n        promotionPrice: null\r\n      }\r\n      this.form.patchValue(obj);\r\n    }\r\n    else if (this.promotionType == 'money') {\r\n      let obj = {\r\n        promotionPrice: this.form.value.promotionPrice >= 0 ? this.form.value.promotionPrice : -1 * this.form.value.promotionPrice,\r\n        promotionPercentage: null\r\n      }\r\n      this.form.patchValue(obj);\r\n    }\r\n    else {\r\n      let obj = {\r\n        promotionPrice: null\r\n      }\r\n      this.form.patchValue(obj);\r\n    }\r\n    console.log(\"promoção a ser salva: \", this.form.value);\r\n    let new_promotion: Promotion = this.form.value;\r\n    // Convertendo o priceBase de string para número\r\n    new_promotion.priceBase = +new_promotion.priceBase;\r\n    // Página de edição, atualizar objeto no database\r\n    if (this.promotion) {\r\n      this.saveChange = true;\r\n      return Promotion.update(this.promotion.id, new_promotion)\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n    //Página de registro, criar novo objeto no database\r\n    else {\r\n      this.saveChange = true;\r\n      return Promotion.add(new_promotion, [\r\n        {\r\n          relationship: Promotion.company,\r\n          id: this.company.id\r\n        }\r\n      ])\r\n        .pipe(tap(() => {\r\n          this.cancel()\r\n        }))\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}