{"version":3,"sources":["webpack:///./src/app/panel/pages/company/company-list/company-list.module.ts","webpack:///./src/app/panel/pages/company/company-list/company-list.page.html","webpack:///./src/app/panel/pages/company/company-list/company-list.page.scss","webpack:///./src/app/panel/pages/company/company-list/company-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-company-company-list-company-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CompanyListPage } from './company-list.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CompanyListPage]\r\n})\r\nexport class CompanyListPageModule {}\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Empresas\\\" icon=\\\"menus-icon-building\\\">\\r\\n  </nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchString\\\" placeholder=\\\"Pesquisar\\\" (ionChange)=\\\"detect()\\\">\\r\\n    </ion-searchbar>\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <ion-list>\\r\\n        <div class=\\\"container\\\" no-lines padding *ngFor=\\\"let company of companies$ | async | filterBy:['name']:searchString\\\" text-wrap>\\r\\n          <h2 ion-text class=\\\"company-name\\\" [ngClass]=\\\"{inactive: !company?.active}\\\">{{company.name}}</h2>\\r\\n          <ion-input type=\\\"text\\\" value=\\\"{{company.id}}\\\"></ion-input>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"edit(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Editar\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openFiliais(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Filiais\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openProducts(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Produtos\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openPromotions(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Promoções\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openOrders(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Pedidos\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openOrdersPromotion(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Promoções geradas\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openFinancial(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Vendas\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openEmployee(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Funcionários\\r\\n          </ion-button>\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"openEvaluate(company)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Avaliações\\r\\n          </ion-button>\\r\\n          <ion-item class=\\\"active-button\\\">\\r\\n            <ion-label>Ativo</ion-label>\\r\\n            <ion-toggle [(ngModel)]=\\\"company.active\\\" (ionChange)=\\\"changeActiveStatus(company)\\\"></ion-toggle>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n      </ion-list>\\r\\n    </nano-loading>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n\\r\\n</ion-content>\"","module.exports = \".company-name {\\n  margin-top: 0px !important; }\\n\\ndiv.container {\\n  border-bottom: 1px solid #eee;\\n  justify-content: space-between;\\n  align-items: center;\\n  align-content: center; }\\n\\ndiv.container h2 {\\n    font-weight: bold;\\n    color: var(--ion-color-primary); }\\n\\ndiv.container h2.inactive {\\n    font-weight: normal;\\n    color: lightgrey;\\n    text-decoration: line-through; }\\n\\ndiv.container ion-item.active-button {\\n    width: 10em; }\\n\\ndiv.container ion-item ion-label {\\n    font-size: 1.2em;\\n    font-weight: bold;\\n    color: var(--ion-color-primary); }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core'\r\nimport { NavController, MenuController } from '@ionic/angular'\r\nimport { Observable } from 'rxjs'\r\nimport { tap } from 'rxjs/operators'\r\nimport { Company } from '../../../../../models/company'\r\nimport { SharedService } from '../../../../services/shared.service';\r\n//import { RestaurantEditPage, FilialListPage, OrderListPage, InvoicePage, ProductListPage } from '../../pages';\r\n\r\n@Component({\r\n  selector: 'app-company-list',\r\n  templateUrl: './company-list.page.html',\r\n  styleUrls: ['./company-list.page.scss'],\r\n})\r\nexport class CompanyListPage implements OnInit {\r\n\r\n  searchString: string\r\n\r\n  companies$: Observable<Company[]> = Company.list<Company>().pipe(tap(() => {\r\n    this.loading = false\r\n    setTimeout(() => {\r\n      this.ref.detectChanges()\r\n    }, 30);\r\n  }));\r\n\r\n  loading: boolean = true\r\n\r\n  constructor(public navCtrl: NavController,\r\n    private menuCtrl: MenuController,\r\n    private ref: ChangeDetectorRef,\r\n    public shared: SharedService) { }\r\n\r\n  /**\r\n   * Inicializando estruturas após entrar na página.\r\n   */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true);\r\n  }\r\n\r\n  detect() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  add() {\r\n    this.navCtrl.navigateRoot('company/edit')\r\n  }\r\n\r\n  edit(company: Company) {\r\n    this.navCtrl.navigateRoot(['company/edit', { id: (company ? company.id : undefined) }])\r\n  }\r\n\r\n  openFiliais(company: Company) {\r\n    this.navCtrl.navigateRoot(['filial/list', { company_id: company.id }])\r\n  }\r\n\r\n  openOrders(company: Company) {\r\n    this.navCtrl.navigateRoot(['order/list', { company_id: company.id }])\r\n  }\r\n\r\n  openOrdersPromotion(company: Company) {\r\n    this.navCtrl.navigateRoot(['order/promotion/list', { company_id: company.id }])\r\n  }\r\n\r\n  openFinancial(company: Company) {\r\n    this.navCtrl.navigateRoot(['statistic/orders', { company_id: company.id }])\r\n  }\r\n\r\n  openProducts(company: Company) {\r\n    this.navCtrl.navigateRoot(['product/list', { company_id: company.id }])\r\n  }\r\n\r\n  openPromotions(company: Company) {\r\n    this.navCtrl.navigateRoot(['promotion/list', { company_id: company.id }])\r\n  }\r\n\r\n  openEmployee(company: Company) {\r\n    this.navCtrl.navigateRoot(['employee/list', { company_id: company.id }])\r\n  }\r\n\r\n  openEvaluate(company: Company) {\r\n    this.navCtrl.navigateRoot(['evaluation/list', { company_id: company.id }])\r\n  }\r\n\r\n  changeActiveStatus(company) {\r\n    let rest: Company = {};\r\n    rest.active = company.active;\r\n    Company.update(company.id, rest).subscribe()\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}