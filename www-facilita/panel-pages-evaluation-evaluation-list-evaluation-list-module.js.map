{"version":3,"sources":["webpack:///./src/app/panel/pages/evaluation/evaluation-list/evaluation-list.module.ts","webpack:///./src/app/panel/pages/evaluation/evaluation-list/evaluation-list.page.html","webpack:///./src/app/panel/pages/evaluation/evaluation-list/evaluation-list.page.scss","webpack:///./src/app/panel/pages/evaluation/evaluation-list/evaluation-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-evaluation-evaluation-list-evaluation-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EvaluationListPage } from './evaluation-list.page';\r\nimport { OrderDetailPage } from '../../order/order-detail/order-detail.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\nimport { OrderDetailPageModule } from '../../order/order-detail/order-detail.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EvaluationListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes),\r\n    OrderDetailPageModule\r\n  ],\r\n  declarations: [EvaluationListPage]\r\n})\r\nexport class EvaluationListPageModule { }\r\n","module.exports = \"<ion-header>\\r\\n  <nano-navbar title=\\\"Avaliações\\\" icon=\\\"menus-icon-ecommerce-3\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-card class=\\\"content-card\\\" margin>\\r\\n    <div class=\\\"search-order-list\\\">\\r\\n      <ion-searchbar [(ngModel)]=\\\"input_search\\\" placeholder=\\\"Filtrar pelo cliente ou filial \\\">\\r\\n      </ion-searchbar>\\r\\n      <ion-item class=\\\"date-filter\\\">\\r\\n        <ion-label stacked>Data</ion-label>\\r\\n        <ion-datetime displayFormat=\\\"MM/YYYY\\\" [(ngModel)]=\\\"dateInput\\\" (ionChange)=\\\"changeDate()\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n    <ion-list class=\\\"list-evaluation\\\">\\r\\n      <ion-item class=\\\"item-evaluation\\\" *ngFor=\\\"let order of orders$ | async |\\r\\n           filterBy:['user_full.name','filial_full.name']: input_search ; let i = index\\\">\\r\\n        <h1 ion-text>{{order.user_full.name}}\\r\\n          <span class=\\\"star-number\\\">\\r\\n            <ion-icon name=\\\"star\\\"></ion-icon>{{order.evaluate.rate | number : '1.1-1'}}</span>\\r\\n        </h1>\\r\\n        <p ion-text>{{order.filial_full.name}}</p>\\r\\n        <h2 ion-text *ngIf=\\\"order.evaluate.comment\\\">Comentário: {{order.evaluate.comment}}</h2>\\r\\n        <h3 ion-text item-right (click)=\\\"presentModal(order)\\\" class=\\\"more\\\">Detalhes do pedido</h3>\\r\\n      </ion-item>\\r\\n      <ion-item text-center padding *ngIf=\\\"!loading\\\" class=\\\"noEvaluation\\\">\\r\\n        <p ion-text>Você ainda não possui nenhuma avaliação</p>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-item text-center *ngIf=\\\"loading\\\">\\r\\n      <ion-spinner></ion-spinner>\\r\\n    </ion-item>\\r\\n\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\"","module.exports = \"h2,\\nh1 {\\n  white-space: normal; }\\n\\n.noEvaluation {\\n  display: none; }\\n\\n.noEvaluation:first-child {\\n    display: block !important; }\\n\\n.search-order-list {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex-wrap: wrap; }\\n\\n.search-order-list ion-item {\\n    border-bottom: solid 2px #dddddd;\\n    padding-bottom: 5px; }\\n\\n@media (max-width: 420px) {\\n      .search-order-list ion-item .item-inner {\\n        display: flex;\\n        flex-direction: column; } }\\n\\n.search-order-list .datetime-md {\\n    padding: 7px 8px 7px 0px !important; }\\n\\n@media (max-width: 420px) {\\n  .list-evaluation .item-evaluation .item-inner {\\n    display: flex;\\n    flex-direction: column; } }\\n\\n.date-filter {\\n  width: 300px; }\\n\\n.date-filter .item-inner {\\n    border-bottom: 0 !important; }\\n\\n.more {\\n  cursor: pointer;\\n  padding-top: 1em;\\n  color: purple; }\\n\\n.star-number {\\n  color: var(--ion-color-primary) !important;\\n  font-size: 15px; }\\n\\n.star-number ion-icon {\\n    margin-right: 5px; }\\n\"","import * as moment from 'moment'\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { switchMap, first, map, flatMap, tap, catchError } from 'rxjs/operators';\r\nimport { ParamMap, ActivatedRoute } from '@angular/router';\r\nimport { Company } from '../../../../../models/company';\r\nimport { of, Observable, combineLatest } from 'rxjs';\r\nimport { Order } from '../../../../../models/order';\r\nimport { User } from '../../../../../models/user';\r\nimport { Filial } from '../../../../../models/filial';\r\nimport { OrderDetailPage } from '../../order/order-detail/order-detail.page';\r\nimport { MenuController, NavController, LoadingController, ModalController } from '@ionic/angular';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { AuthenticationService } from '../../../../services/authentication.service';\r\nimport { SystemService } from '../../../../services/system.service';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-list',\r\n  templateUrl: './evaluation-list.page.html',\r\n  styleUrls: ['./evaluation-list.page.scss'],\r\n})\r\nexport class EvaluationListPage implements OnInit {\r\n\r\n\t/**\r\n\t * Observable com a lista de pedidos com avaliações do restaurante ou da filial\r\n\t */\r\n  orders$: Observable<Order[]>;\r\n\r\n  /**\r\n   * Se está carregando os elementos da página\r\n   */\r\n  loading: boolean = true\r\n\r\n  /**\r\n   * Se existe alguma avaliação\r\n   */\r\n  existsEvaluation: boolean = true\r\n\r\n  /**\r\n\t * Data do input\r\n\t */\r\n  dateInput = moment().format();\r\n\r\n\t/**\r\n\t * Data para filtrar os pedidos\r\n\t */\r\n  dateStart: Date = new Date();\r\n  dateEnd: Date;\r\n\r\n\t/**\r\n\t * Input de pesquisa\r\n\t */\r\n  input_search: string\r\n\r\n  constructor(public menuCtrl: MenuController,\r\n    public shared: SharedService,\r\n    public authentication: AuthenticationService,\r\n    public system: SystemService,\r\n    public navCtrl: NavController,\r\n    private ref: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    public loadingCtrl: LoadingController,\r\n    public modalCtrl: ModalController\r\n  ) {\r\n    this.dateFilter(this.dateStart)\r\n  }\r\n\r\n  /**\r\n   * Inicializando estruturas após entrar na página.\r\n   */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true);\r\n    this.load();\r\n  }\r\n\r\n  /**\r\n   * Carrega a lista da página\r\n   */\r\n  load() {\r\n    this.loading = true\r\n    this.existsEvaluation = true\r\n\r\n    this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else if (this.shared.isManager)\r\n          return this.shared.company$\r\n        else\r\n          return of(null)\r\n      }))\r\n      .pipe(first())\r\n      .subscribe((company: Company) => {\r\n        if (!company && !this.shared.isTeam) {\r\n          const error: Error = Error(\"Restaurante não encontrado\");\r\n          this.system.showErrorAlert(error);\r\n          this.navCtrl.navigateRoot(this.shared.rootPage)\r\n          return;\r\n        }\r\n        //GERENTE GERAL\r\n        if (this.shared.isManager || this.shared.isTeam) {\r\n          let obj$: Observable<Order[]>\r\n          if (this.shared.isManager || company) {\r\n            obj$ = Company.orders.list(company.id,\r\n              [\r\n                { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n                { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n              ]\r\n              , [\r\n                {\r\n                  name: \"created_at\",\r\n                  type: \"desc\"\r\n                }\r\n              ])\r\n          } else if (this.shared.isTeam) {\r\n            obj$ = Order.list(\r\n              [\r\n                { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n                { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n              ]\r\n              , [\r\n                {\r\n                  name: \"created_at\",\r\n                  type: \"desc\"\r\n                }\r\n              ])\r\n          } else {\r\n            throw Error(\"Erro aleatório\")\r\n          }\r\n          this.orders$ = obj$\r\n            .pipe(map((orders: Order[]) => {\r\n              if (!orders || orders.length <= 0) return []\r\n              return orders.filter((order: Order) => order.evaluate)\r\n            }))\r\n            .pipe(flatMap((orders: Order[]) => {\r\n              if (!orders || orders.length <= 0) return of([])\r\n\r\n              return combineLatest(orders.map((order) => User.object(order.user.id)))\r\n                .pipe(map((users: User[]) => {\r\n                  for (let i = 0; i < users.length; i++) {\r\n                    orders[i].user_full = users[i]\r\n                  }\r\n                  return orders\r\n                }))\r\n                .pipe(flatMap((orders: Order[]) => {\r\n                  if (!orders || orders.length <= 0) return of([])\r\n                  return combineLatest(orders.map((order) => Filial.object(order.filial.id)))\r\n                    .pipe(map((filials: Filial[]) => {\r\n                      for (let i = 0; i < filials.length; i++) {\r\n                        orders[i].filial_full = filials[i]\r\n                      }\r\n                      return orders\r\n                    }))\r\n                }))\r\n            }))\r\n        }\r\n        //GERENTE DE FILIAL\r\n        else if (this.shared.isFilialManager) {\r\n          this.orders$ = this.shared.filial$.pipe(flatMap((filial: Filial) => {\r\n            return Filial.orders.list(filial.id, [\r\n              { name: \"created_at\", operator: \">=\", value: this.dateStart },\r\n              { name: \"created_at\", operator: \"<\", value: this.dateEnd }\r\n            ]\r\n              , [\r\n                {\r\n                  name: \"created_at\",\r\n                  type: \"desc\"\r\n                }\r\n              ]).pipe(map((orders: Order[]) => {\r\n                if (!orders || orders.length <= 0) return []\r\n                return orders.filter((order: Order) => order.evaluate)\r\n              }))\r\n              .pipe(flatMap((orders: Order[]) => {\r\n                if (!orders || orders.length <= 0) return of([])\r\n                return combineLatest(orders.map((order) => User.object(order.user.id)))\r\n                  .pipe(map((users: User[]) => {\r\n                    for (let i = 0; i < users.length; i++) {\r\n                      orders[i].user_full = users[i]\r\n                      orders[i].filial_full = filial\r\n                    }\r\n                    return orders\r\n                  }))\r\n              }))\r\n          }))\r\n        } else {\r\n          const error: Error = Error(\"Página de avaliações só pode ser acessada por Gerente Geral ou Gerente de Filial\");\r\n          this.system.showErrorAlert(error);\r\n        }\r\n        this.orders$ = this.orders$.pipe(tap((orders: Order[]) => {\r\n          if (!orders || orders.length <= 0) this.existsEvaluation = false\r\n          else this.existsEvaluation = true\r\n          this.loading = false\r\n          this.ref.detectChanges()\r\n        })).pipe(catchError((err) => {\r\n          this.system.showErrorAlert(err)\r\n          return []\r\n        }))\r\n      }, err => {\r\n        this.loading = false\r\n        this.ref.detectChanges()\r\n        this.system.showErrorAlert(err);\r\n      })\r\n  }\r\n\r\n  changeDate() {\r\n    this.dateFilter(this.dateInput)\r\n    this.load()\r\n  }\r\n\r\n  dateFilter(date) {\r\n    this.dateStart = new Date(date)\r\n    this.dateStart.setDate(1)\r\n    this.dateStart.setHours(0, 0, 0)\r\n    this.dateEnd = new Date(this.dateStart)\r\n    let aux = this.dateStart.getMonth()\r\n    if (aux == 12) {\r\n      this.dateEnd.setMonth(1)\r\n    } else {\r\n      this.dateEnd.setMonth(aux + 1)\r\n    }\r\n  }\r\n  /**\r\n   * Modal que detalha o pedido\r\n   */\r\n  async presentModal(order: Order) {\r\n    let loading = await this.loadingCtrl.create({})\r\n    loading.present()\r\n    let modal = await this.modalCtrl.create({\r\n      component: OrderDetailPage,\r\n      componentProps: { order: order }\r\n    });\r\n    modal.present().then(() => {\r\n      loading.dismiss()\r\n    })\r\n  }\r\n}"],"sourceRoot":""}