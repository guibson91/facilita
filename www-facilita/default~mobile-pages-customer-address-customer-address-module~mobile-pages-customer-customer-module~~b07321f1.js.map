{"version":3,"sources":["webpack:///./src/app/mobile/pages/address-edit/address-edit.module.ts","webpack:///./src/app/mobile/pages/address-edit/address-edit.page.html","webpack:///./src/app/mobile/pages/address-edit/address-edit.page.scss","webpack:///./src/app/mobile/pages/address-edit/address-edit.page.ts","webpack:///./src/app/mobile/pages/customer-address/customer-address.module.ts","webpack:///./src/app/mobile/pages/customer-address/customer-address.page.html","webpack:///./src/app/mobile/pages/customer-address/customer-address.page.scss","webpack:///./src/app/mobile/pages/customer-address/customer-address.page.ts"],"names":[],"mappings":"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","file":"default~mobile-pages-customer-address-customer-address-module~mobile-pages-customer-customer-module~~b07321f1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AddressEditPage } from './address-edit.page';\r\nimport { GlobalComponentsModule } from '../../../components/global-components.module';\r\nimport { MobileComponentsModule } from '../../components/mobile-components.module';\r\nimport { PipesModule } from '../../../pipes/pipes.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //Custom Modules\r\n    GlobalComponentsModule,\r\n    MobileComponentsModule,\r\n    ReactiveFormsModule,\r\n    PipesModule,\r\n    ReactiveFormsModule,\r\n\r\n    //Default Modules\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n  ],\r\n  declarations: [AddressEditPage],\r\n  entryComponents: [AddressEditPage]\r\n})\r\nexport class AddressEditPageModule { }","module.exports = \"<ion-header no-border>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"dismiss()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"ios-arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <h3 ion-text text-uppercase color=\\\"light\\\" class=\\\"my-font-logo\\\">NOVO ENDEREÇO</h3>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <div [ngSwitch]=\\\"activeIndex\\\">\\r\\n    <div *ngSwitchCase=\\\"0\\\">\\r\\n      <div class=\\\"slide-header\\\" padding>\\r\\n        <h6 ion-text no-margin> Brasil</h6>\\r\\n        <h5 ion-text class=\\\"bold\\\" no-margin margin-top> Qual o seu CEP?</h5>\\r\\n        <ion-searchbar type=\\\"number\\\" [(ngModel)]=\\\"search_address\\\" (ionChange)=\\\"searchAddress($event)\\\" class=\\\"slide-body search-slide\\\"\\r\\n          debounce=\\\"700\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Digite seu CEP\\\"></ion-searchbar>\\r\\n        <div class=\\\"poweredgoogle\\\">\\r\\n          <img src=\\\"./assets/img/powered_by_google_on_white.png\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <nano-loading [loading]=\\\"search_loading\\\"></nano-loading>\\r\\n      <p ion-text class=\\\"search-error\\\" *ngIf=\\\"search_address_error\\\">Por favor verifique sua conexão e tente novamente</p>\\r\\n      <ion-item tappable no-lines *ngFor=\\\"let address of address_suggestions\\\" (click)=\\\"selectAddress(address)\\\" class=\\\"slide-body\\\"\\r\\n        text-wrap>\\r\\n        <h6 margin>{{address.text}}</h6>\\r\\n      </ion-item>\\r\\n      <ion-button no-lines fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"next()\\\" class=\\\"slide-body cep-button\\\" text-wrap>Não\\r\\n        sei meu CEP</ion-button>\\r\\n      <!-- <button ion-button no-lines fill=\\\"clear\\\" block color=\\\"firebase-bg-dark\\\" (click)=\\\"notFoundAddress()\\\" class=\\\"slide-body cep-button more-width\\\"\\r\\n        text-wrap *ngIf=\\\"address_not_found\\\">Não encontrei meu cep</button> -->\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"1\\\">\\r\\n      <div class=\\\"slide-content\\\">\\r\\n        <div class=\\\"slide-header\\\" padding>\\r\\n          <h5 ion-text class=\\\"bold\\\" no-margin> Qual o seu estado?</h5>\\r\\n        </div>\\r\\n        <ion-item *ngFor=\\\"let state of states\\\" (click)=\\\"selectState(state)\\\" class=\\\"slide-body\\\">{{state.title}}\\r\\n          - {{state.value}}</ion-item>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"2\\\">\\r\\n      <div class=\\\"slide-header\\\" padding>\\r\\n        <h6 ion-text no-margin> {{form.value.location.state}} - Brasil</h6>\\r\\n        <h5 ion-text class=\\\"bold\\\" no-margin margin-top> Qual a sua cidade?</h5>\\r\\n        <ion-searchbar [(ngModel)]=\\\"search_city\\\" (ionChange)=\\\"searchCity($event)\\\" class=\\\"slide-body search-slide\\\"\\r\\n          debounce=\\\"700\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Digite aqui sua cidade\\\"></ion-searchbar>\\r\\n        <div class=\\\"poweredgoogle\\\">\\r\\n          <img src=\\\"./assets/img/powered_by_google_on_white.png\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <nano-loading [loading]=\\\"search_loading\\\"></nano-loading>\\r\\n      <p ion-text class=\\\"search-error\\\" *ngIf=\\\"search_city_error\\\">Por favor verifique sua conexão e tente novamente</p>\\r\\n      <ion-button no-lines fill=\\\"clear\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"notFoundCity()\\\" class=\\\"slide-body\\\"\\r\\n        text-wrap *ngIf=\\\"city_not_found\\\">Não encontrei minha cidade</ion-button>\\r\\n      <ion-item tappable no-lines ion-text *ngFor=\\\"let city of city_suggestions\\\" (click)=\\\"selectCity(city)\\\" class=\\\"slide-body\\\"\\r\\n        text-wrap>{{city.name}}</ion-item>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"3\\\">\\r\\n      <div class=\\\"slide-header\\\" padding>\\r\\n        <h6 ion-text no-margin> {{form.value.location.city}}, {{form.value.location.state}} - Brasil</h6>\\r\\n        <h5 ion-text class=\\\"bold\\\" no-margin margin-top>Qual o seu bairro?</h5>\\r\\n        <ion-searchbar [(ngModel)]=\\\"search_district\\\" (ionChange)=\\\"searchDistrict($event)\\\" class=\\\"slide-body search-slide\\\"\\r\\n          [debounce]=\\\"700\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Digite aqui seu bairro\\\"></ion-searchbar>\\r\\n        <div class=\\\"poweredgoogle\\\">\\r\\n          <img src=\\\"./assets/img/powered_by_google_on_white.png\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <nano-loading [loading]=\\\"search_loading\\\"></nano-loading>\\r\\n      <p ion-text class=\\\"search-error\\\" *ngIf=\\\"search_district_error\\\">Por favor verifique sua conexão e tente\\r\\n        novamente</p>\\r\\n      <ion-button no-lines fill=\\\"clear\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"notFoundDistrict()\\\" class=\\\"slide-body\\\"\\r\\n        text-wrap *ngIf=\\\"district_not_found\\\">Não encontrei meu bairro</ion-button>\\r\\n      <ion-item tappable no-lines ion-text *ngFor=\\\"let district of district_suggestions\\\" (click)=\\\"selectDistrict(district)\\\"\\r\\n        class=\\\"slide-body\\\" text-wrap>{{district.name}}</ion-item>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"4\\\">\\r\\n        <div class=\\\"slide-header\\\" padding>\\r\\n          <h6 ion-text no-margin>{{form.value.location.district}}, {{form.value.location.city}}, {{form.value.location.state}} -\\r\\n              Brasil</h6>\\r\\n          <h5 ion-text class=\\\"bold\\\" no-margin margin-top> Qual a sua rua?</h5>\\r\\n          <ion-searchbar [(ngModel)]=\\\"search_street\\\" (ionChange)=\\\"searchStreet($event)\\\" class=\\\"slide-body search-slide\\\"\\r\\n            [debounce]=\\\"700\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Digite aqui a sua rua\\\"></ion-searchbar>\\r\\n          <div class=\\\"poweredgoogle\\\">\\r\\n            <img src=\\\"./assets/img/powered_by_google_on_white.png\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <nano-loading [loading]=\\\"search_loading\\\"></nano-loading>\\r\\n        <p ion-text class=\\\"search-error\\\" *ngIf=\\\"search_street_error\\\">Por favor verifique sua conexão e tente novamente</p>\\r\\n        <ion-item tappable no-lines ion-text *ngFor=\\\"let street of street_suggestions\\\" (click)=\\\"selectStreet(street)\\\"\\r\\n          class=\\\"slide-body\\\" text-wrap>{{street.name}}</ion-item>\\r\\n        <div class=\\\"street_not_found\\\">\\r\\n          <ion-button no-lines fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"selectStreet({name: search_street})\\\" class=\\\"slide-body\\\"\\r\\n            text-wrap *ngIf=\\\"street_not_found\\\">Não encontrei minha rua</ion-button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-slide\\\" *ngSwitchCase=\\\"5\\\">\\r\\n      <div class=\\\"slide-content\\\">\\r\\n        <form [formGroup]=\\\"form.controls.location\\\">\\r\\n          <!-- <ion-card class=\\\"form\\\" formGroupName=\\\"location\\\"> -->\\r\\n          <ion-card class=\\\"form\\\">\\r\\n            <div class=\\\"state-city\\\">\\r\\n              <ion-item class=\\\"input-small remove-padding-item\\\" tappable>\\r\\n                <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\" class=\\\"disabled\\\"> Estado </ion-label>\\r\\n                <ion-input readonly formControlName=\\\"state_short\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item tappable class=\\\"remove-padding-item\\\">\\r\\n                <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\" class=\\\"disabled\\\"> Cidade </ion-label>\\r\\n                <ion-input readonly formControlName=\\\"city\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <ion-item tappable>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\" class=\\\"disabled\\\"> Bairro </ion-label>\\r\\n              <ion-input readonly formControlName=\\\"district\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"state-city\\\" *ngIf=\\\"!formIncomplete\\\">\\r\\n              <ion-item class=\\\"remove-padding-item\\\">\\r\\n                <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Rua / Avenida </ion-label>\\r\\n                <ion-input formControlName=\\\"street\\\"></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item class=\\\"input-small remove-padding-item\\\">\\r\\n                <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Número </ion-label>\\r\\n                <ion-input type=\\\"number\\\" formControlName=\\\"number\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Complemento </ion-label>\\r\\n              <ion-input formControlName=\\\"complement\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Ponto de referência </ion-label>\\r\\n              <ion-input formControlName=\\\"landmark\\\"></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-card>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div #suggestionscity></div>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer *ngIf=\\\"new_address\\\">\\r\\n\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n\\r\\n    <ion-row class=\\\"buttons-footer\\\" no-padding>\\r\\n      <ion-col class=\\\"prev\\\" no-padding>\\r\\n        <ion-button *ngIf=\\\"isBeginning\\\" fill=\\\"clear\\\" color=\\\"extralight\\\" (click)=\\\"dismiss()\\\">\\r\\n          <ion-icon name=\\\"ios-arrow-back\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          Cancelar\\r\\n        </ion-button>\\r\\n        <ion-button *ngIf=\\\"!isBeginning\\\" fill=\\\"clear\\\" color=\\\"extralight\\\" class=\\\"prev\\\" (click)=\\\"prev()\\\">\\r\\n          <ion-icon name=\\\"ios-arrow-back\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          Voltar\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col no-padding class=\\\"next\\\">\\r\\n        <ion-button *ngIf=\\\"isEnd\\\" fill=\\\"clear\\\" color=\\\"extralight\\\" (click)=\\\"register()\\\">\\r\\n          Salvar\\r\\n          <ion-icon name=\\\"ios-arrow-forward\\\" slot=\\\"end\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-footer>\\r\\n\\r\\n\\r\\n\\r\\n<ion-footer *ngIf=\\\"!new_address\\\">\\r\\n\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"primary\\\" class=\\\"register-button\\\" (click)=\\\"register()\\\">SALVAR</ion-button>\\r\\n\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-footer>\"","module.exports = \".cep-button {\\n  margin: 20px auto;\\n  width: 50%;\\n  margin-left: 25%; }\\n\\n.more-width {\\n  width: 60%;\\n  margin-left: 20%; }\\n\\n.form-slide {\\n  background-color: #f4f4f4 !important; }\\n\\n.form-slide ion-card {\\n    width: 100% !important;\\n    margin-left: 0 !important; }\\n\\n.form-slide .form {\\n    padding: 10px 10px 20px 10px;\\n    background-color: #fff; }\\n\\n.form-slide .form ion-input {\\n      border: 1px solid #dedede !important;\\n      background-color: white !important;\\n      border-radius: 5px !important; }\\n\\n.form-slide .form ion-input .text-input {\\n        margin: 5px 8px !important; }\\n\\n.form-slide .form ion-label {\\n      color: var(--ion-color-primary) !important;\\n      color: var(--ion-color-primary); }\\n\\n.form-slide .form .disabled {\\n      color: #CCC !important; }\\n\\n.form-slide .form .state-city {\\n      justify-content: space-around;\\n      display: flex; }\\n\\n.form-slide .form .state-city .input-small {\\n        width: 35%;\\n        padding: 0 !important; }\\n\\n.form-slide .scroll-content {\\n    background-color: #f4f4f4; }\\n\\n.form-slide ion-item {\\n    padding: 0 !important; }\\n\\n.form-slide ion-label {\\n    color: var(--ion-color-primary) !important;\\n    font-weight: bold !important; }\\n\\n.form-slide .item-inner,\\n  .form-slide .item-input {\\n    border-bottom: 0px solid #dedede !important;\\n    box-shadow: inset 0 0px 0 0 #32db64 !important; }\\n\\n.form-slide ion-row,\\n  .form-slide .mybuttons {\\n    background-color: #f4f4f4; }\\n\\nform {\\n  height: 100%; }\\n\\nion-slide .slide-zoom {\\n  height: 100%;\\n  text-align: left; }\\n\\n.slide-content {\\n  height: -webkit-fill-available;\\n  height: -moz-available;\\n  height: stretch; }\\n\\n.slide-header {\\n  background: var(--ion-color-extralight-shade) !important; }\\n\\n.slide-header h2.text {\\n    font-size: 1.6rem; }\\n\\nh6 {\\n  color: var(--ion-color-medium-shade); }\\n\\nh5 {\\n  color: var(--ion-color-medium-shade); }\\n\\n.bold {\\n  font-weight: bold; }\\n\\nform ion-item {\\n  --background: white; }\\n\\n.search-slide {\\n  padding-left: 3px; }\\n\\n.search-slide .searchbar-input-container {\\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2); }\\n\\n.search-error {\\n  margin: 10px 10px;\\n  text-align: center;\\n  font-size: 14px; }\\n\\n.poweredgoogle {\\n  margin-right: 6px;\\n  display: flex;\\n  justify-content: flex-end; }\\n\\nion-footer {\\n  background: var(--ion-color-primary); }\\n\\nion-footer .buttons-footer {\\n    background: var(--ion-color-primary); }\\n\\nion-footer .prev {\\n    display: flex;\\n    justify-content: flex-start; }\\n\\nion-footer .next {\\n    display: flex;\\n    justify-content: flex-end; }\\n\\nion-footer button.button {\\n    color: white; }\\n\\n.street_not_found {\\n  display: flex;\\n  justify-content: center;\\n  padding-top: 12px; }\\n\\n.register-button {\\n  margin: 0px !important;\\n  padding: 0px !important;\\n  box-shadow: none !important; }\\n\"","import { Observable, of, combineLatest } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { PlacesService } from '../../../services/places.service';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { SystemService } from '../../../services/system.service';\r\nimport { Platform, LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n  Input\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { STATES } from '../../../util/util';\r\nimport { Log, LogOriginTypes } from '../../../../models/log';\r\nimport { Location } from '../../../../models/utils/location';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-address-edit',\r\n  templateUrl: './address-edit.page.html',\r\n  styleUrls: ['./address-edit.page.scss'],\r\n})\r\nexport class AddressEditPage implements OnInit {\r\n\r\n  showForm: boolean;\r\n  toUpdateDB: boolean;\r\n  @ViewChild('suggestionscity') suggestionCities;\r\n\r\n  slideOpts = {\r\n    effect: 'flip'\r\n  };\r\n\r\n  autocompleteService: google.maps.places.AutocompleteService = new google.maps.places.AutocompleteService()\r\n  placesService: google.maps.places.PlacesService\r\n\r\n\r\n  form: FormGroup;\r\n  enableStreet: boolean = false;\r\n  enableNumber: boolean = false;\r\n\r\n  states: { value: string, title: string }[] = STATES\r\n  search_city: string;\r\n  search_district: string;\r\n  search_street: string;\r\n  search_address: string;\r\n\r\n  nextFromCep: boolean\r\n\r\n  city_not_found: boolean;\r\n  district_not_found: boolean;\r\n  street_not_found: boolean;\r\n  address_not_found: boolean\r\n\r\n  search_city_error: boolean;\r\n  search_district_error: boolean;\r\n  search_street_error: boolean;\r\n  search_address_error: boolean\r\n\r\n  address_suggestions: any[]\r\n  city_suggestions: {\r\n    name: string,\r\n    latitude?: number,\r\n    longitude?: number\r\n  }[]\r\n\r\n  district_suggestions: {\r\n    name: string,\r\n    latitude?: number,\r\n    longitude?: number\r\n  }[]\r\n\r\n  street_suggestions: {\r\n    name: string,\r\n    latitude: number,\r\n    longitude: number\r\n  }[]\r\n\r\n  error: {\r\n    code: number,\r\n    title: string,\r\n    message: string\r\n  };\r\n\r\n  @Input()\r\n  location_user: Location\r\n\r\n  /**\r\n   * Auxiliares para evitar requisições anteriores não sobrescrevam requisições posteriores\r\n   */\r\n  search_index: number = 1\r\n  search_received_index: number = 0\r\n  search_loading: boolean = false\r\n\r\n  new_address: boolean\r\n\r\n  @Input()\r\n  location: Location\r\n\r\n  _activeIndex: number = 0\r\n\r\n  get activeIndex() {\r\n    return this._activeIndex\r\n  }\r\n\r\n  set activeIndex(number: number) {\r\n    this._activeIndex = number\r\n    this.change.detectChanges()\r\n  }\r\n  constructor(\r\n    public platform: Platform,\r\n    private route: ActivatedRoute,\r\n    public modalCtrl: ModalController,\r\n    private system: SystemService,\r\n    private shared: SharedService,\r\n    public loadingCtrl: LoadingController,\r\n    private placesProvider: PlacesService,\r\n    private change: ChangeDetectorRef,\r\n    public alertCtrl: AlertController) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm()\r\n    this.system.setScreenName(\"AddressEditPage\")\r\n    // Service usado para fazer as requisições do Places Service\r\n    this.placesService = new google.maps.places.PlacesService(this.suggestionCities.nativeElement)\r\n    // Editar endereço\r\n    this.new_address = true\r\n    if (this.location) {\r\n      this.new_address = false\r\n      this.form.patchValue({\r\n        location: this.location\r\n      });\r\n      this.goToLastSlide()\r\n    }\r\n  }\r\n\r\n  initForm() {\r\n    this.form = new FormGroup({\r\n      location: new FormGroup({\r\n        latitude: new FormControl(''),\r\n        longitude: new FormControl(''),\r\n        country: new FormControl(''),\r\n        country_short: new FormControl(''),\r\n        street: new FormControl('', Validators.required),\r\n        number: new FormControl('', Validators.required),\r\n        complement: new FormControl(''),\r\n        cep: new FormControl(''),\r\n        district: new FormControl('', Validators.required),\r\n        city: new FormControl('', Validators.required),\r\n        state_short: new FormControl('', Validators.required),\r\n        state: new FormControl('', Validators.required),\r\n        landmark: new FormControl('')\r\n      }),\r\n    })\r\n  }\r\n\r\n  goToLastSlide() {\r\n    console.log('ir para ultimo slide: ', this.activeIndex);\r\n    this.activeIndex = 5;\r\n    this.change.detectChanges();\r\n    console.log('fui para ultimo slide: ', this.activeIndex, this.form);\r\n  }\r\n\r\n  /**\r\n   * Seleciona o estado de uma lista predeterminada\r\n   * @param state Estado selecionado\r\n   */\r\n  async selectState(state: { value: string, title: string }) {\r\n    if (this.activeIndex === 1) {\r\n      this.form.controls.location.patchValue({\r\n        state: state.title,\r\n        state_short: state.value\r\n      })\r\n      this.next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Buscar Cep\r\n   */\r\n  searchAddress(event): void {\r\n    this.search_index++;\r\n    let index: number = this.search_index;\r\n    this.search_loading = true\r\n    this.address_not_found = false\r\n    this.search_address_error = false\r\n\r\n    const input: string = this.search_address && this.search_address.length > 4 ?\r\n      `Brasil, ${this.search_address}` :\r\n      undefined;\r\n\r\n    this.getResults(input)\r\n      .pipe(map((results) => {\r\n        return results.map((result) => {\r\n          let address = {\r\n            text: result.formatted_address,\r\n            address_components: result.address_components,\r\n            latitude: result.geometry.location.lat(),\r\n            longitude: result.geometry.location.lng()\r\n          }\r\n          if (!address) return \"\"\r\n          return address\r\n        }).filter((result: any) => { return result.text.length > 0 })\r\n      }))\r\n      .subscribe((r) => {\r\n        if ((!r || r.length <= 0) && (this.search_address && this.search_address.length > 2)) {\r\n          this.address_not_found = true\r\n          this.handlerNotFoundAddress();\r\n        }\r\n        if (index > this.search_received_index) {\r\n          this.address_suggestions = r;\r\n          this.search_received_index = index\r\n        }\r\n        this.search_loading = false\r\n        this.change.detectChanges()\r\n      }, err => {\r\n        console.error(err)\r\n        this.address_suggestions = []\r\n        this.search_loading = false\r\n        this.search_address_error = true\r\n        this.change.detectChanges()\r\n      })\r\n  }\r\n\r\n  public async handlerNotFoundAddress() {\r\n    const confirm = await this.alertCtrl.create({\r\n      header: 'CEP não encontrado',\r\n      message: `Você tem certeza que o CEP ${this.search_address} está correto?`,\r\n      buttons: [\r\n        {\r\n          text: 'Não',\r\n          handler: () => {\r\n          }\r\n        },\r\n        {\r\n          text: 'Sim',\r\n          handler: async () => {\r\n            const alert = await this.alertCtrl.create({\r\n              header: 'Não se preocupe!',\r\n              subHeader: 'Vamos localizar seu endereço preenchendo-o manualmente',\r\n              buttons: [{\r\n                text: 'OK',\r\n                handler: () => {\r\n                  this.next();\r\n                }\r\n              }]\r\n            });\r\n            alert.present();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n  }\r\n\r\n  selectAddress(address: any) {\r\n    console.log('Cliquei no endereco: ', address);\r\n    let a = address.address_components\r\n    a = a.slice(0).reverse();\r\n    let index = 0\r\n    for (let components of a) {\r\n      if (components.types.indexOf(\"postal_code\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          cep: components.long_name\r\n        })\r\n      } else if (components.types.indexOf(\"country\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          country: components.long_name,\r\n          country_short: components.short_name\r\n        })\r\n        index++\r\n      } else if (components.types.indexOf(\"administrative_area_level_1\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          state: components.long_name,\r\n          state_short: components.short_name\r\n        })\r\n        index++\r\n      } else if (components.types.indexOf(\"administrative_area_level_2\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          city: components.long_name\r\n        })\r\n        index++\r\n      } else if (components.types.indexOf(\"sublocality_level_1\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          district: components.long_name\r\n        })\r\n        index++\r\n      } else if (components.types.indexOf(\"route\") >= 0) {\r\n        this.form.controls.location.patchValue({\r\n          street: components.long_name\r\n        })\r\n        index++\r\n      }\r\n    }\r\n\r\n    this.form.controls.location.patchValue({\r\n      latitude: address.latitude,\r\n      longitude: address.longitude,\r\n    })\r\n    // this.form.controls.location.patchValue({\r\n    //   city: city,\r\n    // })\r\n    this.next(index)\r\n  }\r\n\r\n  async notFoundAddress(input: string) {\r\n    let loading = await this.loadingCtrl.create({\r\n      message: \"Carregando\"\r\n    })\r\n    loading.present()\r\n    Log.add<Log>({\r\n      origin: LogOriginTypes.ADDRESS_NOT_FOUND,\r\n      description: `Brasil`,\r\n      user: this.shared.user ? this.shared.user : null\r\n    }).subscribe(async () => {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Obrigado\",\r\n        message: \"A nossa equipe foi informada que sua cidade não foi encontrada. Por favor volte mais tarde.\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      loading.dismiss()\r\n      alert.present()\r\n    }, () => {\r\n      loading.dismiss()\r\n      this.system.showErrorAlert(Error(\"Falha de comunicação\"))\r\n    })\r\n  }\r\n  /**\r\n   * Buscar cidade\r\n   */\r\n  searchCity(): void {\r\n    this.search_index++;\r\n    let index: number = this.search_index;\r\n    this.search_loading = true\r\n    this.city_not_found = false\r\n    this.search_city_error = false\r\n\r\n    const input: string = this.search_city && this.search_city.length > 2 ?\r\n      `Brasil, ${this.form.value.location.state}, ${this.search_city}` :\r\n      undefined;\r\n\r\n    this.getResults(input, \"(cities)\")\r\n      .pipe(map((results) => {\r\n        return results.map((result) => {\r\n          let city: string\r\n          for (let address_component of result.address_components) {\r\n            if (address_component.types.indexOf(\"administrative_area_level_2\") >= 0) {\r\n              city = address_component.long_name\r\n              break;\r\n            }\r\n          }\r\n          if (!city) return undefined\r\n          return {\r\n            name: city,\r\n            latitude: result.geometry.location.lat(),\r\n            longitude: result.geometry.location.lng()\r\n          }\r\n        }).filter((result) => result)\r\n      }))\r\n      .subscribe((r) => {\r\n        if ((!r || r.length <= 0) && (this.search_city && this.search_city.length > 2)) {\r\n          this.city_not_found = true\r\n        }\r\n        if (index > this.search_received_index) {\r\n          this.city_suggestions = r;\r\n          this.search_received_index = index\r\n        }\r\n        this.search_loading = false\r\n        this.change.detectChanges()\r\n      }, () => {\r\n        this.city_suggestions = []\r\n        this.search_loading = false\r\n        this.search_city_error = true\r\n      })\r\n  }\r\n\r\n  selectCity(city: {\r\n    name: string,\r\n    latitude: number,\r\n    longitude: number\r\n  }) {\r\n    this.form.controls.location.patchValue({\r\n      city: city.name,\r\n      latitude: city.latitude,\r\n      longitude: city.longitude\r\n    })\r\n    this.next()\r\n  }\r\n\r\n  public async notFoundCity() {\r\n    let loading = await this.loadingCtrl.create({\r\n      message: \"Carregando\"\r\n    })\r\n    loading.present()\r\n    Log.add<Log>({\r\n      origin: LogOriginTypes.CITY_NOT_FOUND,\r\n      description: `Brasil, ${this.form.value.location.state}, ${this.search_city}`,\r\n      user: this.shared.user ? this.shared.user : null\r\n    }).subscribe(async () => {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Obrigado\",\r\n        message: \"A nossa equipe foi informada que sua cidade não foi encontrada. Por favor volte mais tarde.\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      loading.dismiss()\r\n      alert.present()\r\n    }, () => {\r\n      loading.dismiss()\r\n      this.system.showErrorAlert(Error(\"Falha de comunicação\"))\r\n    })\r\n  }\r\n\r\n  searchDistrict() {\r\n    if (this.form.value.location.city === \"Morada Nova\") {\r\n      this.district_suggestions = CUSTOM_DISTRICTS.MORADA_NOVA\r\n        .map((district) => { return { name: district } })\r\n        .filter((district) => {\r\n          return district.name.indexOf(this.search_district) >= 0;\r\n        });\r\n      this.change.detectChanges()\r\n      return;\r\n    }\r\n    this.search_index++;\r\n    let index: number = this.search_index;\r\n    this.search_loading = true\r\n    this.district_not_found = false\r\n    this.search_district_error = false\r\n\r\n    const input: string = this.search_district && this.search_district.length > 2 ?\r\n      `Brasil, ${this.form.value.location.state}, ${this.form.value.location.city}, ${this.search_district}` :\r\n      undefined;\r\n    this.getResults(input, \"(regions)\")\r\n      .pipe(map((results) => {\r\n        return results.map((result) => {\r\n          let district: string\r\n          for (let address_component of result.address_components) {\r\n            if (address_component.types.indexOf(\"sublocality\") >= 0) {\r\n              district = address_component.long_name\r\n              break;\r\n            }\r\n          }\r\n          if (!district) return undefined\r\n          return {\r\n            name: district,\r\n            latitude: result.geometry.location.lat(),\r\n            longitude: result.geometry.location.lng()\r\n          }\r\n        }).filter((result) => result)\r\n      }))\r\n      .subscribe((r) => {\r\n        if ((!r || r.length <= 0) && (this.search_district && this.search_district.length > 2)) {\r\n          this.district_not_found = true\r\n        }\r\n        if (index > this.search_received_index) {\r\n          this.district_suggestions = r;\r\n          this.search_received_index = index\r\n        }\r\n        this.search_loading = false\r\n        this.change.detectChanges()\r\n      }, () => {\r\n        this.district_suggestions = []\r\n        this.search_loading = false\r\n        this.search_district_error = true\r\n      })\r\n  }\r\n\r\n  selectDistrict(district: {\r\n    name: string,\r\n    latitude: number,\r\n    longitude: number\r\n  }) {\r\n    if (district.latitude && district.longitude) {\r\n      this.form.controls.location.patchValue({\r\n        district: district.name,\r\n        latitude: district.latitude,\r\n        longitude: district.longitude\r\n      })\r\n    } else {\r\n      this.form.controls.location.patchValue({\r\n        district: district.name,\r\n      })\r\n    }\r\n    this.next()\r\n  }\r\n\r\n  async nextSecondSlide() {\r\n    const confirm = await this.alertCtrl.create({\r\n      header: 'Atenção!',\r\n      message: 'Você não preencheu seu CEP! Tem certeza que deseja avançar mesmo assim?',\r\n      buttons: [\r\n        {\r\n          text: 'Não'\r\n        },\r\n        {\r\n          text: 'Sim',\r\n          handler: () => {\r\n            this.next();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n  }\r\n\r\n  async notFoundDistrict() {\r\n    let loading = await this.loadingCtrl.create({\r\n      message: \"Carregando\"\r\n    })\r\n    loading.present()\r\n    Log.add<Log>({\r\n      origin: LogOriginTypes.DISTRICT_NOT_FOUND,\r\n      description: `Brasil, ${this.form.value.location.state}, ${this.form.value.location.city}, ${this.search_district}`,\r\n      user: this.shared.user ? this.shared.user : null\r\n    }).subscribe(async () => {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Obrigado\",\r\n        message: \"A nossa equipe foi informada que seu bairro não foi encontrado. Por favor volte mais tarde.\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      loading.dismiss()\r\n      alert.present()\r\n    }, () => {\r\n      loading.dismiss()\r\n      this.system.showErrorAlert(Error(\"Falha de comunicação\"))\r\n    })\r\n  }\r\n  searchStreet(event) {\r\n    this.search_index++;\r\n    let index: number = this.search_index;\r\n    this.search_loading = true\r\n    this.street_not_found = false\r\n    this.search_street_error = false\r\n\r\n    const input: string = this.search_street && this.search_street.length > 2 ?\r\n      `Brasil, ${this.form.value.location.state}, ${this.form.value.location.city}, ${this.form.value.location.district}, ${this.search_street}` :\r\n      undefined;\r\n\r\n    this.getResults(input, \"address\")\r\n      .pipe(map((results) => {\r\n        return results.map((result) => {\r\n          let street: string\r\n          for (let address_component of result.address_components) {\r\n            if (address_component.types.indexOf(\"route\") >= 0 || address_component.types.indexOf(\"street_address\") >= 0) {\r\n              street = address_component.long_name\r\n              break;\r\n            }\r\n          }\r\n          if (!street) return undefined\r\n          return {\r\n            name: street,\r\n            latitude: result.geometry.location.lat(),\r\n            longitude: result.geometry.location.lng()\r\n          }\r\n        }).filter((result) => result)\r\n      }))\r\n      .subscribe((r) => {\r\n        if ((!r || r.length <= 0) && (this.search_street && this.search_street.length > 2)) {\r\n          this.street_not_found = true\r\n        }\r\n        if (index > this.search_received_index) {\r\n          this.street_suggestions = r;\r\n          this.search_received_index = index\r\n        }\r\n        this.search_loading = false\r\n        this.change.detectChanges()\r\n      }, () => {\r\n        this.street_suggestions = []\r\n        this.search_loading = false\r\n        this.search_street_error = true\r\n      })\r\n  }\r\n\r\n  selectStreet(street: {\r\n    name: string,\r\n    latitude?: number,\r\n    longitude?: number\r\n  }) {\r\n    if (street.latitude && street.longitude) {\r\n      this.form.controls.location.patchValue({\r\n        street: street.name,\r\n        latitude: street.latitude,\r\n        longitude: street.longitude\r\n      })\r\n      this.system.logEvent(\"street_found\")\r\n    } else {\r\n      this.system.logEvent(\"street_not_found\")\r\n      this.form.controls.location.patchValue({\r\n        street: street.name\r\n      })\r\n    }\r\n    this.goToLastSlide();\r\n  }\r\n\r\n\r\n  /**\r\n   * tipos da variavel type\r\n   * geocode:\r\n   *  instrui o serviço Place Autocomplete a retornar apenas resultados de geocodificação em vez de resultados de empresas. \r\n   * Geralmente, essa solicitação é usada para a desambiguação de resultados em que a localização especificada pode ser indeterminada.\r\n   * address:\r\n   * Instrui o serviço Place Autocomplete a retornar apenas resultados de geocodificação com um endereço preciso. Geralmente, essa solicitação é usada quando se sabe que o usuário procurará um endereço totalmente especificado.\r\n   * establishment:\r\n   * Instrui o serviço Place Autocomplete a retornar apenas resultados de empresas.\r\n   * (regions):\r\n   * A coleção de tipos (regions) instrui o serviço Places a retornar qualquer resultado que corresponda aos seguintes tipos:\r\n   * locality\r\n   * sublocality\r\n   * postal_code\r\n   * country\r\n   * administrative_area_level_1\r\n   * administrative_area_level_2\r\n   * (cities):\r\n   * A coleção de tipos (cities) instrui o serviço Places a retornar resultados que correspondam a locality ou administrative_area_level_3.\r\n   */\r\n\r\n  getResults(input: string, type?: \"geocode\" | \"address\" | \"establishment\" | \"(regions)\" | \"(cities)\"): Observable<google.maps.places.PlaceResult[]> {\r\n    return Observable.create((observer) => {\r\n      if (!input || input.length < 3) {\r\n        observer.next([])\r\n        observer.complete()\r\n        return;\r\n      }\r\n      // new google.maps.places.PlacesService(this.suggestionCities.nativeElement).textSearch({\r\n      //   query: input,\r\n      //   type: \"(cities)\"\r\n      // }, (results, status, pagination) => {\r\n      //   console.log(\"Resultados\", results)\r\n      // })\r\n      this.autocompleteService.getPlacePredictions({\r\n        input: input,\r\n        types: (type ? [type] : undefined)\r\n      }, (result: google.maps.places.AutocompletePrediction[], status: google.maps.places.PlacesServiceStatus) => {\r\n        if (this.errorPlacesStatus(status)) {\r\n          observer.error(status)\r\n          return\r\n        }\r\n        observer.next(result || []);\r\n        observer.complete()\r\n      })\r\n    }).pipe(switchMap((r: google.maps.places.AutocompletePrediction[]) => {\r\n      if (!r || r.length <= 0) return of([])\r\n\r\n\r\n      return combineLatest(\r\n        r.map((e: google.maps.places.AutocompletePrediction) => {\r\n          return Observable.create((observer) => {\r\n            this.placesService.getDetails({\r\n              placeId: e.place_id\r\n            }, (result, status) => {\r\n              if (this.errorPlacesStatus(status)) {\r\n                observer.error(status)\r\n                return\r\n              }\r\n              observer.next(result)\r\n              observer.complete()\r\n            })\r\n          })\r\n        })\r\n      )\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Verifica se o status retornado pelo google maps é de erro ou não\r\n   * @param status Status\r\n   * @returns true se existe erro. e falso se não existe erros\r\n   */\r\n  errorPlacesStatus(status: google.maps.places.PlacesServiceStatus): boolean {\r\n    switch (status) {\r\n      case google.maps.places.PlacesServiceStatus.OK: //\tThe response contains a valid result.\r\n      case google.maps.places.PlacesServiceStatus.ZERO_RESULTS: //\tNo result was found for this request.\r\n        // Tudo certo na requisição\r\n        return false;\r\n      case google.maps.places.PlacesServiceStatus.INVALID_REQUEST://\tThis request was invalid.\r\n      // case google.maps.places.PlacesServiceStatus.NOT_FOUND://\tThe place referenced was not found.\r\n      case google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT: //\tThe application has gone over its request quota.\r\n      case google.maps.places.PlacesServiceStatus.REQUEST_DENIED: //\tThe application is not allowed to use the PlacesService.\r\n      case google.maps.places.PlacesServiceStatus.UNKNOWN_ERROR: //\tThe PlacesService request could not be processed due to a server error.The request may succeed if you try again.\r\n      default:\r\n        return true\r\n    }\r\n  }\r\n\r\n  next(index?: number) {\r\n    this.search_city = this.search_district = this.search_street = \"\"\r\n    this.street_suggestions = this.city_suggestions = this.district_suggestions = []\r\n    this.search_street_error = this.search_district_error = this.search_city_error = false\r\n    this.city_not_found = this.street_not_found = this.district_not_found = false\r\n\r\n\r\n\r\n    if (index !== undefined) {\r\n      this.activeIndex = index\r\n      this.nextFromCep = true\r\n    } else {\r\n      this.activeIndex = this.activeIndex + 1\r\n      this.nextFromCep = false\r\n    }\r\n\r\n    if (this.activeIndex === 3) {\r\n      if (this.form.value.location.city === \"Morada Nova\") {\r\n        this.district_suggestions = CUSTOM_DISTRICTS.MORADA_NOVA.map((district) => { return { name: district } });\r\n\r\n        this.change.detectChanges()\r\n      }\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    this.search_city = this.search_district = this.search_street = \"\"\r\n    this.street_suggestions = this.city_suggestions = this.district_suggestions = []\r\n    this.search_street_error = this.search_district_error = this.search_city_error = false\r\n    this.city_not_found = this.street_not_found = this.district_not_found = false\r\n\r\n    if (this.nextFromCep) {\r\n      this.activeIndex = 0\r\n    } else {\r\n      this.activeIndex = this.activeIndex - 1\r\n    }\r\n  }\r\n\r\n  async help() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Ajuda',\r\n      message: 'Preencha os campos com seu endereço. Caso não encontre seu estado, cidade ou bairro nos formulários por favor entre em contato com o suporte.',\r\n      buttons: [{ role: 'cancel', text: 'ok' }]\r\n    })\r\n    alert.present()\r\n  }\r\n\r\n  /**\r\n   * Salvar alterações e redirecionar para página anterior\r\n   */\r\n  async register() {\r\n    let locationObject: Location = {};\r\n    locationObject = this.form.value.location;\r\n    locationObject.isGps = false;\r\n\r\n    if (!locationObject.street) {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Endereço inválido\",\r\n        message: \"É obrigatório preencher a rua\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      alert.present()\r\n      return;\r\n    }\r\n\r\n    if (!locationObject.number) {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Endereço inválido\",\r\n        message: \"É obrigatório preencher o número\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      alert.present()\r\n      return;\r\n    }\r\n\r\n    if (!locationObject.landmark) {\r\n      let alert = await this.alertCtrl.create({\r\n        header: \"Endereço inválido\",\r\n        message: \"É obrigatório preencher o ponto de referência\",\r\n        buttons: [\"Ok\"]\r\n      })\r\n      alert.present()\r\n      return;\r\n    }\r\n    this.system.logEvent(\"register_location\")\r\n    if (!this.shared.user) {\r\n      this.shared.locationUser = locationObject;\r\n      this.modalCtrl.dismiss()\r\n      return;\r\n    }\r\n    let loading = await this.loadingCtrl.create({});\r\n    loading.present();\r\n    if (this.new_address) {\r\n      this.placesProvider.saveLocationHistory(locationObject).subscribe(() => {\r\n        loading.dismiss();\r\n        this.modalCtrl.dismiss();\r\n      }, error => {\r\n        loading.dismiss();\r\n        this.system.showErrorAlert(error);\r\n      });\r\n    } else {\r\n      this.placesProvider.editCurrentLocation(locationObject).subscribe(() => {\r\n        loading.dismiss();\r\n        this.modalCtrl.dismiss();\r\n      }, error => {\r\n        loading.dismiss();\r\n        this.system.showErrorAlert(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  async dismiss() {\r\n    if (this.new_address) {\r\n      if (this.activeIndex === 0) {\r\n        this.modalCtrl.dismiss();\r\n      } else {\r\n        this.prev()\r\n      }\r\n    } else {\r\n      this.modalCtrl.dismiss();\r\n    }\r\n  }\r\n\r\n  get isBeginning() {\r\n    return this.activeIndex === 0\r\n  }\r\n\r\n  get isEnd() {\r\n    return this.activeIndex === 5\r\n  }\r\n}\r\n\r\nexport const CUSTOM_DISTRICTS: { [key: string]: string[] } = {\r\n  MORADA_NOVA: [\r\n    \"2 de Agosto\",\r\n    \"Alto Tiradentes\",\r\n    \"Açude Velho\",\r\n    \"Centro\",\r\n    \"Dnocs\",\r\n    \"Fátima\",\r\n    \"Girilândia\",\r\n    \"Gran Ville\",\r\n    \"Mutirão\",\r\n    \"Nova Morada\",\r\n    \"Parque de Exposição\",\r\n    \"Populares\",\r\n    \"Prourb\",\r\n    \"São José\",\r\n    \"São Francisco\",\r\n    \"Setor K\",\r\n    \"Vazantes\",\r\n    \"Várzea\",\r\n  ]\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PipesModule } from '../../../pipes/pipes.module';\r\nimport { CustomerAddressPage } from './customer-address.page';\r\nimport { MobileComponentsModule } from '../../components/mobile-components.module';\r\nimport { AddressEditPageModule } from '../address-edit/address-edit.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //Custom Modules\r\n    ReactiveFormsModule,\r\n    MobileComponentsModule,\r\n    PipesModule,\r\n\r\n    //Default Modules\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddressEditPageModule,\r\n  ],\r\n  entryComponents: [CustomerAddressPage],\r\n  declarations: [CustomerAddressPage],\r\n})\r\nexport class CustomerAddressPageModule { }","module.exports = \"<ion-header no-border class=\\\"app\\\">\\r\\n  <ion-toolbar class=\\\"header-toolbar\\\" color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"dismiss()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"ios-arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      <h3 ion-text text-uppercase color=\\\"light\\\" class=\\\"my-font-logo\\\">ENDEREÇO</h3>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-card class=\\\"card-delivery-address\\\" *ngIf=\\\"location; else noLocation\\\" (click)=\\\"editAddress()\\\" tappable>\\r\\n    <ion-icon name=\\\"pin\\\"></ion-icon>\\r\\n    <div class=\\\"info-delivery\\\">\\r\\n      <p class=\\\"title-delivery\\\" text-wrap>\\r\\n        <strong>{{ location.street}}, {{ location.number}}\\r\\n          <span *ngIf=\\\"location.complement\\\">\\r\\n            <br />{{ location.complement}} </span>\\r\\n          <span *ngIf=\\\"location.landmark\\\">\\r\\n            <br />{{ location.landmark}} </span>\\r\\n        </strong>\\r\\n      </p>\\r\\n      <p class=\\\"subtitle-delivery\\\">{{ location.district }} - {{ location.city }} </p>\\r\\n    </div>\\r\\n  </ion-card>\\r\\n  <ng-template #noLocation>\\r\\n    <p margin-horizontal class=\\\"no-address-register\\\" text-center ion-text color=\\\"discret\\\">Você ainda não possui nenhum\\r\\n      endereço cadastrado</p>\\r\\n  </ng-template>\\r\\n\\r\\n  <ion-button fill=\\\"clear\\\" expand=\\\"block\\\" margin-top margin-bottom (click)=\\\"newAddress()\\\">\\r\\n    <ion-label> Adicionar novo endereço </ion-label>\\r\\n  </ion-button>\\r\\n\\r\\n  <ion-item class=\\\"divider\\\">\\r\\n    <p class=\\\"title\\\"> Histórico </p>\\r\\n  </ion-item>\\r\\n  <div *ngIf=\\\"shared?.user?.locations_history?.length > 0; else noLocationHistory\\\" margin-top>\\r\\n    <ion-card *ngFor=\\\"let location of shared.user.locations_history\\\" class=\\\"card-delivery-address historic\\\" tappable>\\r\\n      <ion-icon name=\\\"pin\\\" slot=\\\"start\\\" (click)=\\\"changeLocation(location)\\\"></ion-icon>\\r\\n      <div class=\\\"info-delivery\\\" (click)=\\\"changeLocation(location)\\\">\\r\\n        <p class=\\\"title-delivery\\\" text-wrap>\\r\\n          <strong>{{ location.street}}, {{ location.number}}\\r\\n            <span *ngIf=\\\"location.complement\\\">\\r\\n              <br />{{ location.complement}} </span>\\r\\n          </strong>\\r\\n        </p>\\r\\n        <p class=\\\"subtitle-delivery\\\">{{ location.district }} - {{ location.city }} </p>\\r\\n      </div>\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"removeLocationHistory(location)\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"ios-close\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noLocationHistory>\\r\\n    <p margin-horizontal class=\\\"no-address-register\\\" text-center ion-text color=\\\"discret\\\">Você ainda não possui\\r\\n      histórico de endereços.</p>\\r\\n  </ng-template>\\r\\n\\r\\n</ion-content>\"","module.exports = \".item-inner {\\n  border: 0 !important; }\\n\\nion-card.card-delivery-address {\\n  width: 100% !important;\\n  margin-left: 0 !important;\\n  background: white !important;\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 0px 10px 0px; }\\n\\nion-card.card-delivery-address p {\\n    -webkit-margin-after: 0.5em !important;\\n            margin-block-end: 0.5em !important; }\\n\\nion-card.card-delivery-address .info-delivery {\\n    padding: 8px 15px; }\\n\\nion-card.card-delivery-address .info-delivery .title-delivery {\\n      color: var(--ion-color-medium-shade);\\n      font-size: 1.2em; }\\n\\nion-card.card-delivery-address .info-delivery .subtitle-delivery {\\n      color: var(--ion-color-medium-shade); }\\n\\nion-card.card-delivery-address ion-icon {\\n    color: var(--ion-color-primary);\\n    padding: 10px;\\n    margin-left: 10px;\\n    font-size: 2.5em; }\\n\\n.divider {\\n  --background: var(--ion-color-primary); }\\n\\n.divider .title {\\n    color: #fff;\\n    font-size: 1.3em;\\n    margin: 0; }\\n\\n.historic .item {\\n  padding: 0 !important; }\\n\\n.historic ion-icon {\\n  padding: 0px 20px; }\\n\\n.historic ion-label {\\n  display: flex;\\n  align-items: center;\\n  margin: 0px; }\\n\\n.historic ion-label ion-icon {\\n    padding: 10px !important; }\\n\\n.historic .info-delivery .title-delivery {\\n  font-size: 0.7em; }\\n\\n.historic .info-delivery .subtitle-delivery {\\n  font-size: 0.6em;\\n  color: var(--ion-color-medium-shade); }\\n\"","import { Observable, of, from, combineLatest } from 'rxjs';\r\nimport { map, tap, flatMap, first, catchError } from 'rxjs/operators';\r\nimport { Location } from '../../../../models/utils/location';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../../../services/cart.service';\r\nimport { SystemService } from '../../../services/system.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { SharedService } from '../../../services/shared.service';\r\nimport { PlacesService } from '../../../services/places.service';\r\nimport { getDistanceBetweenPoints } from '../../../util/util';\r\nimport { User } from '../../../../models/user';\r\nimport { AddressEditPage } from '../address-edit/address-edit.page';\r\n\r\n@Component({\r\n  selector: 'app-customer-address',\r\n  templateUrl: './customer-address.page.html',\r\n  styleUrls: ['./customer-address.page.scss'],\r\n})\r\nexport class CustomerAddressPage implements OnInit {\r\n\r\n  get location(): Location {\r\n    return this.shared.user ? this.shared.user.location : this.shared.locationUser;\r\n  }\r\n\r\n  constructor(\r\n    public shared: SharedService,\r\n    public modalCtrl: ModalController,\r\n    public alertCtrl: AlertController,\r\n    public loadingCtrl: LoadingController,\r\n    public navCtrl: NavController,\r\n    public system: SystemService,\r\n    public cart: CartService,\r\n    public placesProvider: PlacesService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.system.setScreenName(\"CustomerAddressPage\")\r\n  }\r\n\r\n  dismiss() {\r\n    this.modalCtrl.dismiss()\r\n  }\r\n\r\n  async getCurrentLocation() {\r\n    let loading = await this.loadingCtrl.create({});\r\n    loading.present();\r\n    this.placesProvider.getCurrentLocation().pipe(first())\r\n      .pipe(flatMap((location: Location) => {\r\n        return this.placesProvider.saveLocationHistory(location)\r\n      })).subscribe(() => {\r\n        loading.dismiss();\r\n      }, error => {\r\n        this.system.showErrorAlert(error);\r\n        loading.dismiss();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Tenta mudar a localização do usuário atual.\r\n   * Caso ele possua um carrinho e a localização nova não for atendida pela filial do carrinho, avisar o usuário.\r\n   * @param location Nova localização\r\n   */\r\n  async changeLocation(location: Location) {\r\n\r\n    /**\r\n     * Verifica se o novo endereço é atendido pela filial do carrinho atual.\r\n     */\r\n    if (this.cart.filial) {\r\n      /**\r\n       * Se a filial atender por bairros, fazer a verificação por bairros\r\n       */\r\n      if (this.cart.filial.deliveryByDistrict) {\r\n        let hasUserDistrict: boolean = false;\r\n\r\n        this.cart.filial.deliveryDistricts.forEach(deliveryDistrict => {\r\n          if (deliveryDistrict.location.state == location.state &&\r\n            deliveryDistrict.location.city == location.city &&\r\n            deliveryDistrict.location.district == location.district) {\r\n            hasUserDistrict = true;\r\n            return;\r\n          }\r\n        });\r\n\r\n        if (!hasUserDistrict) {\r\n          this.alertDoesNotDelivery(this.cart.filial.name)\r\n          return\r\n        }\r\n        /**\r\n         * Se ela não atender por bairros, ela atende por km. Verificar a distancia e se a filial atende pro km\r\n         */\r\n      } else {\r\n        const start = {\r\n          lat: location.latitude,\r\n          lng: location.longitude\r\n        }\r\n        const end = {\r\n          lat: this.cart.filial.location.latitude,\r\n          lng: this.cart.filial.location.longitude\r\n        }\r\n        const distance = getDistanceBetweenPoints(start, end);\r\n\r\n        if (distance > this.cart.filial.delivery.distanceMax) {\r\n          this.alertDoesNotDelivery(this.cart.filial.name)\r\n          return\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    this.alertConfirmChangeLocation(location)\r\n  }\r\n\r\n  /**\r\n   * Foi verificado e não existiu nenhum impeditivo para o usuário mudar para a nova localização\r\n   * Alerta apenas para confirmar se é isso que o usuário realmente quer.\r\n   * @param location Nova localização\r\n   */\r\n  async alertConfirmChangeLocation(location: Location) {\r\n    (await this.alertCtrl.create({\r\n      header: 'Alterar destino',\r\n      subHeader: `Você deseja alterar sua localização atual para ${location.street}`,\r\n      buttons: [{\r\n        text: 'Cancelar',\r\n        role: 'cancel'\r\n      },\r\n      {\r\n        text: 'Confirmar',\r\n        handler: () => {\r\n          this.placesProvider.changeLocationCurrent(location).subscribe(() => {\r\n            this.dismiss()\r\n          }, err => this.system.showErrorAlert(err))\r\n        }\r\n      }]\r\n    })).present()\r\n\r\n  }\r\n\r\n  /**\r\n   * Exibe um alerta informando o usuário que esse novo endereço não recebe delivery do carrinho atual.\r\n   * @param name Nome da filial\r\n   */\r\n  async alertDoesNotDelivery(name: string) {\r\n    (await this.alertCtrl.create({\r\n      header: 'Ops!',\r\n      subHeader: `${name} não faz entrega para esta região`,\r\n      buttons: ['OK']\r\n    })).present()\r\n  }\r\n\r\n  async removeLocationHistory(location: Location) {\r\n\r\n    let alert = await this.alertCtrl.create({\r\n      header: `Você deseja excluir ${location.street} do seu histórico ?`,\r\n      buttons: [{\r\n        text: 'Cancelar',\r\n        role: 'cancel'\r\n      },\r\n      {\r\n        text: 'Confirmar',\r\n        handler: async () => {\r\n          let loading = await this.loadingCtrl.create({\r\n          })\r\n          loading.present()\r\n\r\n          let index = this.shared.user.locations_history.indexOf(location)\r\n          if (index > -1) {\r\n            this.shared.user.locations_history.splice(index, 1)\r\n          }\r\n          User.update(this.shared.user.id, {\r\n            locations_history: this.shared.user.locations_history\r\n          }).subscribe(() => {\r\n            loading.dismiss()\r\n          }, err => console.error(err))\r\n        }\r\n      }]\r\n    })\r\n    alert.present()\r\n  }\r\n\r\n  async newAddress() {\r\n    console.log(\"Clique newAddress()\");\r\n    let modal = await this.modalCtrl.create({\r\n      component: AddressEditPage\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  async editAddress() {\r\n    let modal = await this.modalCtrl.create({\r\n      component: AddressEditPage,\r\n      componentProps: {\r\n        location: this.location\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n}"],"sourceRoot":""}