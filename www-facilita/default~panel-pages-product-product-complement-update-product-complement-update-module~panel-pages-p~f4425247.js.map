{"version":3,"sources":["webpack:///./src/app/panel/pages/product/add-options-complement/add-options-complement.module.ts","webpack:///./src/app/panel/pages/product/add-options-complement/add-options-complement.page.html","webpack:///./src/app/panel/pages/product/add-options-complement/add-options-complement.page.scss","webpack:///./src/app/panel/pages/product/add-options-complement/add-options-complement.page.ts","webpack:///./src/app/panel/pages/product/product-complement-update/product-complement-update.module.ts","webpack:///./src/app/panel/pages/product/product-complement-update/product-complement-update.page.html","webpack:///./src/app/panel/pages/product/product-complement-update/product-complement-update.page.scss","webpack:///./src/app/panel/pages/product/product-complement-update/product-complement-update.page.ts"],"names":[],"mappings":"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","file":"default~panel-pages-product-product-complement-update-product-complement-update-module~panel-pages-p~f4425247.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddOptionsComplementPage } from './add-options-complement.page';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    PipesModule,\r\n    GlobalComponentsModule\r\n  ],\r\n  declarations: [AddOptionsComplementPage],\r\n  entryComponents: [AddOptionsComplementPage]\r\n})\r\nexport class AddOptionsComplementPageModule { }\r\n","module.exports = \"<ion-content padding class=\\\"hideScrollbar\\\">\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome</ion-label>\\r\\n      <ion-input formControlName=\\\"name\\\" #input></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Descrição</ion-label>\\r\\n      <ion-input formControlName=\\\"description\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Preço </ion-label>\\r\\n      <money-input item-content [control]=\\\"form.controls['price']\\\"></money-input>\\r\\n    </ion-item>\\r\\n    <div>\\r\\n      <ion-button fill=\\\"clear\\\" color=\\\"medium\\\" (click)=\\\"cancel()\\\">\\r\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\r\\n        Cancelar\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"proceed\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"saveOption()\\\">\\r\\n        <ion-icon name=\\\"md-checkmark\\\"></ion-icon>\\r\\n        Salvar\\r\\n      </ion-button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"form {\\n  width: 300px; }\\n\\nion-content {\\n  width: 300px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef, Renderer, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ComplementOption } from '../../../../../models/product';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-add-options-complement',\r\n  templateUrl: './add-options-complement.page.html',\r\n  styleUrls: ['./add-options-complement.page.scss'],\r\n})\r\nexport class AddOptionsComplementPage implements OnInit {\r\n\r\n  @ViewChild('input') input;\r\n  form: FormGroup\r\n\r\n  @Input()\r\n  option: ComplementOption\r\n  constructor(private elementRef: ElementRef,\r\n    private renderer: Renderer,\r\n    private popoverCtrl: PopoverController) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      description: new FormControl(''),\r\n      price: new FormControl('0', Validators.required),\r\n      active: new FormControl(true),\r\n    })\r\n    if (this.option) {\r\n      this.form.patchValue(this.option)\r\n    }\r\n    this.setFocus()\r\n  }\r\n\r\n  setFocus() {\r\n    setTimeout(() => {\r\n      this.input.setFocus();\r\n    }, 500);\r\n  }\r\n\r\n  setFocus2() {\r\n    setTimeout(() => {\r\n      let element = this.elementRef.nativeElement.querySelector('input');\r\n      this.renderer.invokeElementMethod(element, 'focus', []);\r\n    }, 500);\r\n  }\r\n\r\n  saveOption() {\r\n    this.popoverCtrl.dismiss(this.form.value)\r\n  }\r\n\r\n  cancel() {\r\n    this.popoverCtrl.dismiss()\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProductComplementUpdatePage } from './product-complement-update.page';\r\nimport { AddOptionsComplementPageModule } from '../add-options-complement/add-options-complement.module';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    PipesModule,\r\n    AddOptionsComplementPageModule\r\n  ],\r\n  declarations: [ProductComplementUpdatePage],\r\n  entryComponents: [ProductComplementUpdatePage]\r\n})\r\nexport class ProductComplementUpdatePageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <h1 ion-text text-center class=\\\"menus-icon-pizza\\\">\\r\\n      Cadastrar/Editar complemento\\r\\n    </h1>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"form\\\" class=\\\"form-content\\\">\\r\\n    <ion-grid>\\r\\n      <!--Título-->\\r\\n      <ion-item>\\r\\n        <ion-label class=\\\"label\\\" position=\\\"stacked\\\" color=\\\"tertiary\\\">Título</ion-label>\\r\\n        <ion-input class=\\\"input\\\" formControlName=\\\"title\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <!--Tipo de complemento-->\\r\\n      <ion-label padding-horizontal id=\\\"label-choose\\\" position=\\\"stacked\\\" color=\\\"tertiary\\\">Tipo de escolha do usuário</ion-label>\\r\\n      <ion-radio-group formControlName=\\\"type\\\">\\r\\n        <ion-item>\\r\\n          <ion-label text-wrap>Só pode escolher uma opção</ion-label>\\r\\n          <ion-radio checked=\\\"true\\\" value=\\\"single\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label text-wrap>Pode escolher várias opções</ion-label>\\r\\n          <ion-radio value=\\\"multiple\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label text-wrap>Cada opção terá uma quantidade associada</ion-label>\\r\\n          <ion-radio value=\\\"quantity\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n      </ion-radio-group>\\r\\n\\r\\n      <div *ngIf=\\\"form.value.type != 'single'\\\">\\r\\n        <!--Mínimo-->\\r\\n        <ion-item>\\r\\n          <ion-label class=\\\"label\\\" position=\\\"stacked\\\" color=\\\"tertiary\\\">Mínimo (deixe em branco para não impor limite\\r\\n            mínimo)</ion-label>\\r\\n          <ion-input type=\\\"number\\\" class=\\\"input\\\" formControlName=\\\"min\\\" step=\\\"1\\\" min=\\\"0\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <!--Máximo-->\\r\\n        <ion-item>\\r\\n          <ion-label class=\\\"label\\\" position=\\\"stacked\\\" color=\\\"tertiary\\\">Máximo (deixe em branco para não impor limite\\r\\n            máximo)</ion-label>\\r\\n          <ion-input type=\\\"number\\\" class=\\\"input\\\" formControlName=\\\"max\\\" step=\\\"1\\\" min=\\\"0\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </div>\\r\\n\\r\\n      <ion-label id=\\\"label-choose\\\" position=\\\"stacked\\\" color=\\\"tertiary\\\" *ngIf=\\\"form.value.type == 'single'\\\">Obrigatoriedade\\r\\n        de escolha</ion-label>\\r\\n      <ion-row *ngIf=\\\"form.value.type == 'single'\\\">\\r\\n        <!-- Escolha obrigatória -->\\r\\n        <ion-item>\\r\\n          <ion-label>Usuário é obrigado a escolher uma opção</ion-label>\\r\\n          <ion-checkbox formControlName=\\\"required\\\"></ion-checkbox>\\r\\n        </ion-item>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-list class=\\\"options-list\\\">\\r\\n        <ion-list-header>\\r\\n          LISTA DE OPÇÕES\\r\\n        </ion-list-header>\\r\\n\\r\\n        <!-- Adicionar Opções do produto -->\\r\\n        <ion-button fill=\\\"clear\\\" color=\\\"tertiary\\\" (click)=\\\"addOption()\\\">\\r\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n          <h6>Adicionar opção</h6>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-item class=\\\"option-item\\\" *ngFor=\\\"let option of options; let i = index\\\" [hidden]=\\\"!option\\\">\\r\\n          <!--<ion-icon name=\\\"leaf\\\" item-start></ion-icon>-->\\r\\n          <h2 text-wraper>{{option?.name}}</h2>\\r\\n          <ion-button class=\\\"set-priority-category-button first-button\\\" icon-only fill=\\\"clear\\\" (click)=\\\"upOption(option, i)\\\"\\r\\n            color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"arrow-up\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <ion-button class=\\\"set-priority-category-button\\\" icon-only fill=\\\"clear\\\" (click)=\\\"downOption(option, i)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"arrow-down\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <p class=\\\"option-price\\\">{{(option?.price || 0) | currency:'BRL':'symbol' | formatCurrency}}</p>\\r\\n          <ion-toggle [checked]=\\\"option.active !== false\\\" (ionChange)=\\\"updateActiveOption(option)\\\"></ion-toggle>\\r\\n\\r\\n          <div slot=\\\"end\\\">\\r\\n            <ion-button color=\\\"proceed\\\" margin-right icon-only fill=\\\"clear\\\" (click)=\\\"editOption(option)\\\">\\r\\n              <ion-icon name=\\\"md-create\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button color=\\\"danger\\\" fill=\\\"clear\\\" icon-only (click)=\\\"removeOption(option)\\\">\\r\\n              <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n    <div class=\\\"mybuttons\\\" padding>\\r\\n      <ion-button fill=\\\"clear\\\" margin-vertical color=\\\"medium\\\" (click)=\\\"cancel()\\\">\\r\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\r\\n        Cancelar\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"proceed\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"save()\\\">\\r\\n        <ion-icon name=\\\"md-checkmark\\\"></ion-icon>\\r\\n        Salvar\\r\\n      </ion-button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"ion-grid {\\n  background: var(--background); }\\n\\n.mybuttons {\\n  background: var(--background); }\\n\"","import { Component, ChangeDetectorRef, OnInit, Input } from '@angular/core';\r\nimport { Complement, ComplementOption } from '../../../../../models/product';\r\nimport { isObjectEmpty } from '../../../../util/util';\r\nimport { PopoverController, NavParams, ModalController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AddOptionsComplementPage } from '../add-options-complement/add-options-complement.page';\r\nimport { OverlayEventDetail } from '@ionic/core';\r\n\r\n@Component({\r\n  selector: 'app-product-complement-update',\r\n  templateUrl: './product-complement-update.page.html',\r\n  styleUrls: ['./product-complement-update.page.scss'],\r\n})\r\nexport class ProductComplementUpdatePage implements OnInit {\r\n\r\n  /**\r\n   * Formulário\r\n   */\r\n  form: FormGroup;\r\n\r\n  /**\r\n   * Dados do complemento a ser editado\r\n   */\r\n  @Input()\r\n  complement: Complement;\r\n\r\n  /**\r\n   * Array com as opções do complemento.\r\n   */\r\n  options: ComplementOption[] = [];\r\n\r\n  complementAux: Complement;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public modalCtrl: ModalController,\r\n    public ref: ChangeDetectorRef,\r\n    private popoverCtrl: PopoverController) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // Criar o formulário.\r\n    this.form = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      required: [false, Validators.required],\r\n      min: [0],\r\n      max: [0]\r\n    });\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      this.ref.detectChanges()\r\n    })\r\n\r\n    if (this.complement) {\r\n      this.complementAux = JSON.parse(JSON.stringify(this.complement));\r\n    }\r\n    if (this.complement) {\r\n      this.options = []\r\n      if (this.complement.options) {\r\n        this.complement.options.forEach(op => {\r\n          this.options.push(op);\r\n        });\r\n      }\r\n      this.form.patchValue(this.complement);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Dispara evento se as teclas alt + n for pressionado\r\n   * @param event evento\r\n   */\r\n  hotkeys(event) {\r\n    if (event.keyCode == 79 && event.altKey) {\r\n      this.addOption();\r\n    } else if (event.keyCode == 83 && event.altKey) {\r\n      this.save();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adicionar uma nova opção ao complemento.\r\n   */\r\n  async addOption() {\r\n\r\n    const popover = await this.popoverCtrl.create({\r\n      component: AddOptionsComplementPage,\r\n      cssClass: \"editOptionsComplementPage\"\r\n    });\r\n\r\n    popover.onDidDismiss().then((ev: OverlayEventDetail) => {\r\n      console.log(\"Evento OnDidDismiss: \", ev);\r\n      if (ev && ev.data) {\r\n        this.options.push(ev.data)\r\n      }\r\n    })\r\n    popover.present()\r\n  }\r\n\r\n  /**\r\n   * Remover opção selecionada do array local\r\n   * @param option Opção selecionada\r\n   */\r\n  removeOption(option: ComplementOption) {\r\n    let index: number = this.options.indexOf(option);\r\n    this.options.splice(index, 1);\r\n  }\r\n\r\n  /**\r\n   * Editar opção selecionada do array local\r\n   * @param option Opção selecionada\r\n   */\r\n  async editOption(option: ComplementOption) {\r\n    let index: number = this.options.indexOf(option);\r\n    const popover = await this.popoverCtrl.create({\r\n      component: AddOptionsComplementPage,\r\n      componentProps: {\r\n        option: option\r\n      },\r\n      cssClass: \"editOptionsComplementPage\"\r\n    });\r\n    popover.onDidDismiss().then((ev: OverlayEventDetail) => {\r\n      if (ev && ev.data) {\r\n        this.options[index] = ev.data\r\n      }\r\n    })\r\n    popover.present()\r\n  }\r\n\r\n  /**\r\n   * Ativar ou desativar opção do complemento\r\n   */\r\n  updateActiveOption(option: ComplementOption) {\r\n    if (option.active === undefined) {\r\n      option.active = true;\r\n    }\r\n    option.active = !option.active;\r\n    // let index: number = this.options.indexOf(option)\r\n    // let active: boolean = option.active\r\n    // this.options[index].active = !active\r\n  }\r\n\r\n  /**\r\n   * Subir complemento uma posição\r\n   * @param complement complemento que se deseja subir\r\n   * @param index index do complemento que se deseja subir\r\n   */\r\n  upOption(option, index) {\r\n\r\n    if (!this.options[index - 1]) return;\r\n\r\n    let aux = this.options[index - 1];\r\n    this.options[index - 1] = this.options[index];\r\n    this.options[index] = aux;\r\n\r\n  }\r\n\r\n  /**\r\n   * Descer complemento uma posição\r\n   * @param complement complemento que se deseja descer\r\n   * @param index index do complemento que se deseja descer\r\n   */\r\n  downOption(option, index) {\r\n\r\n    if (!this.options[index + 1]) return;\r\n\r\n    let aux = this.options[index + 1];\r\n    this.options[index + 1] = this.options[index];\r\n    this.options[index] = aux;\r\n\r\n  }\r\n\r\n  /**\r\n   * Voltar sem enviar nada para página pai\r\n   */\r\n  cancel(): void {\r\n    if (!this.complement || isObjectEmpty(this.complement)) {\r\n      this.modalCtrl.dismiss();\r\n    }\r\n    else {\r\n      this.modalCtrl.dismiss({\r\n        new_complement: this.complementAux\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enviar para página pai as novas informações do complemento.\r\n   */\r\n  save(): void {\r\n\r\n    let complement: Complement = this.form.value;\r\n    complement.options = this.options;\r\n    complement.min = +complement.min;\r\n    complement.max = +complement.max;\r\n    // Remove os valores null do array\r\n    if (complement.options) {\r\n      complement.options.filter((value) => {\r\n        return value != null;\r\n      });\r\n    }\r\n    // Remove os valores null do array\r\n    if (complement.options) {\r\n      complement.options.filter((value) => {\r\n        return value != null;\r\n      })\r\n    }\r\n    this.modalCtrl.dismiss({\r\n      new_complement: complement\r\n    });\r\n  }\r\n\r\n}"],"sourceRoot":""}