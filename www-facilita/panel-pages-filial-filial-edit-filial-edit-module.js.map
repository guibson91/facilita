{"version":3,"sources":["webpack:///./src/app/panel/pages/filial/filial-edit/filial-edit.module.ts","webpack:///./src/app/panel/pages/filial/filial-edit/filial-edit.page.html","webpack:///./src/app/panel/pages/filial/filial-edit/filial-edit.page.scss","webpack:///./src/app/panel/pages/filial/filial-edit/filial-edit.page.ts","webpack:///./src/app/panel/pages/filial/filial-edit/select-interval-hours/select-interval-hours.page.html","webpack:///./src/app/panel/pages/filial/filial-edit/select-interval-hours/select-interval-hours.page.scss","webpack:///./src/app/panel/pages/filial/filial-edit/select-interval-hours/select-interval-hours.page.ts","webpack:///./src/app/util/global.ts"],"names":[],"mappings":"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","file":"panel-pages-filial-filial-edit-filial-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FilialEditPage } from './filial-edit.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { SelectIntervalHoursPage } from './select-interval-hours/select-interval-hours.page';\r\nimport { BrMaskerModule } from 'br-mask';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FilialEditPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    BrMaskerModule \r\n  ],\r\n  entryComponents: [\r\n    SelectIntervalHoursPage\r\n  ],\r\n  declarations: [\r\n    SelectIntervalHoursPage,\r\n    FilialEditPage\r\n  ]\r\n})\r\nexport class FilialEditPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Cadastro de Estabelecimento\\\" icon=\\\"menus-icon-shop\\\" [helpPage]=\\\"5\\\"></nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <form [formGroup]=\\\"form\\\" class=\\\"form-content\\\">\\r\\n        <ion-list>\\r\\n          <!-- Imagem da filial -->\\r\\n          <p ion-text color=\\\"tertiary\\\" padding-horizontal class=\\\"complete-address\\\">Foto da filial *</p>\\r\\n          <nano-uploadimage [form]=\\\"this.form\\\" [storagePath]=\\\"'filials'\\\"></nano-uploadimage>\\r\\n          <!-- Imagem de capa -->\\r\\n          <p ion-text color=\\\"tertiary\\\" padding-horizontal class=\\\"complete-address\\\">Imagem de capa *</p>\\r\\n          <nano-uploadimage [control]=\\\"this.form.controls['cover']\\\" [storagePath]=\\\"'filials_cover'\\\"></nano-uploadimage>\\r\\n\\r\\n          <!-- Nome -->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome *</ion-label>\\r\\n            <ion-input formControlName=\\\"name\\\" maxlength=\\\"50\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- Descrição -->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Descrição *</ion-label>\\r\\n            <ion-textarea rows=\\\"5\\\" formControlName=\\\"description\\\" maxlength=\\\"300\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- Taxa específica a ser cobrada pela empresa -->\\r\\n          <div formGroupName=\\\"fee\\\" *ngIf=\\\"isTEAM\\\">\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Taxa</ion-label>\\r\\n              <money-input item-content [control]=\\\"form.controls['fee'].controls['to_facilita']\\\"></money-input>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n\\r\\n          <!-- Telefones de contato-->\\r\\n          <ion-row padding-right class=\\\"phones\\\" padding-horizontal padding-top>\\r\\n            <ion-col ion-item no-lines col-12 col-sm-6 padding-horizontal>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Telefone1 *</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"phone1\\\" minlength=\\\"8\\\" maxlength=\\\"15\\\" name=\\\"phone1\\\" [brmasker]=\\\"{form: form.get('phone1'), phone: true}\\\"></ion-input>\\r\\n            </ion-col>\\r\\n            <ion-col ion-item no-lines col-12 col-sm-6 padding-horizontal>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\"> Telefone2 </ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"phone2\\\" minlength=\\\"8\\\" maxlength=\\\"15\\\" name=\\\"phone2\\\" [brmasker]=\\\"{form: form.get('phone2'), phone: true}\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <!-- Se tem delivery ou não-->\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label color=\\\"tertiary\\\">Tem delivery</ion-label>\\r\\n            <ion-toggle formControlName=\\\"have_delivery\\\" mode=\\\"ios\\\"></ion-toggle>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item padding-horizontal *ngIf=\\\"form?.value?.have_delivery\\\">\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Pedido mínimo</ion-label>\\r\\n            <money-input item-content [control]=\\\"form.controls['orderMin']\\\"></money-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <div formGroupName=\\\"delivery\\\" *ngIf=\\\"form?.value?.have_delivery\\\">\\r\\n\\r\\n            <div>\\r\\n              <h5 ion-text text-center margin padding-top>\\r\\n                <strong>TAXA DE ENTREGA\\r\\n                  <span *ngIf=\\\"!form.value.deliveryByDistrict\\\">POR KM</span>\\r\\n                  <span *ngIf=\\\"form.value.deliveryByDistrict\\\">POR BAIRRO</span>\\r\\n                </strong>\\r\\n                <ion-button icon-only fill=\\\"clear\\\" (click)=\\\"changeDelivery()\\\">\\r\\n                  <ion-icon name=\\\"git-compare\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n              </h5>\\r\\n\\r\\n              <div *ngIf=\\\"!form.value.deliveryByDistrict\\\">\\r\\n                <ion-item padding-horizontal>\\r\\n                  <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Distância máxima (Km)</ion-label>\\r\\n                  <ion-input type=\\\"number\\\" formControlName=\\\"distanceMax\\\"></ion-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item padding-horizontal>\\r\\n                  <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Valor por cada km (R$)</ion-label>\\r\\n                  <money-input item-content [control]=\\\"form.controls['delivery'].controls['fee']\\\"></money-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item padding-horizontal>\\r\\n                  <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Menor valor (R$)</ion-label>\\r\\n                  <money-input item-content [control]=\\\"form.controls['delivery'].controls['feeMin']\\\"></money-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item padding-horizontal>\\r\\n                  <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Maior valor (R$)</ion-label>\\r\\n                  <money-input item-content [control]=\\\"form.controls['delivery'].controls['feeMax']\\\"></money-input>\\r\\n                </ion-item>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"form.value.deliveryByDistrict\\\">\\r\\n                <ion-item padding-horizontal>\\r\\n                  <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Informe um bairro para entrega</ion-label>\\r\\n                </ion-item>\\r\\n                <div class=\\\"container-gps\\\">\\r\\n                  <div class=\\\"container-nanocomplete\\\">\\r\\n                    <nano-autocomplete padding-horizontal (updatePlace)=\\\"handleDistrict($event)\\\" [isDistrict]=\\\"true\\\"></nano-autocomplete>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngFor=\\\"let deliveryDistrict of deliveryDistricts\\\" margin-left style=\\\"display: flex\\\">\\r\\n                  <ion-button icon-only fill=\\\"clear\\\" (click)=\\\"removeDistrict(deliveryDistrict)\\\">\\r\\n                    <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                  <ion-badge class=\\\"badge-district\\\">{{deliveryDistrict.location.district}}</ion-badge>\\r\\n                  <money-input class=\\\"input-district\\\" [(number)]=\\\"deliveryDistrict.value\\\"></money-input>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <h5 ion-text text-center margin padding-top>\\r\\n              <strong>TEMPO DE ENTREGA</strong>\\r\\n            </h5>\\r\\n\\r\\n            <!-- Tempo de entrega -->\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Tempo de entrega mínimo (em minutos)</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"timeMin\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item padding-horizontal>\\r\\n              <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Tempo de entrega máximo (em minutos)</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"timeMax\\\"></ion-input>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n\\r\\n          <h5 ion-text text-center margin padding-top>\\r\\n            <strong>FORMA DE PAGAMENTO</strong>\\r\\n          </h5>\\r\\n\\r\\n          <ion-item padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Formas de pagamento permitidas *</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"paymentMethods\\\" multiple=\\\"true\\\" cancelText=\\\"Cancelar\\\" okText=\\\"Ok\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <ion-select-option *ngFor=\\\"let type of typesPayment\\\" [value]=\\\"type.value\\\">{{type.text}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item *ngIf=\\\"hasCard()\\\" padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Bandeiras de cartões</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"cards\\\" multiple=\\\"true\\\" cancelText=\\\"Cancelar\\\" okText=\\\"Ok\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <ion-select-option *ngFor=\\\"let card of cardsFlag\\\" [value]=\\\"card.value\\\">{{card.text}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item *ngIf=\\\"hasFoodStamps()\\\" padding-horizontal>\\r\\n            <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Bandeiras de vales-alimentação</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"cards_food\\\" multiple=\\\"true\\\" cancelText=\\\"Cancelar\\\" okText=\\\"Ok\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <ion-select-option *ngFor=\\\"let card of cardsFoodFlag\\\" [value]=\\\"card.value\\\">{{card.text}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <h5 ion-text text-center padding-top>\\r\\n            <strong>CATEGORIA *</strong>\\r\\n          </h5>\\r\\n          <ion-radio-group formControlName=\\\"type\\\">\\r\\n            <ion-item *ngFor=\\\"let type of filial_types; let i = index \\\">\\r\\n              <ion-label>{{type.name}}\\r\\n                <span ion-text color=\\\"medium\\\">{{type.description}}</span>\\r\\n              </ion-label>\\r\\n              <ion-radio [value]=\\\"type.value\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n\\r\\n          <h5 ion-text text-center padding-top *ngIf=\\\"FilialType.RESTAURANT === form.value.type\\\">\\r\\n            <strong>SUB CATEGORIA DE RESTAURANTE *</strong>\\r\\n          </h5>\\r\\n          <div *ngIf=\\\"FilialType.RESTAURANT === form.value.type\\\">\\r\\n            <ion-item *ngFor=\\\"let type of restaurant_subtypes; let i = index \\\">\\r\\n              <ion-label>{{type.name}}\\r\\n                <span ion-text color=\\\"medium\\\">{{type.description}}</span>\\r\\n              </ion-label>\\r\\n              <ion-checkbox [(ngModel)]=\\\"type.selected\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-checkbox>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n\\r\\n          <h5 ion-text text-center padding-top>\\r\\n            <strong>HORÁRIOS DE FUNCIONAMENTO</strong>\\r\\n          </h5>\\r\\n          <p ion-text text-center>Horários em que o estabelecimento ficará aberto.</p>\\r\\n          <div *ngFor=\\\"let week of ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado']; let i = index\\\"\\r\\n            padding-horizontal>\\r\\n            <h6 ion-text>{{week}}: </h6>\\r\\n            <div class=\\\"flex flex-wrap\\\">\\r\\n              <card-hour-open [businesshours]=\\\"business_hours[i]\\\" (selected)=\\\"editIntervalHours(i, $event)\\\"></card-hour-open>\\r\\n              <ion-card class=\\\"card-hour\\\" tappable (click)=\\\"editIntervalHours(i)\\\">\\r\\n                <ion-icon name=\\\"ios-add-circle-outline\\\" color=\\\"primary\\\" class=\\\"add-interval\\\"></ion-icon>\\r\\n              </ion-card>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <h5 text-center margin padding-top>\\r\\n            <strong>ENDEREÇO</strong>\\r\\n          </h5>\\r\\n\\r\\n          <p ion-text color=\\\"tertiary\\\" padding-horizontal class=\\\"complete-address\\\">Endereço completo</p>\\r\\n          <div class=\\\"container-gps\\\" *ngIf=\\\"!loading\\\">\\r\\n            <div class=\\\"container-nanocomplete\\\">\\r\\n              <nano-autocomplete (updatePlace)=\\\"handlePlace($event)\\\"></nano-autocomplete>\\r\\n            </div>\\r\\n            <div class=\\\"button-gps\\\">\\r\\n              <ion-button fill=\\\"outline\\\" (click)=\\\"getCurrentPosition()\\\">Localização por GPS</ion-button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Localização -->\\r\\n          <nano-address [form]=\\\"form.controls['location']\\\" padding-horizontal></nano-address>\\r\\n\\r\\n          <nano-buttons [canSave]=\\\"form.valid && cardsValid()\\\" [save]=\\\"save.bind(this)\\\" [canRemove]=\\\"filial\\\" [cancel]=\\\"cancel.bind(this)\\\"\\r\\n            [remove]=\\\"remove.bind(this)\\\"></nano-buttons>\\r\\n        </ion-list>\\r\\n      </form>\\r\\n    </nano-loading>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\"","module.exports = \":host ion-list {\\n  color: var(--ion-color-dark-shade); }\\n\\n.text {\\n  margin-top: 0px !important; }\\n\\n.phones col {\\n  background-color: #fff !important; }\\n\\nion-content ion-select {\\n  min-width: 15vw; }\\n\\nion-content .district-item {\\n  display: flex; }\\n\\nion-content .district-item ion-icon {\\n    margin-left: 10px;\\n    line-height: normal; }\\n\\nion-content ion-searchbar {\\n  margin-top: -2.2em;\\n  margin-left: 8px; }\\n\\nion-content .container-gps {\\n  display: flex;\\n  justify-content: flex-start;\\n  flex-wrap: wrap; }\\n\\nion-content .container-gps .container-nanocomplete {\\n    width: calc(100% - 250px);\\n    margin-right: 1em; }\\n\\n@media (max-width: 620px) {\\n      ion-content .container-gps .container-nanocomplete {\\n        width: 100% !important; } }\\n\\nion-content .container-gps .button-gps {\\n    display: flex;\\n    align-items: center; }\\n\\n@media (max-width: 620px) {\\n      ion-content .container-gps .button-gps {\\n        width: 100%;\\n        text-align: center !important; } }\\n\\nion-content ion-select {\\n  padding-left: 8px !important;\\n  margin-right: 16px !important; }\\n\\n.complete-address {\\n  color: var(--ion-color-tertiary); }\\n\\n.badge-district {\\n  font-size: 1.1em;\\n  margin-right: 5px;\\n  margin-bottom: 5px;\\n  padding: 12px 12px;\\n  min-width: 150px; }\\n\\n.input-district {\\n  max-width: 150px;\\n  margin-right: 5px;\\n  margin-bottom: 5px; }\\n\\n@media (max-width: 420px) {\\n    .input-district {\\n      width: 100%;\\n      text-align: center !important;\\n      margin-right: 5px; } }\\n\\n.card-hour {\\n  width: auto;\\n  border-radius: 5px;\\n  padding: 5px 10px;\\n  display: inline-block;\\n  text-align: center; }\\n\\n.card-hour.open {\\n    background: var(--ion-color-success); }\\n\\n.card-hour.closed {\\n    background: #d63231; }\\n\\n.card-hour .text {\\n    font-weight: bold;\\n    color: white; }\\n\\n.add-interval {\\n  font-size: 42px; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Filial, FILIAL_TYPES, FilialType, CARDS, CARDS_FOOD, CardType, CardFoodType, IntervalHours, RESTAURANT_SUBTYPES, FilialSubType, FilialTypeOption } from '../../../../../models/filial';\r\nimport { PaymentMethod } from '../../../../../models/order';\r\nimport { NavController, MenuController, LoadingController, AlertController, ModalController } from '@ionic/angular';\r\nimport { AuthenticationService } from '../../../../services/authentication.service';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { Money } from '../../../../util/money';\r\nimport { SystemService } from '../../../../services/system.service';\r\nimport { PlacesService } from '../../../../services/places.service';\r\nimport { setLongitudeLatitude, elementIsInsideArray } from '../../../../util/util';\r\nimport { Location } from '../../../../../models/utils/location';\r\nimport { Observable, of, combineLatest } from 'rxjs';\r\nimport { flatMap, map, tap, first, switchMap } from 'rxjs/operators';\r\nimport { CascadeRelationship } from '../../../../../modules/firestore/collection';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Company } from '../../../../../models/company';\r\nimport { SelectIntervalHoursPage } from './select-interval-hours/select-interval-hours.page';\r\nimport { firestore } from \"firebase\"\r\nimport \"firebase/firestore\";\r\nimport { DEFAULT_FACILITA_FEE } from '../../../../util/global';\r\n\r\n@Component({\r\n  selector: 'app-filial-edit',\r\n  templateUrl: './filial-edit.page.html',\r\n  styleUrls: ['./filial-edit.page.scss'],\r\n})\r\nexport class FilialEditPage implements OnInit {\r\n\r\n\t/**\r\n\t * Formulário para criação de uma nova filial\r\n\t */\r\n  form: FormGroup;\r\n\r\n\t/**\r\n\t * Dados do produto a ser editado\r\n\t */\r\n  filial: Filial; // undefined se for página de cadastro\r\n\r\n\t/**\r\n\t * Carregando as informações da filial\r\n\t */\r\n  loading: boolean = true;\r\n\r\n  // districtsEnabled: {\r\n  // \tvalue: string,\r\n  // \ttitle: string,\r\n  // \tstate: string,\r\n  // \tcity: string\r\n  // }[] = [];\r\n\r\n  FilialType: typeof FilialType = FilialType\r\n  filial_types: FilialTypeOption[] = FILIAL_TYPES\r\n\r\n  index_current_subtypes: boolean[] = []\r\n  restaurant_subtypes: (FilialSubType & { selected?: boolean })[] = JSON.parse(JSON.stringify(RESTAURANT_SUBTYPES))\r\n\r\n  cardsFlag: any[] = CARDS;\r\n  cardsFoodFlag: any[] = CARDS_FOOD;\r\n\r\n\r\n  typesPayment: any = [\r\n    {\r\n      value: PaymentMethod.credit_card,\r\n      text: 'CRÉDITO'\r\n    },\r\n    {\r\n      value: PaymentMethod.debit_card,\r\n      text: 'DÉBITO'\r\n    },\r\n    {\r\n      value: PaymentMethod.money,\r\n      text: 'DINHEIRO'\r\n    },\r\n    {\r\n      value: PaymentMethod.food_stamps,\r\n      text: 'VALE-ALIMENTAÇÃO'\r\n    }\r\n  ]\r\n\r\n  //Devem ser salvo na filial\r\n  paymentMethods: PaymentMethod[] = [];\r\n  cards: CardType[] = [];\r\n  cards_food: CardFoodType[] = [];\r\n\r\n  company: Company;\r\n\r\n  business_hours: {\r\n    0: IntervalHours[] // Domingo\r\n    1: IntervalHours[] // Segunda\r\n    2: IntervalHours[] // Terça\r\n    3: IntervalHours[] // Quarta\r\n    4: IntervalHours[] // Quinta\r\n    5: IntervalHours[] // Sexta\r\n    6: IntervalHours[] // Sábado\r\n  } = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: [],\r\n    }\r\n\r\n  deliveryDistricts?: {\r\n    location: Location, //representa o bairro\r\n    value: any //valor de delivery\r\n  }[] = [];\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private shared: SharedService,\r\n    private menuCtrl: MenuController,\r\n    private money: Money,\r\n    private system: SystemService,\r\n    private placesProvider: PlacesService,\r\n    private loadingCtrl: LoadingController,\r\n    private alertCtrl: AlertController,\r\n    private ref: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    public modalCtrl: ModalController) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm()\r\n    this.load()\r\n    this.menuCtrl.enable(true);\r\n  }\r\n\r\n  get isTEAM(): boolean {\r\n    return this.shared.isTeam\r\n  }\r\n\r\n\t/**\r\n\t * Inicializar formulário\r\n\t */\r\n  initForm() {\r\n    let defaultTax = DEFAULT_FACILITA_FEE;\r\n\r\n    this.form = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      deliveryByDistrict: new FormControl(false),\r\n      image: new FormControl('', Validators.required),\r\n      cover: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n      type: new FormControl('', Validators.required),\r\n      phone1: new FormControl('', Validators.required),\r\n      phone2: new FormControl(''),\r\n      have_delivery: new FormControl(false),\r\n      delivery: new FormGroup({\r\n        fee: new FormControl(''),\r\n        feeMin: new FormControl(''),\r\n        feeMax: new FormControl(''),\r\n        distanceMax: new FormControl(),\r\n        timeMin: new FormControl(),\r\n        timeMax: new FormControl()\r\n      }),\r\n      orderMin: new FormControl(''),\r\n\r\n      fee: new FormGroup({\r\n        to_facilita: new FormControl(defaultTax)\r\n      }),\r\n      location: new FormGroup({\r\n        street: new FormControl('', Validators.required),\r\n        number: new FormControl('', Validators.required),\r\n        complement: new FormControl(''),\r\n        cep: new FormControl('', Validators.required),\r\n        latitude: new FormControl(''),\r\n        longitude: new FormControl(''),\r\n        district: new FormControl('', Validators.required),\r\n        city: new FormControl('', Validators.required),\r\n        state: new FormControl('', Validators.required),\r\n        country: new FormControl('', Validators.required),\r\n      }),\r\n      stateSelected: new FormControl(\"\"),\r\n      citySelected: new FormControl(\"\"),\r\n      districtSelected: new FormControl(\"\")\r\n    });\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      this.ref.detectChanges();\r\n    })\r\n  }\r\n\r\n\t/**\r\n\t * Carregar restaurante e filial.\r\n\t * Atribuir os valores ao formulário\r\n\t */\r\n  load() {\r\n    this.loading = true\r\n\r\n    let company$: Observable<Company> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (this.shared.isManager)\r\n          return this.shared.company$\r\n        else if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let filial$: Observable<Filial> = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('filial_id'))\r\n          return Filial.object(params.get('filial_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    combineLatest([\r\n      company$.pipe(first()).pipe(tap((company: Company) => {\r\n        this.company = company;\r\n        if (!company) {\r\n          console.error(\"Sem empresa\")\r\n          //this.navCtrl.setRoot(HomePage)\r\n          return;\r\n        }\r\n      })),\r\n      filial$.pipe(first()).pipe(tap((filial: Filial) => {\r\n        this.filial = filial\r\n        console.log(\"Filial\", this.filial)\r\n        //NA EDIÇÃO DE FILIAL\r\n        if (this.filial) {\r\n          if (this.filial.deliveryDistricts) {\r\n            this.deliveryDistricts = this.filial.deliveryDistricts;\r\n          }\r\n          //Settar bandeiras de cartões na edição de filial\r\n          if (this.filial.cards) {\r\n            this.cards = this.filial.cards;\r\n          }\r\n          //Settar métodos de pagamentos na edição da filial\r\n          if (this.filial.paymentMethods) {\r\n            this.paymentMethods = this.filial.paymentMethods;\r\n          }\r\n          //Settar cartões de vales-alimentação na edição da filial\r\n          if (this.filial.cards_food) {\r\n            this.cards_food = this.filial.cards_food;\r\n          }\r\n          // Settar os horários de funcionamento\r\n          if (this.filial.business_hours) {\r\n            this.business_hours = this.filial.business_hours\r\n          }\r\n          //Settar Tipo da filial\r\n          if (this.filial.type === FilialType.RESTAURANT && this.filial.subtypes) {\r\n            this.restaurant_subtypes.forEach(element => {\r\n              element.selected = false;\r\n              for (let st of this.filial.subtypes) {\r\n                if (element.name === st.name) {\r\n                  element.selected = true;\r\n                }\r\n              }\r\n            });\r\n          }\r\n          this.form.patchValue(this.filial);\r\n        }\r\n      }))\r\n    ]).pipe(first()).subscribe(() => {\r\n      this.loading = false\r\n      this.ref.detectChanges()\r\n    }, err => {\r\n      this.loading = false\r\n      this.ref.detectChanges()\r\n      this.system.showErrorAlert(err)\r\n    })\r\n  }\r\n\r\n  changeDelivery() {\r\n    let obj = {\r\n      deliveryByDistrict: !this.form.value.deliveryByDistrict\r\n    }\r\n    this.form.patchValue(obj);\r\n  }\r\n\r\n  async removeDistrict(deliveryDistrict) {\r\n    let confirm = await this.alertCtrl.create({\r\n      header: 'Remoção de bairro',\r\n      message: `Você tem certeza que gostaria de remover o bairro ${deliveryDistrict.location.district}?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar'\r\n        },\r\n        {\r\n          text: 'Confirmar',\r\n          handler: () => {\r\n            let index = this.deliveryDistricts.indexOf(deliveryDistrict);\r\n            this.deliveryDistricts.splice(index, 1);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n  }\r\n\r\n\r\n\t/**\r\n\t * Observable que cria/edita uma filial\r\n\t */\r\n  save(): Observable<void | string> {\r\n    return setLongitudeLatitude(this.form).pipe(flatMap(() => {\r\n      let filialObject: Filial = {};\r\n      filialObject.active = true;\r\n      filialObject = this.form.value;\r\n\r\n      //Salvar bairros de entrega e seus respectivos valores de delivery\r\n      if (this.form.value.deliveryByDistrict && this.deliveryDistricts) {\r\n        //Salvar os valores de delivery de cada bairro como número no DB\r\n        this.deliveryDistricts.forEach(delivery => {\r\n          delivery.value = Number(String(delivery.value).replace(',', '.'));\r\n        });\r\n        filialObject.deliveryDistricts = this.deliveryDistricts;\r\n      }\r\n\r\n      console.log(filialObject)\r\n      if (filialObject.have_delivery) {\r\n        if (!filialObject.deliveryByDistrict) {\r\n          if (!filialObject.delivery.feeMin) filialObject.delivery.feeMin = 0\r\n          if (!filialObject.delivery.feeMax) filialObject.delivery.feeMax = 0\r\n        }\r\n        else {\r\n          if (!filialObject.deliveryDistricts || filialObject.deliveryDistricts.length < 1) {\r\n            throw Error(\"Você precisa definir pelo menos um bairro para entrega\")\r\n          }\r\n        }\r\n      }\r\n\r\n      //Formas de pagamento aceitas pela filial\r\n      if (this.paymentMethods) {\r\n        filialObject.paymentMethods = this.paymentMethods;\r\n      }\r\n\r\n      //Bandeiras aceitas pela filial\r\n      if (this.cards) {\r\n        filialObject.cards = this.cards;\r\n      }\r\n\r\n      // Horários de funcionamento\r\n      if (this.business_hours) {\r\n        filialObject.business_hours = this.business_hours\r\n      }\r\n\r\n      //Bandeiras de vales-alimentação\r\n      if (this.cards_food) {\r\n        filialObject.cards_food = this.cards_food;\r\n      }\r\n\r\n      // Ajustar geopoint para ser usado em consultas\r\n      if (filialObject.location && filialObject.location.latitude && filialObject.location.longitude) {\r\n        filialObject.location.geopoint = new firestore.GeoPoint(filialObject.location.latitude, filialObject.location.longitude)\r\n      }\r\n\r\n      filialObject.subtypes = this.restaurant_subtypes.filter((subtype) => subtype.selected)\r\n\r\n      //Editar filial existente\r\n      if (this.filial) {\r\n        return Filial.update(this.filial.id, filialObject)\r\n          .pipe(tap(() => {\r\n            this.goToFilialList()\r\n          }))\r\n      }\r\n      //Adicionar nova filial\r\n      else {\r\n        return Filial.add(filialObject, [\r\n          {\r\n            relationship: Filial.company,\r\n            id: this.company.id\r\n          }\r\n        ])\r\n          .pipe(tap(() => {\r\n            this.goToFilialList()\r\n          }))\r\n      }\r\n    }))\r\n  }\r\n\r\n\t/**\r\n\t * Remove produto do database\r\n\t */\r\n  remove(): Observable<void> {\r\n    if (!this.filial) return;\r\n    //Verificar se a filial possui funcionários antes de remover\r\n    return Filial.user_employees.list(this.filial.id)\r\n      .pipe(map(objs => objs.map(obj => obj.id)))\r\n      .pipe(tap((keys: string[]) => {\r\n        if (keys && keys.length > 0) {\r\n          throw Error(\"A filial que possui funcionários não pode ser removida\")\r\n        }\r\n      }))\r\n      .pipe(flatMap(() => {\r\n        //Obter todos os ID's dos relacionamento product_stock\r\n        return Filial.product_stock.listRelation(this.filial.id)\r\n          .pipe(map(objs => objs.map(obj => obj.id)))\r\n          .pipe(flatMap((ids: string[]) => {\r\n            let relationships: CascadeRelationship[] = [];\r\n\r\n            //Adicionar o relacionamento 11 com uma empresa\r\n            relationships.push({\r\n              relationship: Filial.company,\r\n              removeId: this.filial.company.id\r\n            });\r\n\r\n            //Adicionar todos os relacionamentos com o menu para ser removidos bidirecionalmente\r\n            ids.forEach(id => {\r\n              relationships.push({\r\n                relationship: Filial.product_stock,\r\n                removeId: id\r\n              })\r\n            });\r\n            return Filial.remove(this.filial.id, relationships);\r\n          }))\r\n      }))\r\n      .pipe(tap(() => {\r\n        this.goToFilialList()\r\n      }))\r\n  }\r\n\r\n\t/**\r\n\t * Verifica se em um array de intervalos existe um intervalo dentro do outro. Se existir, une eles.\r\n\t * @param intervals Array de intervalos\r\n\t */\r\n  mergeIntervals(intervals: IntervalHours[]): IntervalHours[] {\r\n    for (let i = 0; i < intervals.length; i++) {\r\n      for (let j = i + 1; j < intervals.length; j++) {\r\n        if (intervals[i].start >= intervals[j].start && intervals[i].start <= intervals[j].end ||\r\n          intervals[i].end <= intervals[j].end && intervals[i].end >= intervals[j].start ||\r\n          intervals[j].start >= intervals[i].start && intervals[j].start <= intervals[i].end ||\r\n          intervals[j].end <= intervals[i].end && intervals[j].end >= intervals[i].start) {\r\n\r\n          if (intervals[j].start < intervals[i].start) {\r\n            intervals[i].start = intervals[j].start\r\n          }\r\n\r\n          if (intervals[j].end > intervals[i].end) {\r\n            intervals[i].end = intervals[j].end;\r\n          }\r\n          intervals.splice(j, 1);\r\n          return this.mergeIntervals(intervals)\r\n        }\r\n      }\r\n    }\r\n    return intervals\r\n  }\r\n\r\n\t/**\r\n\t * Realiza a edição de um intervalo ou cria um novo intervalo.\r\n\t * @param week Dia da semana\r\n\t * @param id Id no array de intervalos se for edição de intervalo\r\n   * @todo COMO CRIAR MODAL\r\n\t */\r\n  async editIntervalHours(week: number, id?: number) {\r\n    let modal = await this.modalCtrl.create({\r\n      component: SelectIntervalHoursPage,\r\n      componentProps: {\r\n        interval: id !== undefined ? this.business_hours[week][id] : undefined\r\n      }\r\n\r\n    })\r\n    modal.present();\r\n    let data: IntervalHours = (await modal.onDidDismiss()).data;\r\n\r\n    if (data) {\r\n      if (id !== undefined) this.business_hours[week].splice(id, 1)\r\n      if (data.open) {\r\n        this.business_hours[week].push(data)\r\n        this.business_hours[week] = this.mergeIntervals(this.business_hours[week])\r\n      }\r\n    }\r\n  }\r\n\r\n  async getCurrentPosition() {\r\n    let loading = await this.loadingCtrl.create({});\r\n    loading.present();\r\n    this.placesProvider.getCurrentLocation().pipe(first()).subscribe((location: Location) => {\r\n      location.isGps = true;\r\n      let loc: any = {};\r\n      loc.location = location;\r\n      this.form.patchValue(loc);\r\n      loading.dismiss();\r\n    }, error => {\r\n      this.system.showErrorAlert(error);\r\n      loading.dismiss();\r\n    })\r\n  }\r\n\r\n  detect() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  hasFoodStamps() {\r\n    return elementIsInsideArray(PaymentMethod.food_stamps, this.paymentMethods);\r\n  }\r\n\r\n  hasCard() {\r\n    return elementIsInsideArray(PaymentMethod.credit_card, this.paymentMethods) || elementIsInsideArray(PaymentMethod.debit_card, this.paymentMethods);\r\n  }\r\n\r\n  amountFeeMinChange(valor) {\r\n    this.form.patchValue({ delivery: { feeMin: this.money.detectAmount(valor) } })\r\n  }\r\n  amountFeeChange(valor) {\r\n    this.form.patchValue({ delivery: { fee: this.money.detectAmount(valor) } })\r\n  }\r\n  amountFeeMaxChange(valor) {\r\n    this.form.patchValue({ delivery: { feeMax: this.money.detectAmount(valor) } })\r\n  }\r\n\r\n  handlePlace(location) {\r\n    let loc: any = {};\r\n    loc.location = location;\r\n    this.form.patchValue(loc);\r\n  }\r\n\r\n  async handleDistrict(location: Location) {\r\n    let districtExist: boolean = false;\r\n    this.deliveryDistricts.forEach(delivery => {\r\n      if (delivery.location.city == location.city && delivery.location.district == location.district) {\r\n        districtExist = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (districtExist) {\r\n      let alert = await this.alertCtrl.create({\r\n        header: 'Ops!',\r\n        subHeader: 'Bairro já cadastrado!',\r\n        buttons: ['OK']\r\n      });\r\n      alert.present();\r\n      return;\r\n    }\r\n\r\n    this.deliveryDistricts.push({\r\n      location: location,\r\n      value: 0.0\r\n    })\r\n\r\n    //Recalcula os elemntos da view (detectando as alterações no array)\r\n    this.ref.detectChanges();\r\n  }\r\n  goToFilialList() {\r\n    this.navCtrl.navigateRoot(['filial/list', { company_id: this.company.id }]);\r\n  }\r\n\t/**\r\n\t * Cancela a edição/criação\r\n\t */\r\n  cancel() {\r\n    this.goToFilialList();\r\n  }\r\n\r\n  cardsValid() {\r\n    return ((this.hasCard() ? !!this.cards[0] : true) &&\r\n      (this.hasFoodStamps() ? !!this.cards_food[0] : true));\r\n  }\r\n}","module.exports = \"<ion-header>\\r\\n\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Intervalo de tempo</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content padding class=\\\"form-content\\\">\\r\\n  <ion-list>\\r\\n    <ion-item>\\r\\n      <ion-label>Hora inicial</ion-label>\\r\\n      <ion-select [(ngModel)]=\\\"interval.start\\\">\\r\\n        <ion-select-option *ngFor=\\\"let hour of HOURS\\\" [value]=\\\"hour\\\">{{hour}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Hora final</ion-label>\\r\\n      <ion-select [(ngModel)]=\\\"interval.end\\\">\\r\\n        <ion-select-option *ngFor=\\\"let hour of HOURS\\\" [value]=\\\"hour\\\">{{hour}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <p ion-text text-center color=\\\"primary\\\" *ngIf=\\\"check_invalid_interval\\\">A hora final deve ser após a hora inicial</p>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-footer>\\r\\n  <nano-buttons [canSave]=\\\"valid\\\" [save]=\\\"success.bind(this)\\\" [canRemove]=\\\"canRemove\\\" [remove]=\\\"remove.bind(this)\\\"\\r\\n    [cancel]=\\\"dismiss.bind(this)\\\"></nano-buttons>\\r\\n</ion-footer>\"","module.exports = \"ion-footer {\\n  background: var(--ion-color-light); }\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IntervalHours } from '../../../../../../models/filial';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-select-interval-hours',\r\n  templateUrl: './select-interval-hours.page.html',\r\n  styleUrls: ['./select-interval-hours.page.scss'],\r\n})\r\nexport class SelectIntervalHoursPage implements OnInit {\r\n\r\n  HOURS: string[] = HALF_HOURS\r\n\r\n  canRemove: boolean = false;\r\n\r\n  @Input()\r\n  interval: IntervalHours\r\n\r\n  constructor(public modalCtrl: ModalController) { }\r\n\r\n  ngOnInit() {\r\n    if (this.interval) {\r\n      this.canRemove = true\r\n    }\r\n    else {\r\n      this.interval = {\r\n        start: \"\",\r\n        end: \"\",\r\n        open: true\r\n      }\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  /**\r\n   * passa o booleano open como false para que façam a remoção desse intervalo\r\n   */\r\n  remove() {\r\n    this.interval.open = false;\r\n    this.modalCtrl.dismiss(this.interval)\r\n  }\r\n\r\n  success() {\r\n    this.modalCtrl.dismiss(this.interval)\r\n  }\r\n\r\n  /**\r\n   * Verifica se foi selecionado um Horário de fim antes do Horário de inicio\r\n   */\r\n  get check_invalid_interval(): boolean {\r\n    return this.interval.start && this.interval.end && this.interval.end <= this.interval.start\r\n  }\r\n\r\n  /**\r\n   * Verifica se foram selecionados e se o intervalo está correto\r\n   */\r\n  get valid(): boolean {\r\n    return this.interval.start && this.interval.end && this.interval.start < this.interval.end\r\n  }\r\n}\r\n\r\n\r\nconst HALF_HOURS: string[] = [\r\n  \"00:00\", \"00:30\", \"01:00\", \"01:30\",\r\n  \"02:00\", \"02:30\", \"03:00\", \"03:30\",\r\n  \"04:00\", \"04:30\", \"05:00\", \"05:30\",\r\n  \"06:00\", \"06:30\", \"07:00\", \"07:30\",\r\n  \"08:00\", \"08:30\", \"09:00\", \"09:30\",\r\n  \"10:00\", \"10:30\", \"11:00\", \"11:30\",\r\n  \"12:00\", \"12:30\", \"13:00\", \"13:30\",\r\n  \"14:00\", \"14:30\", \"15:00\", \"15:30\",\r\n  \"16:00\", \"16:30\", \"17:00\", \"17:30\",\r\n  \"18:00\", \"18:30\", \"19:00\", \"19:30\",\r\n  \"20:00\", \"20:30\", \"21:00\", \"21:30\",\r\n  \"22:00\", \"22:30\", \"23:00\", \"23:30\",\r\n  \"24:00\"\r\n]","/**\r\n * Porcentagem padrão do consumo que é convertido em dinheiro para o facilita\r\n */\r\nexport const DEFAULT_FACILITA_FEE: number = 0.08;"],"sourceRoot":""}