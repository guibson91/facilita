{"version":3,"sources":["webpack:///./src/app/panel/pages/statistic/statistic-orders/statistic-orders.module.ts","webpack:///./src/app/panel/pages/statistic/statistic-orders/statistic-orders.page.html","webpack:///./src/app/panel/pages/statistic/statistic-orders/statistic-orders.page.scss","webpack:///./src/app/panel/pages/statistic/statistic-orders/statistic-orders.page.ts"],"names":[],"mappings":"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","file":"panel-pages-statistic-statistic-orders-statistic-orders-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { StatisticOrdersPage } from './statistic-orders.page';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StatisticOrdersPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [StatisticOrdersPage]\r\n})\r\nexport class StatisticOrdersPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Relatório de vendas\\\" icon=\\\"menus-icon-ecommerce-12\\\">\\r\\n  </nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <nano-loading [loading]=\\\"loading\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col col6 *ngFor=\\\"let item of orderStatistics; let i = index\\\" class=\\\"content-month\\\" no-padding>\\r\\n          <ion-list no-padding>\\r\\n            <span class=\\\"month-title\\\" ion-text padding>{{item.id_name}}</span>\\r\\n            <ion-item no-lines>\\r\\n              <div>\\r\\n                <h5 ion-text text-wrap no-margin>\\r\\n                  <strong> Vendas </strong>\\r\\n                </h5>\\r\\n                <p ion-text text-wrap no-margin class=\\\"description\\\">Valor bruto captado de todos os pedidos, correspondente a receita em\\r\\n                  <strong>caixa</strong> ou em forma de\\r\\n                  <strong>bônus</strong>.</p>\\r\\n              </div>\\r\\n              <h5 ion-text item-right text-wrap class=\\\"green\\\" slot=\\\"end\\\">\\r\\n                <strong> R$ {{item.done.subtotal + item.done.delivery | number : '1.2-2'}}</strong>\\r\\n              </h5>\\r\\n            </ion-item>\\r\\n            <ion-item no-lines>\\r\\n              <div>\\r\\n                <h5 ion-text text-wrap no-margin>\\r\\n                  <strong> Caixa </strong>\\r\\n                </h5>\\r\\n                <p ion-text text-wrap no-margin class=\\\"description\\\">Valor recebido do consumidor em dinheiro, cartão de crédito e débito ou\\r\\n                  vale-alimentação.</p>\\r\\n              </div>\\r\\n              <h5 ion-text item-right text-wrap slot=\\\"end\\\">\\r\\n                <strong> R$ {{item.done.subtotal + item.done.delivery - item.done.discounts -\\r\\n                  item.done.discountsFromTeam | number : '1.2-2'}}</strong>\\r\\n              </h5>\\r\\n            </ion-item>\\r\\n            <ion-item no-lines>\\r\\n              <div>\\r\\n                <h5 ion-text text-wrap no-margin>\\r\\n                  <strong> Cupom da empresa </strong>\\r\\n                </h5>\\r\\n                <p ion-text text-wrap no-margin class=\\\"description\\\">Valor recebido do consumidor em\\r\\n                  <strong>cupom</strong> criado pela empresa.</p>\\r\\n              </div>\\r\\n              <h5 ion-text item-right text-wrap slot=\\\"end\\\">\\r\\n                <strong> R$ {{item.done.discounts | number : '1.2-2'}}</strong>\\r\\n              </h5>\\r\\n            </ion-item>\\r\\n            <ion-item no-lines>\\r\\n              <div>\\r\\n                <h5 ion-text text-wrap no-margin>\\r\\n                  <strong> Cupom do Facilita </strong>\\r\\n                </h5>\\r\\n                <p ion-text text-wrap no-margin class=\\\"description\\\">Valor recebido do consumidor em\\r\\n                  <strong>cupom</strong> criado pelo Facilita. Esse valor será abatido da fatura.</p>\\r\\n              </div>\\r\\n              <h5 ion-text item-right text-wrap slot=\\\"end\\\">\\r\\n                <strong> R$ {{item.done.discountsFromTeam | number : '1.2-2'}}</strong>\\r\\n              </h5>\\r\\n            </ion-item>\\r\\n            <ion-item no-lines>\\r\\n              <div>\\r\\n                <h5 ion-text text-wrap no-margin>\\r\\n                  <strong> Pedidos incompletos </strong>\\r\\n                </h5>\\r\\n                <p ion-text text-wrap no-margin class=\\\"description\\\">Pedidos que foram aceitos, mas por algum motivo foram cancelados pela gerência da\\r\\n                  empresa.</p>\\r\\n              </div>\\r\\n              <h5 ion-text item-right text-wrap slot=\\\"end\\\">\\r\\n                <strong> R$ {{item.incomplete.subtotal + item.incomplete.delivery | number : '1.2-2'}}</strong>\\r\\n              </h5>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-card class=\\\"content-card\\\" text-center padding *ngIf=\\\"!existsInvoice\\\">\\r\\n      <p>Você ainda não possui estatística de venda</p>\\r\\n    </ion-card>\\r\\n\\r\\n  </nano-loading>\\r\\n</ion-content>\"","module.exports = \".content-month {\\n  --background: white;\\n  background: white;\\n  min-width: 278px;\\n  margin: 10px;\\n  box-shadow: 1px 1px 10px #ccc; }\\n  .content-month h2.text {\\n    margin-top: 0px !important; }\\n  .content-month .month-title {\\n    background: var(--ion-color-primary);\\n    text-transform: capitalize;\\n    color: white;\\n    display: block;\\n    text-align: center;\\n    font-size: 20px; }\\n  .content-month .info {\\n    padding: 10px;\\n    display: flex;\\n    justify-content: space-between;\\n    border-bottom: 0.55px solid #ddd; }\\n  .content-month .info:last-child {\\n      border: none; }\\n  .content-month .info .info-name {\\n      width: 75%; }\\n  .content-month .info .info-value {\\n      white-space: nowrap;\\n      display: flex;\\n      align-items: center; }\\n  ion-item {\\n  --background: white;\\n  padding-top: 20px; }\\n  ion-list {\\n  --background: white;\\n  background: white;\\n  margin-bottom: 20px; }\\n  .green {\\n  color: var(--ion-color-success-shade); }\\n  .description {\\n  color: var(--ion-color-medium-shade); }\\n\"","import { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { of, combineLatest, Subscription } from 'rxjs';\r\nimport { OrderStatistics } from '../../../../../models/statistics/order-statistic';\r\nimport { MenuController, NavController } from '@ionic/angular';\r\nimport { SharedService } from '../../../../services/shared.service';\r\nimport { SystemService } from '../../../../services/system.service';\r\nimport { AuthenticationService } from '../../../../services/authentication.service';\r\nimport { Filial } from '../../../../../models/filial';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap, first, map } from 'rxjs/operators';\r\nimport { Company } from '../../../../../models/company';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-statistic-orders',\r\n  templateUrl: './statistic-orders.page.html',\r\n  styleUrls: ['./statistic-orders.page.scss'],\r\n})\r\nexport class StatisticOrdersPage implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Se está carregando os elementos da página\r\n   */\r\n  loading: boolean = true\r\n\r\n  /**\r\n   * Se existe alguma fatura\r\n   */\r\n  existsInvoice: boolean = true\r\n\r\n  /**\r\n   * Order statistics, estatísticas aglomeradas sobre os pedidos\r\n   */\r\n  orderStatistics: OrderStatistics[]\r\n\r\n  orderStatisticsSubscription: Subscription\r\n\r\n  constructor(public menuCtrl: MenuController,\r\n    public shared: SharedService,\r\n    public system: SystemService,\r\n    private ref: ChangeDetectorRef,\r\n    public route: ActivatedRoute,\r\n    public authentication: AuthenticationService,\r\n    public navCtrl: NavController) { }\r\n\r\n  /**\r\n\t * Inicializando estruturas após entrar na página.\r\n\t */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true);\r\n    this.load();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.orderStatisticsSubscription) this.orderStatisticsSubscription.unsubscribe()\r\n  }\r\n\r\n\t/**\r\n\t * Carrega a lista da página\r\n\t */\r\n  load() {\r\n    this.loading = true\r\n    this.existsInvoice = true\r\n\r\n    let company$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    let filial$ = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('filial_id'))\r\n          return Filial.object(params.get('filial_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n\r\n    if (this.orderStatisticsSubscription) this.orderStatisticsSubscription.unsubscribe()\r\n    this.orderStatisticsSubscription = combineLatest([\r\n      company$,\r\n      filial$\r\n    ])\r\n      .pipe(switchMap((arr: [Company, Filial]) => {\r\n        let company = arr[0]\r\n        let filial = arr[1]\r\n\r\n        if (filial) return of([filial])\r\n        else if (company) return Company.filials.list(company.id, undefined, undefined, undefined, true)\r\n        else return Filial.list(undefined, undefined, undefined, true)\r\n      }))\r\n      .pipe(first())\r\n      .pipe(switchMap((filials: Filial[]) => {\r\n        return of(filials)\r\n          .pipe(switchMap((filials: Filial[]) => {\r\n            if (!filials || filials.length <= 0) return of([])\r\n            return combineLatest(filials.map((filial: Filial) => OrderStatistics.getMonths(filial.id)))\r\n              .pipe(first())\r\n              .pipe(map((filialsStatistics: OrderStatistics[][]) => [].concat.apply([], filialsStatistics)))\r\n          }))\r\n          .pipe(map((statistics: OrderStatistics[]) => {\r\n            let months: {\r\n              [key: string]: OrderStatistics\r\n            } = {}\r\n            /**\r\n             * Fazendo o merge das estatística de todas as estatisticas diferentes agrupadas por mês\r\n             */\r\n            for (let statistic of statistics) {\r\n              months[statistic.id] = OrderStatistics.join(statistic, months[statistic.id])\r\n            }\r\n            let aux: OrderStatistics[] = []\r\n            for (let month in months) {\r\n              months[month].id_name = this.getStringMonth(months[month].id.split('-')[1])\r\n              aux.push(months[month])\r\n            }\r\n\r\n            console.log(\"Aux\", aux)\r\n            return aux.reverse()\r\n          }))\r\n      }))\r\n      .subscribe((ordersStatistics: OrderStatistics[]) => {\r\n        if (!ordersStatistics || ordersStatistics.length <= 0) this.existsInvoice = false\r\n        else this.existsInvoice = true\r\n        this.orderStatistics = ordersStatistics\r\n        this.loading = false\r\n        this.ref.detectChanges()\r\n      }, err => {\r\n        this.loading = false\r\n        this.ref.detectChanges()\r\n        this.system.showErrorAlert(err);\r\n\r\n      })\r\n  }\r\n\r\n  getStringMonth(id: string) {\r\n    moment.locale('pt-BR');\r\n    return moment({ month: Number(id) - 1 }).format('MMMM')\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}