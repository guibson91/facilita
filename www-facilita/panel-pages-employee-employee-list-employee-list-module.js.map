{"version":3,"sources":["webpack:///./src/app/panel/pages/employee/employee-list/employee-list.module.ts","webpack:///./src/app/panel/pages/employee/employee-list/employee-list.page.html","webpack:///./src/app/panel/pages/employee/employee-list/employee-list.page.scss","webpack:///./src/app/panel/pages/employee/employee-list/employee-list.page.ts"],"names":[],"mappings":"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","file":"panel-pages-employee-employee-list-employee-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EmployeeListPage } from './employee-list.page';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { GlobalComponentsModule } from '../../../../components/global-components.module';\r\nimport { PanelComponentsModule } from '../../../components/panel-components.module';\r\nimport { PipesModule } from '../../../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeeListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PanelComponentsModule,\r\n    GlobalComponentsModule,\r\n    NgPipesModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [EmployeeListPage]\r\n})\r\nexport class EmployeeListPageModule { }\r\n","module.exports = \"<ion-header no-border>\\r\\n  <nano-navbar title=\\\"Funcionários\\\" icon=\\\"menus-icon-servant-outline\\\" [helpPage]=\\\"8\\\">\\r\\n  </nano-navbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <ion-card class=\\\"content-card\\\">\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchString\\\" placeholder=\\\"Pesquisar\\\" (ionChange)=\\\"detect()\\\">\\r\\n    </ion-searchbar>\\r\\n\\r\\n    <nano-loading [loading]=\\\"loading\\\">\\r\\n      <ion-list>\\r\\n\\r\\n        <ion-item no-lines padding *ngFor=\\\"let employee of employees | filterBy:['name']:searchString\\\" text-wrap>\\r\\n          <!-- Imagem -->\\r\\n          <nano-thumb item-left large=\\\"true\\\" [src]=\\\"employee.image\\\" [kind]=\\\"'person'\\\"></nano-thumb>\\r\\n          <!-- Nome -->\\r\\n          <h5 ion-text><b>{{employee.name}}</b></h5>\\r\\n\\r\\n          <!-- Filial alocada -->\\r\\n          <h5 ion-text padding-horizontal>{{filials[employee.filial_employee?.id]?.name || \\\"Gerente geral\\\"}}</h5>\\r\\n          <!-- Função -->\\r\\n          <h5 ion-text padding-horizontal>{{employee.permissions | printPermission}}</h5>\\r\\n\\r\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"edit(employee)\\\" color=\\\"proceed\\\">\\r\\n            <ion-icon name=\\\"md-create\\\"></ion-icon> Editar\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item text-center padding *ngIf=\\\"!existsEmployees\\\">\\r\\n          <p ion-text>Você ainda não possui nenhum funcionário</p>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </nano-loading>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { Filial } from '../../../../../models/filial';\r\nimport { User } from '../../../../../models/user';\r\nimport { of, Subscription, combineLatest } from 'rxjs';\r\nimport { NavController, MenuController } from '@ionic/angular';\r\nimport { first, flatMap, tap, switchMap } from 'rxjs/operators';\r\nimport { Company } from '../../../../../models/company';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.page.html',\r\n  styleUrls: ['./employee-list.page.scss'],\r\n})\r\nexport class EmployeeListPage implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Capta o que foi digitado pelo usuário no campo de pesquisa\r\n   */\r\n  searchString: string = \"\";\r\n\r\n  filials: { [id: string]: Filial } = {};\r\n\r\n  /**\r\n   * Lista de funcionários de determinada empresa\r\n   */\r\n  employees: User[];\r\n\r\n  initSubscription: Subscription;\r\n\r\n  /**\r\n   * Empresa atual\r\n   */\r\n  company: Company;\r\n\r\n  /**\r\n   * Se está carregando os elementos da página.\r\n   */\r\n  loading: boolean = true;\r\n\r\n  /**\r\n   * Se não possui funcionários\r\n   * Se após baixar não vier funcuionários aí sim podemos garantir que não existem funcionários atualmente.\r\n   * Usada para mostrar mensagem \"Você ainda não possui funcionários\".\r\n   */\r\n  existsEmployees: boolean = true;\r\n\r\n\r\n  constructor(public navCtrl: NavController,\r\n    private ref: ChangeDetectorRef,\r\n    private menuCtrl: MenuController,\r\n    private route: ActivatedRoute) { }\r\n\r\n  /**\r\n   * Inicializando estruturas após entrar na página.\r\n   */\r\n  ngOnInit(): void {\r\n    this.menuCtrl.enable(true);\r\n    this.loading = true;\r\n    this.existsEmployees = true\r\n\r\n    this.initSubscription = this.route.paramMap\r\n      .pipe(switchMap((params: ParamMap) => {\r\n        if (params.get('company_id'))\r\n          return Company.object(params.get('company_id'))\r\n        else\r\n          return of(null)\r\n      }))\r\n      .pipe(first())\r\n      .pipe(flatMap((company) => {\r\n        if (!company) throw Error(\"Lista de funcionários sem ter definido a empresa\")\r\n        this.company = company\r\n\r\n        let employees$ = Company.user_employees.list(company.id)\r\n          .pipe(tap((employees: User[]) => {\r\n            // Verificar se não existe funcionários.\r\n            if (employees && employees.length === 0) {\r\n              this.existsEmployees = false;\r\n            } else {\r\n              this.existsEmployees = true;\r\n            }\r\n          }))\r\n        let filials$ = company ? Company.filials\r\n          .list(company.id) : of([]);\r\n\r\n        return combineLatest([\r\n          employees$,\r\n          filials$\r\n        ])\r\n      }))\r\n      .subscribe((arr: [User[], Filial[]]) => {\r\n        this.employees = arr[0]\r\n        let filials = arr[1]\r\n        this.filials = {}\r\n        for (let filial of filials) {\r\n          this.filials[filial.id] = filial\r\n        }\r\n        // Não está mais carregando.\r\n        this.loading = false;\r\n        console.log(\"O que aconteceu\", this.employees, this.filials)\r\n        this.ref.detectChanges()\r\n      })\r\n  }\r\n\r\n  detect() {\r\n    this.ref.detectChanges()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.initSubscription) this.initSubscription.unsubscribe()\r\n  }\r\n\r\n  add() {\r\n    this.navCtrl.navigateRoot(['employee/edit', { company_id: this.company.id }]);\r\n  }\r\n\r\n  edit(employee: User) {\r\n    this.navCtrl.navigateRoot(['employee/edit', { company_id: this.company.id, employee_id: employee.id }]);\r\n  }\r\n\r\n}"],"sourceRoot":""}